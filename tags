!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
"_ddgg	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal "_ddgg$/;"	m
#	plugin/space.vim	/^    noremap <expr> <silent> #  <SID>setup_space("search", "#")$/;"	m
#	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> #  <SID>setup_space("search", "#")$/;"	m
*	plugin/space.vim	/^    noremap <expr> <silent> *  <SID>setup_space("search", "*")$/;"	m
*	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> *  <SID>setup_space("search", "*")$/;"	m
,	plugin/space.vim	/^    noremap <expr> <silent> , <SID>setup_space("char", ",")$/;"	m
,	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> , <SID>setup_space("char", ",")$/;"	m
,ca	junk/NERD_commenter.vim	/^        nmap ,ca <plug>NERDCommenterAltDelims$/;"	m
,ca	src/nerdcommenter/plugin/NERD_commenter.vim	/^        nmap ,ca <plug>NERDCommenterAltDelims$/;"	m
.-argument	src/vimtlib/plugin/trag.vim	/^implicit .-argument is prepended)$/;"	m
06l	sessions/default.vim	/^normal! 06l$/;"	m
:	plugin/tComment.vim	/^map: <c-_>i or <c-_>I$/;"	m
:	src/vimtlib/plugin/tComment.vim	/^map: <c-_>i or <c-_>I$/;"	m
;	plugin/space.vim	/^    noremap <expr> <silent> ; <SID>setup_space("char", ";")$/;"	m
;	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> ; <SID>setup_space("char", ";")$/;"	m
<2-leftmouse>	src/vimtlib/ftplugin/glark.vim	/^inoremap <silent> <buffer> <2-leftmouse> <c-o>:call GlarkJump('')<cr>$/;"	m
<2-leftmouse>	src/vimtlib/ftplugin/glark.vim	/^noremap  <silent> <buffer> <2-leftmouse> :call GlarkJump('')<cr>$/;"	m
<BS>	junk/simple_pairs.vim	/^inoremap <silent> <BS> <C-R>=<SID>Backspace()<CR>$/;"	m
<BS>	plugin/space.vim	/^noremap <expr> <silent> <BS>      <SID>do_space(1, "<BS>")$/;"	m
<BS>	src/vim-space/plugin/space.vim	/^noremap <expr> <silent> <BS>      <SID>do_space(1, "<BS>")$/;"	m
<C-G>S	bundle/vim-surround/plugin/surround.vim	/^  imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>S	junk/surround.vim	/^    imap        <C-G>S <Plug>ISurround$/;"	m
<C-G>s	bundle/vim-surround/plugin/surround.vim	/^  imap      <C-G>s <Plug>Isurround$/;"	m
<C-G>s	junk/surround.vim	/^    imap        <C-G>s <Plug>Isurround$/;"	m
<C-S>	bundle/vim-surround/plugin/surround.vim	/^    imap    <C-S> <Plug>Isurround$/;"	m
<C-S>	junk/surround.vim	/^        imap     <C-S> <Plug>Isurround$/;"	m
<C-W><C-]>	ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-W><C-]>  :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W><C-]>	src/vim-cucumber/ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-W><C-]>  :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>]	ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-W>]      :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>]	src/vim-cucumber/ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-W>]      :<C-U>exe <SID>jump('split',v:count)<CR>$/;"	m
<C-W>}	ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-W>}      :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
<C-W>}	src/vim-cucumber/ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-W>}      :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
<C-]>	ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-]>       :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
<C-]>	src/vim-cucumber/ftplugin/cucumber.vim	/^  nmap <silent><buffer> <C-]>       :<C-U>exe <SID>jump('edit',v:count)<CR>$/;"	m
<C-_>	junk/vimacs-0.93.vim	/^inoremap <C-_> <C-o>u$/;"	m
<C-a>	junk/vimacs-0.93.vim	/^cmap <C-a> <Home>$/;"	m
<C-a>	junk/vimacs-0.93.vim	/^imap <C-a> <Home>$/;"	m
<C-a>	junk/vimacs-0.93.vim	/^omap <C-a> <Home>$/;"	m
<C-a>	junk/vimacs-0.93.vim	/^vmap <C-a> <Home>$/;"	m
<C-b>	junk/vimacs-0.93.vim	/^cmap <C-b> <Left>$/;"	m
<C-b>	junk/vimacs-0.93.vim	/^imap <C-b> <Left>$/;"	m
<C-b>	junk/vimacs-0.93.vim	/^omap <C-b> <Left>$/;"	m
<C-b>	junk/vimacs-0.93.vim	/^vmap <C-b> <Left>$/;"	m
<C-d>	junk/vimacs-0.93.vim	/^cmap <C-d> <Del>$/;"	m
<C-d>	junk/vimacs-0.93.vim	/^inoremap <C-d> <Del>$/;"	m
<C-d>	junk/vimacs-0.93.vim	/^onoremap <C-d> <Del>$/;"	m
<C-d>	junk/vimacs-0.93.vim	/^vnoremap <C-d> <Del>$/;"	m
<C-e>	junk/vimacs-0.93.vim	/^cmap <C-e> <End>$/;"	m
<C-e>	junk/vimacs-0.93.vim	/^imap <C-e> <End>$/;"	m
<C-e>	junk/vimacs-0.93.vim	/^omap <C-e> <End>$/;"	m
<C-e>	junk/vimacs-0.93.vim	/^vmap <C-e> <End>$/;"	m
<C-f>	junk/vimacs-0.93.vim	/^cmap <C-f> <Right>$/;"	m
<C-f>	junk/vimacs-0.93.vim	/^imap <C-f> <Right>$/;"	m
<C-f>	junk/vimacs-0.93.vim	/^omap <C-f> <Right>$/;"	m
<C-f>	junk/vimacs-0.93.vim	/^vmap <C-f> <Right>$/;"	m
<C-k>	junk/vimacs-0.93.vim	/^cnoremap <C-k> <C-f>d$<C-c><End>$/;"	m
<C-n>	junk/vimacs-0.93.vim	/^imap <C-n> <Down>$/;"	m
<C-n>	junk/vimacs-0.93.vim	/^omap <C-n> <Down>$/;"	m
<C-n>	junk/vimacs-0.93.vim	/^vmap <C-n> <Down>$/;"	m
<C-p>	junk/vimacs-0.93.vim	/^imap <C-p> <Up>$/;"	m
<C-p>	junk/vimacs-0.93.vim	/^omap <C-p> <Up>$/;"	m
<C-p>	junk/vimacs-0.93.vim	/^vmap <C-p> <Up>$/;"	m
<CR>	plugin/fuzzyfinder.vim	/^  cmap <silent> <expr> <CR> <SID>OnCmdCR()$/;"	m
<CR>	plugin/space.vim	/^    cnoremap <expr> <CR> <SID>parse_cmd_line()$/;"	m
<CR>	src/vim-space/plugin/space.vim	/^    cnoremap <expr> <CR> <SID>parse_cmd_line()$/;"	m
<Esc>	junk/colorize.vim	/^inoremap <Esc> <Esc>:highlight Normal guibg=Sys_Window<cr> $/;"	m
<Esc>	junk/vimacs-0.93.vim	/^      inoremap <Esc> <C-l>$/;"	m
<Esc><Esc>	junk/vimacs-0.93.vim	/^      inoremap <Esc><Esc> <C-o>:UseF1ForNormal<CR>$/;"	m
<Esc><Esc>	junk/vimacs-0.93.vim	/^  inoremap <Esc><Esc> <C-l>$/;"	m
<Esc><Esc>	junk/vimacs-0.93.vim	/^  vnoremap <Esc><Esc> <Esc>$/;"	m
<F10>	junk/vimacs-0.93.vim	/^  inoremap <F10> <C-o>:emenu <Tab>$/;"	m
<F5>	src/vimtlib/plugin/checksyntax.vim	/^    inoremap <F5> <c-o>:CheckSyntax<cr>$/;"	m
<F5>	src/vimtlib/plugin/checksyntax.vim	/^    noremap <F5> :CheckSyntax<cr>$/;"	m
<Leader>be	plugin/bufexplorer.vim	/^nmap <script> <silent> <unique> <Leader>be :BufExplorer<CR>$/;"	m
<Leader>bs	plugin/bufexplorer.vim	/^nmap <script> <silent> <unique> <Leader>bs :BufExplorerHorizontalSplit<CR>$/;"	m
<Leader>bv	plugin/bufexplorer.vim	/^nmap <script> <silent> <unique> <Leader>bv :BufExplorerVerticalSplit<CR>$/;"	m
<Leader>rwp	junk/cecutil.vim	/^ map <unique> <Leader>rwp <Plug>RestoreWinPosn$/;"	m
<Leader>swp	junk/cecutil.vim	/^ map <unique> <Leader>swp <Plug>SaveWinPosn$/;"	m
<Leader>t	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^  map <unique> <silent> <Leader>t <Plug>RubyFileRun$/;"	m
<LocalLeader>g	src/vimtlib/ftplugin/bib/bibFindIndex.vim	/^    noremap <buffer> <LocalLeader>g :BibGotoIndex $/;"	m
<LocalLeader>n	src/vimtlib/ftplugin/bib/bibFindIndex.vim	/^    noremap <buffer> <LocalLeader>n :BibGotoNextIndex $/;"	m
<LocalLeader>ta	ftplugin/taskpaper.vim	/^map <buffer> <silent> <LocalLeader>ta <Plug>ShowAll$/;"	m
<LocalLeader>tc	ftplugin/taskpaper.vim	/^map <buffer> <silent> <LocalLeader>tc <Plug>ShowContext$/;"	m
<LocalLeader>td	ftplugin/taskpaper.vim	/^map <buffer> <silent> <LocalLeader>td <Plug>ToggleDone$/;"	m
<LocalLeader>tp	ftplugin/taskpaper.vim	/^map <buffer> <silent> <LocalLeader>tp <Plug>FoldAllProjects$/;"	m
<M-BS>	junk/vimacs-0.93.vim	/^cnoremap <M-BS> <C-w>$/;"	m
<M-b>	junk/vimacs-0.93.vim	/^cnoremap <M-b> <S-Left>$/;"	m
<M-b>	junk/vimacs-0.93.vim	/^inoremap <M-b> <C-Left>$/;"	m
<M-b>	junk/vimacs-0.93.vim	/^onoremap <M-b> <C-Left>$/;"	m
<M-b>	junk/vimacs-0.93.vim	/^vnoremap <M-b> <C-Left>$/;"	m
<M-f>	junk/vimacs-0.93.vim	/^cnoremap <M-f> <S-Right>$/;"	m
<M-f>	junk/vimacs-0.93.vim	/^inoremap <M-f> <C-o>e<Right>$/;"	m
<M-f>	junk/vimacs-0.93.vim	/^onoremap <M-f> e<Right>$/;"	m
<M-f>	junk/vimacs-0.93.vim	/^vnoremap <M-f> e<Right>$/;"	m
<M-n>	junk/vimacs-0.93.vim	/^cmap <M-n> <Down>$/;"	m
<M-p>	junk/vimacs-0.93.vim	/^cmap <M-p> <Up>$/;"	m
<M-w>	junk/vimacs-0.93.vim	/^cnoremap <M-w> <C-y>$/;"	m
<M-x>	junk/vimacs-0.93.vim	/^  nnoremap <M-x> :$/;"	m
<Plug>Csurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Csurround	junk/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>Dsurround	junk/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>FoldAllProjects	ftplugin/taskpaper.vim	/^noremap <unique> <script> <Plug>FoldAllProjects  :call <SID>FoldAllProjects()<CR>$/;"	m
<Plug>ISurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>ISurround	junk/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>Isurround	junk/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>RestoreWinPosn	:call	junk/cecutil.vim	/^nmap <silent> <Plug>RestoreWinPosn	:call RestoreWinPosn()<CR>$/;"	m
<Plug>RubyFileRun	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^noremap <unique> <script> <Plug>RubyFileRun <SID>RunFile$/;"	m
<Plug>SaveWinPosn		:call	junk/cecutil.vim	/^nmap <silent> <Plug>SaveWinPosn		:call SaveWinPosn()<CR>$/;"	m
<Plug>ShowAll	ftplugin/taskpaper.vim	/^noremap <unique> <script> <Plug>ShowAll          :call <SID>ShowAll()<CR>$/;"	m
<Plug>ShowContext	ftplugin/taskpaper.vim	/^noremap <unique> <script> <Plug>ShowContext      :call <SID>ShowContext()<CR>$/;"	m
<Plug>ToggleBackground	bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>a$/;"	m
<Plug>ToggleBackground	bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremap <unique> <script> <Plug>ToggleBackground <SID>TogBG$/;"	m
<Plug>ToggleBackground	bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>gv$/;"	m
<Plug>ToggleDone	ftplugin/taskpaper.vim	/^noremap <unique> <script> <Plug>ToggleDone       :call <SID>ToggleDone()<CR>$/;"	m
<Plug>VSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VSurround	junk/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc2(visualmode())<CR>$/;"	m
<Plug>VgSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>Vsurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>Vsurround  :<C-U>call <SID>opfunc(visualmode())<CR>$/;"	m
<Plug>Vsurround	junk/surround.vim	/^vnoremap <silent> <Plug>Vsurround  :<C-U>call <SID>opfunc(visualmode())<CR>$/;"	m
<Plug>YSsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSsurround	junk/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>YSurround	junk/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Yssurround	junk/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<Plug>Ysurround	junk/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<S-Space>	plugin/space.vim	/^noremap <expr> <silent> <S-Space> <SID>do_space(1, "<S-Space>")$/;"	m
<S-Space>	src/vim-space/plugin/space.vim	/^noremap <expr> <silent> <S-Space> <SID>do_space(1, "<S-Space>")$/;"	m
<SID>RunFile	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^noremap <SID>RunFile :call <SID>RunTests()<CR>$/;"	m
<SID>TogBG	bundle/vim-colors-solarized/autoload/togglebg.vim	/^noremap <SID>TogBG  :call <SID>TogBG()<CR>$/;"	m
<SID>YRGetChar	plugin/yankring.vim	/^inoremap <script> <SID>YRGetChar <c-r>=YRGetChar()<CR>$/;"	m
<SID>xx	bundle/vim-rails/autoload/rails.vim	/^map <SID>xx <SID>xx$/;"	m
<SID>xx	junk/rails.vim	/^map <SID>xx <SID>xx$/;"	m
<SID>xx	junk/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<SID>yrrecord	plugin/yankring.vim	/^inoremap <silent> <SID>yrrecord <C-R>=YRRecord3()<cr>$/;"	m
<SID>yrrecord	plugin/yankring.vim	/^nnoremap <silent> <SID>yrrecord :call YRRecord3()<cr>$/;"	m
<Space>	plugin/space.vim	/^noremap <expr> <silent> <Space>   <SID>do_space(0, "<Space>")$/;"	m
<Space>	src/vim-space/plugin/space.vim	/^noremap <expr> <silent> <Space>   <SID>do_space(0, "<Space>")$/;"	m
<c-c>	src/vimtlib/plugin/cmdlinehelp.vim	/^cnoremap <c-c> <c-c><c-w>z$/;"	m
<c-n>	plugin/supertab.vim	/^  inoremap <c-n> <c-r>=<SID>SuperTab('n')<cr>$/;"	m
<c-p>	plugin/supertab.vim	/^  inoremap <c-p> <c-r>=<SID>SuperTab('p')<cr>$/;"	m
<c-r><tab>	after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<c-r><tab>	src/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<c-x>	plugin/supertab.vim	/^  imap <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<cr>	plugin/supertab.vim	/^      inoremap <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
<cr>	src/vimtlib/ftplugin/glark.vim	/^inoremap <silent> <buffer> <cr> <c-o>:call GlarkJump('')<cr>$/;"	m
<cr>	src/vimtlib/ftplugin/glark.vim	/^noremap  <silent> <buffer> <cr> :call GlarkJump('')<cr>$/;"	m
<esc>	src/vimtlib/plugin/cmdlinehelp.vim	/^    cnoremap <esc> <c-c><c-w>z$/;"	m
<m-b>	src/vimtlib/plugin/tselectbuffer.vim	/^    inoremap <m-b> <c-o>:TSelectBuffer<cr>$/;"	m
<m-b>	src/vimtlib/plugin/tselectbuffer.vim	/^    noremap <m-b> :TSelectBuffer<cr>$/;"	m
<plug>NERDCommenterAlignBoth	junk/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")<cr>$/;"	m
<plug>NERDCommenterAlignBoth	junk/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterAlignBoth <ESC>:call NERDComment(1, "alignBoth")<cr>$/;"	m
<plug>NERDCommenterAlignBoth	src/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterAlignBoth :call NERDComment(0, "alignBoth")<cr>$/;"	m
<plug>NERDCommenterAlignBoth	src/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterAlignBoth <ESC>:call NERDComment(1, "alignBoth")<cr>$/;"	m
<plug>NERDCommenterAlignLeft	junk/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")<cr>$/;"	m
<plug>NERDCommenterAlignLeft	junk/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterAlignLeft <ESC>:call NERDComment(1, "alignLeft")<cr>$/;"	m
<plug>NERDCommenterAlignLeft	src/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterAlignLeft :call NERDComment(0, "alignLeft")<cr>$/;"	m
<plug>NERDCommenterAlignLeft	src/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterAlignLeft <ESC>:call NERDComment(1, "alignLeft")<cr>$/;"	m
<plug>NERDCommenterAltDelims	junk/NERD_commenter.vim	/^nnoremap <plug>NERDCommenterAltDelims :call <SID>SwitchToAlternativeDelimiters(1)<cr>$/;"	m
<plug>NERDCommenterAltDelims	src/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <plug>NERDCommenterAltDelims :call <SID>SwitchToAlternativeDelimiters(1)<cr>$/;"	m
<plug>NERDCommenterAppend	junk/NERD_commenter.vim	/^nmap <silent> <plug>NERDCommenterAppend :call NERDComment(0, "append")<cr>$/;"	m
<plug>NERDCommenterAppend	src/nerdcommenter/plugin/NERD_commenter.vim	/^nmap <silent> <plug>NERDCommenterAppend :call NERDComment(0, "append")<cr>$/;"	m
<plug>NERDCommenterComment	junk/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterComment :call NERDComment(0, "norm")<cr>$/;"	m
<plug>NERDCommenterComment	junk/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterComment <ESC>:call NERDComment(1, "norm")<cr>$/;"	m
<plug>NERDCommenterComment	src/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterComment :call NERDComment(0, "norm")<cr>$/;"	m
<plug>NERDCommenterComment	src/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterComment <ESC>:call NERDComment(1, "norm")<cr>$/;"	m
<plug>NERDCommenterInInsert	junk/NERD_commenter.vim	/^inoremap <silent> <plug>NERDCommenterInInsert <SPACE><BS><ESC>:call NERDComment(0, "insert")<CR>$/;"	m
<plug>NERDCommenterInInsert	src/nerdcommenter/plugin/NERD_commenter.vim	/^inoremap <silent> <plug>NERDCommenterInInsert <SPACE><BS><ESC>:call NERDComment(0, "insert")<CR>$/;"	m
<plug>NERDCommenterInvert	junk/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterInvert :call NERDComment(0, "invert")<CR>$/;"	m
<plug>NERDCommenterInvert	junk/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterInvert <ESC>:call NERDComment(1, "invert")<CR>$/;"	m
<plug>NERDCommenterInvert	src/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterInvert :call NERDComment(0, "invert")<CR>$/;"	m
<plug>NERDCommenterInvert	src/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterInvert <ESC>:call NERDComment(1, "invert")<CR>$/;"	m
<plug>NERDCommenterMinimal	junk/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterMinimal :call NERDComment(0, "minimal")<cr>$/;"	m
<plug>NERDCommenterMinimal	junk/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterMinimal <ESC>:call NERDComment(1, "minimal")<cr>$/;"	m
<plug>NERDCommenterMinimal	src/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterMinimal :call NERDComment(0, "minimal")<cr>$/;"	m
<plug>NERDCommenterMinimal	src/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterMinimal <ESC>:call NERDComment(1, "minimal")<cr>$/;"	m
<plug>NERDCommenterNest	junk/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterNest :call NERDComment(0, "nested")<cr>$/;"	m
<plug>NERDCommenterNest	junk/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterNest <ESC>:call NERDComment(1, "nested")<cr>$/;"	m
<plug>NERDCommenterNest	src/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterNest :call NERDComment(0, "nested")<cr>$/;"	m
<plug>NERDCommenterNest	src/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterNest <ESC>:call NERDComment(1, "nested")<cr>$/;"	m
<plug>NERDCommenterSexy	junk/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterSexy :call NERDComment(0, "sexy")<CR>$/;"	m
<plug>NERDCommenterSexy	junk/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterSexy <ESC>:call NERDComment(1, "sexy")<CR>$/;"	m
<plug>NERDCommenterSexy	src/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterSexy :call NERDComment(0, "sexy")<CR>$/;"	m
<plug>NERDCommenterSexy	src/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterSexy <ESC>:call NERDComment(1, "sexy")<CR>$/;"	m
<plug>NERDCommenterToEOL	junk/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")<cr>$/;"	m
<plug>NERDCommenterToEOL	src/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterToEOL :call NERDComment(0, "toEOL")<cr>$/;"	m
<plug>NERDCommenterToggle	junk/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterToggle :call NERDComment(0, "toggle")<cr>$/;"	m
<plug>NERDCommenterToggle	junk/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterToggle <ESC>:call NERDComment(1, "toggle")<cr>$/;"	m
<plug>NERDCommenterToggle	src/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterToggle :call NERDComment(0, "toggle")<cr>$/;"	m
<plug>NERDCommenterToggle	src/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterToggle <ESC>:call NERDComment(1, "toggle")<cr>$/;"	m
<plug>NERDCommenterUncomment	junk/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")<cr>$/;"	m
<plug>NERDCommenterUncomment	junk/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")<cr>$/;"	m
<plug>NERDCommenterUncomment	src/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <silent> <plug>NERDCommenterUncomment :call NERDComment(0, "uncomment")<cr>$/;"	m
<plug>NERDCommenterUncomment	src/nerdcommenter/plugin/NERD_commenter.vim	/^vnoremap <silent> <plug>NERDCommenterUncomment :call NERDComment(1, "uncomment")<cr>$/;"	m
<plug>NERDCommenterYank	junk/NERD_commenter.vim	/^nmap <silent> <plug>NERDCommenterYank :call NERDComment(0, "yank")<CR>$/;"	m
<plug>NERDCommenterYank	junk/NERD_commenter.vim	/^vmap <silent> <plug>NERDCommenterYank <ESC>:call NERDComment(1, "yank")<CR>$/;"	m
<plug>NERDCommenterYank	src/nerdcommenter/plugin/NERD_commenter.vim	/^nmap <silent> <plug>NERDCommenterYank :call NERDComment(0, "yank")<CR>$/;"	m
<plug>NERDCommenterYank	src/nerdcommenter/plugin/NERD_commenter.vim	/^vmap <silent> <plug>NERDCommenterYank <ESC>:call NERDComment(1, "yank")<CR>$/;"	m
<s-tab>	after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<s-tab>	src/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<tab>	after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
<tab>	src/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
A	junk/colorize.vim	/^noremap A :highlight Normal guibg=lightyellow<cr>A$/;"	m
ABOVE_NORMAL_PRIORITY_CLASS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^ABOVE_NORMAL_PRIORITY_CLASS = 0x00008000$/;"	v
AR	ruby/command-t/Makefile	/^AR = ar$/;"	m
AUTOL	bundle/delimitMate/Makefile	/^AUTOL=autoload\/$(PLUGIN).vim$/;"	m
Abbrev	bundle/vim-rails/autoload/rails.vim	/^function! s:Abbrev(bang,...) abort$/;"	f
Abbrev	junk/rails.vim	/^function! s:Abbrev(bang,...) abort$/;"	f
AbortSearch	junk/vimacs-0.93.vim	/^function! <SID>AbortSearch()$/;"	f
Ack	plugin/ack.vim	/^command! -bang -nargs=* -complete=file Ack call s:Ack('grep<bang>',<q-args>)$/;"	c
Ack	plugin/ack.vim	/^function! s:Ack(cmd, args)$/;"	f
Ack	src/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file Ack call s:Ack('grep<bang>',<q-args>)$/;"	c
Ack	src/ack.vim/plugin/ack.vim	/^function! s:Ack(cmd, args)$/;"	f
AckAdd	plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckAdd call s:Ack('grepadd<bang>', <q-args>)$/;"	c
AckAdd	src/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckAdd call s:Ack('grepadd<bang>', <q-args>)$/;"	c
AckFile	plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFile call s:Ack('grep<bang> -g', <q-args>)$/;"	c
AckFile	src/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFile call s:Ack('grep<bang> -g', <q-args>)$/;"	c
AckFromSearch	plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFromSearch call s:AckFromSearch('grep<bang>', <q-args>)$/;"	c
AckFromSearch	plugin/ack.vim	/^function! s:AckFromSearch(cmd, args)$/;"	f
AckFromSearch	src/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file AckFromSearch call s:AckFromSearch('grep<bang>', <q-args>)$/;"	c
AckFromSearch	src/ack.vim/plugin/ack.vim	/^function! s:AckFromSearch(cmd, args)$/;"	f
Add	src/vim-cucumber/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
Add	src/vimtlib/test/tlib.vim	/^fun! Add(a,b)$/;"	f
Add	syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
AddBracketExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddBracketExpand(abbr,expn)$/;"	f
AddBracketExpand	junk/rails.vim	/^function! s:AddBracketExpand(abbr,expn)$/;"	f
AddColonExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddColonExpand(abbr,expn)$/;"	f
AddColonExpand	junk/rails.vim	/^function! s:AddColonExpand(abbr,expn)$/;"	f
AddLeftDelim	junk/NERD_commenter.vim	/^function s:AddLeftDelim(delim, theLine)$/;"	f
AddLeftDelim	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelim(delim, theLine)$/;"	f
AddLeftDelimAligned	junk/NERD_commenter.vim	/^function s:AddLeftDelimAligned(delim, theLine, alignIndx)$/;"	f
AddLeftDelimAligned	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelimAligned(delim, theLine, alignIndx)$/;"	f
AddParenExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddParenExpand(abbr,expn,...)$/;"	f
AddParenExpand	junk/rails.vim	/^function! s:AddParenExpand(abbr,expn,...)$/;"	f
AddRightDelim	junk/NERD_commenter.vim	/^function s:AddRightDelim(delim, theLine)$/;"	f
AddRightDelim	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelim(delim, theLine)$/;"	f
AddRightDelimAligned	junk/NERD_commenter.vim	/^function s:AddRightDelimAligned(delim, theLine, alignIndx)$/;"	f
AddRightDelimAligned	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelimAligned(delim, theLine, alignIndx)$/;"	f
AddSelectiveExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddSelectiveExpand(abbr,pat,expn,...)$/;"	f
AddSelectiveExpand	junk/rails.vim	/^function! s:AddSelectiveExpand(abbr,pat,expn,...)$/;"	f
AddTabExpand	bundle/vim-rails/autoload/rails.vim	/^function! s:AddTabExpand(abbr,expn)$/;"	f
AddTabExpand	junk/rails.vim	/^function! s:AddTabExpand(abbr,expn)$/;"	f
AddTabularPattern	plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPattern$/;"	c
AddTabularPattern	plugin/Tabular.vim	/^function! AddTabularPattern(command, force)$/;"	f
AddTabularPattern	src/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPattern$/;"	c
AddTabularPattern	src/tabular/plugin/Tabular.vim	/^function! AddTabularPattern(command, force)$/;"	f
AddTabularPipeline	plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPipeline$/;"	c
AddTabularPipeline	plugin/Tabular.vim	/^function! AddTabularPipeline(command, force)$/;"	f
AddTabularPipeline	src/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPipeline$/;"	c
AddTabularPipeline	src/tabular/plugin/Tabular.vim	/^function! AddTabularPipeline(command, force)$/;"	f
AddToRegexp	src/vimtlib/autoload/viki.vim	/^function! s:AddToRegexp(regexp, pattern) "{{{3$/;"	f
AgentCopyKey	src/vimtlib/plugin/tbibtools.vim	/^function! s:AgentCopyKey(world, selected) "{{{3$/;"	f
AgentDeleteBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:AgentDeleteBuffer(world, selected)$/;"	f
AgentEditRegister	src/vimtlib/plugin/tregisters.vim	/^function! s:AgentEditRegister(world, selected) "{{{3$/;"	f
AgentJumpBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:AgentJumpBuffer(world, selected) "{{{3$/;"	f
AgentOpenBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:AgentOpenBuffer(world, selected)$/;"	f
AgentPreviewEntry	src/vimtlib/plugin/tbibtools.vim	/^fun! s:AgentPreviewEntry(world, selected)$/;"	f
AgentRenameBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:AgentRenameBuffer(world, selected)$/;"	f
AgentRunRegister	src/vimtlib/plugin/tregisters.vim	/^function! s:AgentRunRegister(world, selected) "{{{3$/;"	f
AgentSplitBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:AgentSplitBuffer(world, selected)$/;"	f
AgentTabBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:AgentTabBuffer(world, selected)$/;"	f
AgentToggleHideRead	src/vimtlib/autoload/tmboxbrowser.vim	/^function! s:AgentToggleHideRead(world, selected)$/;"	f
AgentToggleMarkRead	src/vimtlib/autoload/tmboxbrowser.vim	/^function! s:AgentToggleMarkRead(world, selected)$/;"	f
AgentVSplitBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:AgentVSplitBuffer(world, selected)$/;"	f
Agrep	junk/grep.vim	/^command! -nargs=* -complete=file Agrep$/;"	c
AgrepAdd	junk/grep.vim	/^command! -nargs=* -complete=file AgrepAdd$/;"	c
Agrep_Path	junk/grep.vim	/^    let Agrep_Path = 'agrep'$/;"	v
Align	junk/AlignPlugin.vim	/^com! -bang -range -nargs=* Align <line1>,<line2>call Align#Align(<bang>0,<q-args>)$/;"	c
Align	plugin/scrollcolor.vim	/^function! s:Align(s, width)$/;"	f
Align#Align	junk/Align.vim	/^fun! Align#Align(hasctrl,...) range$/;"	f
Align#AlignCtrl	junk/Align.vim	/^fun! Align#AlignCtrl(...)$/;"	f
Align#AlignPop	junk/Align.vim	/^fun! Align#AlignPop()$/;"	f
Align#AlignPush	junk/Align.vim	/^fun! Align#AlignPush()$/;"	f
Align#AlignReplaceQuotedSpaces	junk/Align.vim	/^fun! Align#AlignReplaceQuotedSpaces() $/;"	f
AlignCtrl	junk/AlignPlugin.vim	/^com!              -nargs=* AlignCtrl call Align#AlignCtrl(<q-args>)$/;"	c
AlignMaps#Afnc	junk/AlignMaps.vim	/^fun! AlignMaps#Afnc()$/;"	f
AlignMaps#CharJoiner	junk/AlignMaps.vim	/^fun! AlignMaps#CharJoiner(chr)$/;"	f
AlignMaps#Equals	junk/AlignMaps.vim	/^fun! AlignMaps#Equals() range$/;"	f
AlignMaps#FixMultiDec	junk/AlignMaps.vim	/^fun! AlignMaps#FixMultiDec()$/;"	f
AlignMaps#StdAlign	junk/AlignMaps.vim	/^fun! AlignMaps#StdAlign(mode) range$/;"	f
AlignMaps#WrapperEnd	junk/AlignMaps.vim	/^fun! AlignMaps#WrapperEnd() range$/;"	f
AlignMaps#WrapperStart	junk/AlignMaps.vim	/^fun! AlignMaps#WrapperStart(vis) range$/;"	f
AlignPop	junk/AlignPlugin.vim	/^com!              -nargs=0 AlignPop  call Align#AlignPop()$/;"	c
AlignPush	junk/AlignPlugin.vim	/^com!              -nargs=0 AlignPush call Align#AlignPush()$/;"	c
AlignReplaceQuotedSpaces	junk/AlignPlugin.vim	/^com!       -range -nargs=0 AlignReplaceQuotedSpaces <line1>,<line2>call Align#AlignReplaceQuotedSpaces()$/;"	c
AltMultipart	junk/NERD_commenter.vim	/^function s:AltMultipart()$/;"	f
AltMultipart	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AltMultipart()$/;"	f
Alternate	bundle/vim-rails/autoload/rails.vim	/^function! s:Alternate(cmd,line1,line2,count,...)$/;"	f
Alternate	junk/rails.vim	/^function! s:Alternate(cmd,line1,line2,count,...)$/;"	f
AppLog	src/vimtlib/ruby/vimball.rb	/^    class AppLog$/;"	c	class:Vimball
AppLog	src/vimtlib/ruby/vimtips2help.rb	/^    class AppLog$/;"	c	class:Vimtips2Help
AppendCommentToLine	junk/NERD_commenter.vim	/^function s:AppendCommentToLine()$/;"	f
AppendCommentToLine	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AppendCommentToLine()$/;"	f
AssertEquals	bundle/conque-term/tests/test.vim	/^function! AssertEquals(a, b) " {{{$/;"	f
AssertFalse	bundle/conque-term/tests/test.vim	/^function! AssertFalse(a) " {{{$/;"	f
AssertTrue	bundle/conque-term/tests/test.vim	/^function! AssertTrue(a) " {{{$/;"	f
AttachmentOk	src/vimtlib/autoload/tmboxbrowser.vim	/^function! s:AttachmentOk(filename) "{{{3$/;"	f
AutoClose	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:AutoClose() "{{{$/;"	f
AutoClose	junk/delimitMate.vim	/^function! s:AutoClose() "{{{1$/;"	f
AutoMRU	src/vimtlib/plugin/tmru.vim	/^function! s:AutoMRU(filename) "{{{3$/;"	f
BEActivateBuffer	plugin/bufexplorer.vim	/^function! s:BEActivateBuffer()$/;"	f
BEAddBuffer	plugin/bufexplorer.vim	/^function! s:BEAddBuffer()$/;"	f
BEBuildBufferList	plugin/bufexplorer.vim	/^function! s:BEBuildBufferList()$/;"	f
BECleanup	plugin/bufexplorer.vim	/^function! s:BECleanup()$/;"	f
BEClose	plugin/bufexplorer.vim	/^function! s:BEClose()$/;"	f
BECreateHelp	plugin/bufexplorer.vim	/^function! s:BECreateHelp()$/;"	f
BEDeactivateBuffer	plugin/bufexplorer.vim	/^function! s:BEDeactivateBuffer(remove)$/;"	f
BEDeleteBuffer	plugin/bufexplorer.vim	/^function! s:BEDeleteBuffer(bufNbr, mode)$/;"	f
BEDeleteBufferListing	plugin/bufexplorer.vim	/^function! s:BEDeleteBufferListing(buf)$/;"	f
BEDisplayBufferList	plugin/bufexplorer.vim	/^function! s:BEDisplayBufferList()$/;"	f
BEError	plugin/bufexplorer.vim	/^function! s:BEError(msg)$/;"	f
BEGetBufferInfo	plugin/bufexplorer.vim	/^function! s:BEGetBufferInfo(bufnr)$/;"	f
BEGetHelpStatus	plugin/bufexplorer.vim	/^function! s:BEGetHelpStatus()$/;"	f
BEGetTabNbr	plugin/bufexplorer.vim	/^function! s:BEGetTabNbr(bufNbr)$/;"	f
BEGetWinNbr	plugin/bufexplorer.vim	/^function! s:BEGetWinNbr(tabNbr, bufNbr)$/;"	f
BEIgnoreBuffer	plugin/bufexplorer.vim	/^function! s:BEIgnoreBuffer(buf)$/;"	f
BEInitialize	plugin/bufexplorer.vim	/^function! s:BEInitialize()$/;"	f
BELOW_NORMAL_PRIORITY_CLASS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^BELOW_NORMAL_PRIORITY_CLASS = 0x00004000$/;"	v
BEMRUCmp	plugin/bufexplorer.vim	/^function! s:BEMRUCmp(line1, line2)$/;"	f
BEMRUListShow	plugin/bufexplorer.vim	/^function! s:BEMRUListShow()$/;"	f
BEMRUPop	plugin/bufexplorer.vim	/^function! s:BEMRUPop(buf)$/;"	f
BEMRUPush	plugin/bufexplorer.vim	/^function! s:BEMRUPush(buf)$/;"	f
BEMapKeys	plugin/bufexplorer.vim	/^function! s:BEMapKeys()$/;"	f
BEReSortListing	plugin/bufexplorer.vim	/^function! s:BEReSortListing()$/;"	f
BERebuildBufferList	plugin/bufexplorer.vim	/^function! s:BERebuildBufferList(...)$/;"	f
BERemoveBuffer	plugin/bufexplorer.vim	/^function! s:BERemoveBuffer(type, mode) range$/;"	f
BEReset	plugin/bufexplorer.vim	/^function! s:BEReset()$/;"	f
BEReverseSortSelect	plugin/bufexplorer.vim	/^function! s:BEReverseSortSelect()$/;"	f
BESelectBuffer	plugin/bufexplorer.vim	/^function! s:BESelectBuffer(...)$/;"	f
BESet	plugin/bufexplorer.vim	/^function! s:BESet(var, default)$/;"	f
BESetup	plugin/bufexplorer.vim	/^function! s:BESetup()$/;"	f
BESetupSyntax	plugin/bufexplorer.vim	/^function! s:BESetupSyntax()$/;"	f
BESortListing	plugin/bufexplorer.vim	/^function! s:BESortListing()$/;"	f
BESortReverse	plugin/bufexplorer.vim	/^function! s:BESortReverse()$/;"	f
BESortSelect	plugin/bufexplorer.vim	/^function! s:BESortSelect()$/;"	f
BETabEnter	plugin/bufexplorer.vim	/^function! s:BETabEnter()$/;"	f
BEToggleFindActive	plugin/bufexplorer.vim	/^function! s:BEToggleFindActive()$/;"	f
BEToggleHelp	plugin/bufexplorer.vim	/^function! s:BEToggleHelp()$/;"	f
BEToggleOnlyOneTab	plugin/bufexplorer.vim	/^function! s:BEToggleOnlyOneTab()$/;"	f
BEToggleShowRelativePath	plugin/bufexplorer.vim	/^function! s:BEToggleShowRelativePath()$/;"	f
BEToggleShowTabBuffer	plugin/bufexplorer.vim	/^function! s:BEToggleShowTabBuffer()$/;"	f
BEToggleShowUnlisted	plugin/bufexplorer.vim	/^function! s:BEToggleShowUnlisted()$/;"	f
BEToggleSplitOutPathName	plugin/bufexplorer.vim	/^function! s:BEToggleSplitOutPathName()$/;"	f
BEUpdateHelpStatus	plugin/bufexplorer.vim	/^function! s:BEUpdateHelpStatus()$/;"	f
BEWarning	plugin/bufexplorer.vim	/^function! s:BEWarning(msg)$/;"	f
BINDIR	ruby/command-t/Makefile	/^BINDIR        = $(bindir)$/;"	m
BMRU_Push	src/vimtlib/autoload/tlib/buffer.vim	/^function! s:BMRU_Push(bnr) "{{{3$/;"	f
Backspace	junk/simple_pairs.vim	/^function! s:Backspace()$/;"	f
BackupDir	src/vimtlib/autoload/tbak.vim	/^fun! s:BackupDir(global, ...) "{{{3$/;"	f
BackwardsSnippet	plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
BackwardsSnippet	src/snipmate.vim/plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
Bgrep	junk/grep.vim	/^command! -nargs=* Bgrep$/;"	c
BgrepAdd	junk/grep.vim	/^command! -nargs=* BgrepAdd$/;"	c
BibGotoIndex	src/vimtlib/ftplugin/bib/bibFindIndex.vim	/^    command! -nargs=1 BibGotoIndex call s:BibGotoIndex(<q-args>, 0)$/;"	c
BibGotoIndex	src/vimtlib/ftplugin/bib/bibFindIndex.vim	/^    fun! s:BibGotoIndex(text, delta)$/;"	f
BibGotoNextIndex	src/vimtlib/ftplugin/bib/bibFindIndex.vim	/^    command! -nargs=1 BibGotoNextIndex call s:BibGotoIndex(<q-args>, 1)$/;"	c
BitMenu	src/vimtlib/autoload/tskeleton.vim	/^function! s:BitMenu(bit, mode, ft) "{{{3$/;"	f
BitMenuEligible	src/vimtlib/autoload/tskeleton.vim	/^function! s:BitMenuEligible(agent, bit, mode, ft) "{{{3$/;"	f
BitMenuEligible_complete_cb	src/vimtlib/autoload/tskeleton.vim	/^function! s:BitMenuEligible_complete_cb(bit, mode) "{{{3$/;"	f
BitMenuEligible_menu_cb	src/vimtlib/autoload/tskeleton.vim	/^function! s:BitMenuEligible_menu_cb(bit, mode) "{{{3$/;"	f
BitMenuEligible_query_cb	src/vimtlib/autoload/tskeleton.vim	/^function! s:BitMenuEligible_query_cb(bit, mode) "{{{3$/;"	f
BitMenu_menu	src/vimtlib/autoload/tskeleton.vim	/^function! s:BitMenu_menu(bit, mode, ft) "{{{3$/;"	f
BitMenu_query	src/vimtlib/autoload/tskeleton.vim	/^function! s:BitMenu_query(bit, mode, ft) "{{{3$/;"	f
BitRx	src/vimtlib/autoload/tskeleton.vim	/^function! s:BitRx(bit, escapebs) "{{{3$/;"	f
Blame	junk/fugitive.vim	/^function! s:Blame(bang,line1,line2,count) abort$/;"	f
Blame	plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
Blame	src/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count) abort$/;"	f
BlameJump	junk/fugitive.vim	/^function! s:BlameJump() abort$/;"	f
BlameJump	plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameJump	src/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump() abort$/;"	f
BlameSyntax	junk/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlameSyntax	plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlameSyntax	src/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlockGetCommentString	autoload/tcomment.vim	/^function! s:BlockGetCommentString(cms)$/;"	f
BlockGetCommentString	src/vimtlib/autoload/tcomment.vim	/^function! s:BlockGetCommentString(cms)$/;"	f
BlockGetMiddleString	autoload/tcomment.vim	/^function! s:BlockGetMiddleString(cms)$/;"	f
BlockGetMiddleString	src/vimtlib/autoload/tcomment.vim	/^function! s:BlockGetMiddleString(cms)$/;"	f
Bookmark.AddBookmark	plugin/NERD_tree.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.AddBookmark	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkExistsFor	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkFor	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.BookmarkNames	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	plugin/NERD_tree.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.Bookmarks	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	plugin/NERD_tree.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.CacheBookmarks	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	plugin/NERD_tree.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.ClearAll	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	plugin/NERD_tree.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetNodeForName	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	plugin/NERD_tree.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.GetSelected	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	plugin/NERD_tree.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.InvalidBookmarks	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	plugin/NERD_tree.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.New	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	plugin/NERD_tree.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.Sort	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	plugin/NERD_tree.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.ToRoot	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	plugin/NERD_tree.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.Write	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	plugin/NERD_tree.vim	/^function! s:Bookmark.activate()$/;"	f
Bookmark.activate	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.activate()$/;"	f
Bookmark.compareTo	plugin/NERD_tree.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.compareTo	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	plugin/NERD_tree.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.delete	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	plugin/NERD_tree.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.getNode	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	plugin/NERD_tree.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.mustExist	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.openInNewTab	plugin/NERD_tree.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.openInNewTab	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	plugin/NERD_tree.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.setPath	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	plugin/NERD_tree.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.str	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	plugin/NERD_tree.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.toRoot	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	plugin/NERD_tree.vim	/^function! s:Bookmark.validate()$/;"	f
Bookmark.validate	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.validate()$/;"	f
Browse	src/vimtlib/autoload/tskeleton.vim	/^function! s:Browse(save, title, initdir, default) "{{{3$/;"	f
BufAbbreviations	bundle/vim-rails/autoload/rails.vim	/^function! s:BufAbbreviations()$/;"	f
BufAbbreviations	junk/rails.vim	/^function! s:BufAbbreviations()$/;"	f
BufCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufCommands()$/;"	f
BufCommands	junk/rails.vim	/^function! s:BufCommands()$/;"	f
BufDatabase	bundle/vim-rails/autoload/rails.vim	/^function! s:BufDatabase(...)$/;"	f
BufDatabase	junk/rails.vim	/^function! s:BufDatabase(...)$/;"	f
BufDo	src/vimtlib/plugin/scalefont.vim	/^function! s:BufDo(exec) "{{{3$/;"	f
BufExec	src/vimtlib/plugin/scalefont.vim	/^function! s:BufExec(exec) "{{{3$/;"	f
BufExplorer	plugin/bufexplorer.vim	/^command! BufExplorer :call StartBufExplorer(has ("gui") ? "drop" : "hide edit")$/;"	c
BufExplorerHorizontalSplit	plugin/bufexplorer.vim	/^command! BufExplorerHorizontalSplit :call BufExplorerHorizontalSplit()$/;"	c
BufExplorerHorizontalSplit	plugin/bufexplorer.vim	/^function! BufExplorerHorizontalSplit()$/;"	f
BufExplorerOrBufferList	junk/vimacs-0.93.vim	/^function! <SID>BufExplorerOrBufferList()$/;"	f
BufExplorerVerticalSplit	plugin/bufexplorer.vim	/^command! BufExplorerVerticalSplit :call BufExplorerVerticalSplit()$/;"	c
BufExplorerVerticalSplit	plugin/bufexplorer.vim	/^function! BufExplorerVerticalSplit()$/;"	f
BufExplorerVimEnter	plugin/bufexplorer.vim	/^augroup BufExplorerVimEnter$/;"	a
BufExplorer_IsValid	plugin/bufexplorer.vim	/^function! BufExplorer_IsValid()$/;"	f
BufExplorer_ReSize	plugin/bufexplorer.vim	/^function! BufExplorer_ReSize()$/;"	f
BufExplorer_Refresh	plugin/bufexplorer.vim	/^function! BufExplorer_Refresh()$/;"	f
BufExplorer_Start	plugin/bufexplorer.vim	/^function! BufExplorer_Start()$/;"	f
BufFinderCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufFinderCommands()$/;"	f
BufFinderCommands	junk/rails.vim	/^function! s:BufFinderCommands()$/;"	f
BufInit	bundle/vim-rails/plugin/rails.vim	/^function! s:BufInit(path)$/;"	f
BufInitStatusline	bundle/vim-rails/autoload/rails.vim	/^function! s:BufInitStatusline()$/;"	f
BufInitStatusline	junk/rails.vim	/^function! s:BufInitStatusline()$/;"	f
BufMappings	bundle/vim-rails/autoload/rails.vim	/^function! s:BufMappings()$/;"	f
BufMappings	junk/rails.vim	/^function! s:BufMappings()$/;"	f
BufModelines	bundle/vim-rails/autoload/rails.vim	/^function! s:BufModelines()$/;"	f
BufModelines	junk/rails.vim	/^function! s:BufModelines()$/;"	f
BufNavCommands	bundle/vim-rails/autoload/rails.vim	/^function! s:BufNavCommands()$/;"	f
BufNavCommands	junk/rails.vim	/^function! s:BufNavCommands()$/;"	f
BufReadIndex	junk/fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndex	plugin/fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndex	src/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndexFile	junk/fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadIndexFile	plugin/fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadIndexFile	src/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadObject	junk/fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufReadObject	plugin/fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufReadObject	src/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufScriptWrappers	bundle/vim-rails/autoload/rails.vim	/^function! s:BufScriptWrappers()$/;"	f
BufScriptWrappers	junk/rails.vim	/^function! s:BufScriptWrappers()$/;"	f
BufSettings	bundle/vim-rails/autoload/rails.vim	/^function! s:BufSettings()$/;"	f
BufSettings	junk/rails.vim	/^function! s:BufSettings()$/;"	f
BufSurf	bundle/vim-bufsurf/plugin/bufsurf.vim	/^augroup BufSurf$/;"	a
BufSurfAppend	bundle/vim-bufsurf/plugin/bufsurf.vim	/^function s:BufSurfAppend(bufnr, winnr)$/;"	f
BufSurfBack	bundle/vim-bufsurf/plugin/bufsurf.vim	/^command BufSurfBack :call <SID>BufSurfBack(winnr())$/;"	c
BufSurfBack	bundle/vim-bufsurf/plugin/bufsurf.vim	/^function s:BufSurfBack(winnr)$/;"	f
BufSurfDelete	bundle/vim-bufsurf/plugin/bufsurf.vim	/^function s:BufSurfDelete(bufnr)$/;"	f
BufSurfEcho	bundle/vim-bufsurf/plugin/bufsurf.vim	/^function s:BufSurfEcho(msg)$/;"	f
BufSurfForward	bundle/vim-bufsurf/plugin/bufsurf.vim	/^command BufSurfForward :call <SID>BufSurfForward(winnr())$/;"	c
BufSurfForward	bundle/vim-bufsurf/plugin/bufsurf.vim	/^function s:BufSurfForward(winnr)$/;"	f
BufSurfIsDisabled	bundle/vim-bufsurf/plugin/bufsurf.vim	/^function s:BufSurfIsDisabled(bufnr)$/;"	f
BufSyntax	bundle/vim-rails/autoload/rails.vim	/^function! s:BufSyntax()$/;"	f
BufSyntax	junk/rails.vim	/^function! s:BufSyntax()$/;"	f
BufWriteIndexFile	junk/fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
BufWriteIndexFile	plugin/fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
BufWriteIndexFile	src/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
BufferFinder	ruby/command-t/finder/buffer_finder.rb	/^  class BufferFinder < Finder$/;"	c	class:CommandT
BufferScanner	ruby/command-t/scanner/buffer_scanner.rb	/^  class BufferScanner < Scanner$/;"	c	class:CommandT
BuildMenu	src/vimtlib/plugin/tmru.vim	/^function! s:BuildMenu(initial) "{{{3$/;"	f
BuildTabStops	autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
BuildTabStops	src/snipmate.vim/autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
CAPSLOCK_ON	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CAPSLOCK_ON = 0x0080$/;"	v
CC	ruby/command-t/Makefile	/^CC = gcc$/;"	m
CFLAGS	ruby/command-t/Makefile	/^CFLAGS   =  -fno-common -arch i386 -arch x86_64 -g -Os -pipe -fno-common -DENABLE_DTRACE  -fno-common  -pipe -fno-common $(cflags) $/;"	m
CHAR_INFO	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class CHAR_INFO(Structure):$/;"	c
CHAR_UNION	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class CHAR_UNION(Union):$/;"	c
CLEANFILES	ruby/command-t/Makefile	/^CLEANFILES = mkmf.log$/;"	m
CLEANLIBS	ruby/command-t/Makefile	/^CLEANLIBS     = $(TARGET).bundle $(TARGET).il? $(TARGET).tds $(TARGET).map$/;"	m
CLEANOBJS	ruby/command-t/Makefile	/^CLEANOBJS     = *.o *.a *.s[ol] *.pdb *.exp *.bak$/;"	m
CN	plugin/scrollcolor.vim	/^command! CN :call s:NextColorscheme()$/;"	c
COLORSCROLL	plugin/scrollcolor.vim	/^command! COLORSCROLL :call s:ColorScroller()$/;"	c
CONQUE_COLOR_SEQUENCE	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_COLOR_SEQUENCE = ($/;"	v
CONQUE_CTL	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_CTL = {$/;"	v
CONQUE_ESCAPE	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE = {$/;"	v
CONQUE_ESCAPE_CHARSET	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_CHARSET = {$/;"	v
CONQUE_ESCAPE_HASH	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_HASH = {$/;"	v
CONQUE_ESCAPE_PLAIN	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_PLAIN = {$/;"	v
CONQUE_ESCAPE_QUESTION	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_QUESTION = {$/;"	v
CONQUE_FONT	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_FONT = {$/;"	v
CONQUE_GRAPHICS_SET	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_GRAPHICS_SET = [$/;"	v
CONQUE_LOG_FILENAME	bundle/conque-term/autoload/conque_term/conque_globals.py	/^    CONQUE_LOG_FILENAME = 'C:\/Documents and Settings\/nraffo\/vimfiles\/pylog.log' # DEBUG$/;"	v
CONQUE_LOG_FILENAME	bundle/conque-term/autoload/conque_term/conque_globals.py	/^    CONQUE_LOG_FILENAME = '\/Users\/nraffo\/vimfiles\/pylog.log' # DEBUG$/;"	v
CONQUE_LOG_FILENAME	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_LOG_FILENAME = None # DEBUG$/;"	v
CONQUE_LOG_LEVEL	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_LOG_LEVEL = logging.INFO #DEBUG$/;"	v
CONQUE_MAX_SYNTAX_LINES	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_MAX_SYNTAX_LINES = 200$/;"	v
CONQUE_PYTHON_VERSION	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_PYTHON_VERSION = sys.version_info[0]$/;"	v
CONQUE_PYTHON_VERSION	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^CONQUE_PYTHON_VERSION = sys.version_info[0]$/;"	v
CONQUE_SEQ_REGEX	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX = re.compile("(\\x1b\\[?\\??#?[0-9;]*[a-zA-Z0-9@=>]|\\x1b\\][0-9];.*?\\x07|[\\x01-\\x0f]|\\x1b\\([AB0])")$/;"	v
CONQUE_SEQ_REGEX_CHAR	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CHAR = re.compile("^\\x1b[()]")$/;"	v
CONQUE_SEQ_REGEX_CSI	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CSI = re.compile("^\\x1b\\[")$/;"	v
CONQUE_SEQ_REGEX_CTL	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CTL = re.compile("^[\\x01-\\x0f]$")$/;"	v
CONQUE_SEQ_REGEX_ESC	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_ESC = re.compile("^\\x1b.$")$/;"	v
CONQUE_SEQ_REGEX_HASH	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_HASH = re.compile("^\\x1b#")$/;"	v
CONQUE_SEQ_REGEX_TITLE	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_TITLE = re.compile("^\\x1b\\]")$/;"	v
CONQUE_SOLE_BUFFER_LENGTH	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_BUFFER_LENGTH = 1000$/;"	v
CONQUE_SOLE_BUFFER_REDRAW	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_BUFFER_REDRAW = 500$/;"	v
CONQUE_SOLE_COMMANDS_SIZE	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_COMMANDS_SIZE = 255$/;"	v
CONQUE_SOLE_INPUT_SIZE	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_INPUT_SIZE = 1000$/;"	v
CONQUE_SOLE_MEM_REDRAW	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_MEM_REDRAW = 1000$/;"	v
CONQUE_SOLE_RESCROLL_SIZE	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_RESCROLL_SIZE = 255$/;"	v
CONQUE_SOLE_RESIZE_SIZE	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_RESIZE_SIZE = 255$/;"	v
CONQUE_SOLE_SCREEN_REDRAW	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_SCREEN_REDRAW = 50$/;"	v
CONQUE_SOLE_STATS_SIZE	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_STATS_SIZE = 1000$/;"	v
CONQUE_TABLE_OUTPUT	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_TABLE_OUTPUT = re.compile("^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$")$/;"	v
CONQUE_VIM_ENCODING	bundle/conque-term/autoload/conque_term/conque_globals.py	/^    CONQUE_VIM_ENCODING = 'utf-8'$/;"	v
CONQUE_VIM_ENCODING	bundle/conque-term/autoload/conque_term/conque_globals.py	/^    CONQUE_VIM_ENCODING = vim.eval('&encoding')$/;"	v
CONQUE_VK_ATTR_CTRL_PRESSED	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_VK_ATTR_CTRL_PRESSED = u('1024')$/;"	v
CONQUE_WIN32_REGEX_ATTR	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_WIN32_REGEX_ATTR = re.compile("((.)\\\\2*)", re.DOTALL)$/;"	v
CONQUE_WIN32_REGEX_VK	bundle/conque-term/autoload/conque_term/conque_globals.py	/^CONQUE_WIN32_REGEX_VK = re.compile("(\\x1b\\[[0-9;]+VK)")$/;"	v
CONQUE_WINDOWS_VK	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK = {$/;"	v
CONQUE_WINDOWS_VK_ENHANCED	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK_ENHANCED = {$/;"	v
CONQUE_WINDOWS_VK_INV	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK_INV = dict([v, k] for k, v in CONQUE_WINDOWS_VK.items())$/;"	v
CONSOLE_SCREEN_BUFFER_INFO	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class CONSOLE_SCREEN_BUFFER_INFO(Structure):$/;"	c
COORD	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class COORD(Structure):$/;"	c
COPY	ruby/command-t/Makefile	/^COPY = cp$/;"	m
CP	plugin/scrollcolor.vim	/^command! CP :call s:PrevColorscheme()$/;"	c
CPPFLAGS	ruby/command-t/Makefile	/^CPPFLAGS = -DHAVE_RUBY_H  -D_XOPEN_SOURCE -D_DARWIN_C_SOURCE $(DEFS) $(cppflags)$/;"	m
CREATE_BREAKAWAY_FROM_JOB	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CREATE_BREAKAWAY_FROM_JOB = 0x01000000$/;"	v
CREATE_DEFAULT_ERROR_MODE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CREATE_DEFAULT_ERROR_MODE = 0x04000000$/;"	v
CREATE_NEW_CONSOLE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CREATE_NEW_CONSOLE = 0x00000010$/;"	v
CREATE_NEW_PROCESS_GROUP	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CREATE_NEW_PROCESS_GROUP = 0x00000200$/;"	v
CREATE_NO_WINDOW	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CREATE_NO_WINDOW = 0x08000000$/;"	v
CREATE_PRESERVE_CODE_AUTHZ_LEVEL	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CREATE_PRESERVE_CODE_AUTHZ_LEVEL = 0x02000000$/;"	v
CREATE_PROTECTED_PROCESS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CREATE_PROTECTED_PROCESS = 0x00040000$/;"	v
CREATE_SEPARATE_WOW_VDM	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CREATE_SEPARATE_WOW_VDM = 0x00000800$/;"	v
CREATE_SHARED_WOW_VDM	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CREATE_SHARED_WOW_VDM = 0x00001000$/;"	v
CREATE_SUSPENDED	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CREATE_SUSPENDED = 0x00000004$/;"	v
CREATE_UNICODE_ENVIRONMENT	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^CREATE_UNICODE_ENVIRONMENT = 0x00000400$/;"	v
CValsSet	src/vimtlib/autoload/viki.vim	/^function! s:CValsSet(cvals, var) "{{{3$/;"	f
CXXFLAGS	ruby/command-t/Makefile	/^CXXFLAGS = $(CFLAGS) $/;"	m
CacheBufferBits	src/vimtlib/autoload/tskeleton.vim	/^function! s:CacheBufferBits(filetype) "{{{3$/;"	f
CacheFiletypeBits	src/vimtlib/autoload/tskeleton.vim	/^function! s:CacheFiletypeBits(filetype) "{{{3$/;"	f
CacheID	src/vimtlib/autoload/tselectfiles.vim	/^function! s:CacheID() "{{{3$/;"	f
CacheKey	src/vimtlib/plugin/tGpg.vim	/^function! s:CacheKey(id, file) "{{{3$/;"	f
Call	src/vimtlib/autoload/tskeleton.vim	/^function! s:Call(fn) "{{{3$/;"	f
CallInDestDir	src/vimtlib/plugin/tGpg.vim	/^function! s:CallInDestDir(autocommand, file, mode, FunRef, args) "{{{3$/;"	f
Callback	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:Callback(world, selected) "{{{3$/;"	f
CanCommentLine	junk/NERD_commenter.vim	/^function s:CanCommentLine(forceNested, lineNum)$/;"	f
CanCommentLine	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanCommentLine(forceNested, lineNum)$/;"	f
CanPlaceCursor	junk/NERD_commenter.vim	/^function s:CanPlaceCursor(line, col)$/;"	f
CanPlaceCursor	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanPlaceCursor(line, col)$/;"	f
CanSexyCommentLines	junk/NERD_commenter.vim	/^function s:CanSexyCommentLines(topline, bottomline)$/;"	f
CanSexyCommentLines	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanSexyCommentLines(topline, bottomline)$/;"	f
CanToggleCommentLine	junk/NERD_commenter.vim	/^function s:CanToggleCommentLine(forceNested, lineNum)$/;"	f
CanToggleCommentLine	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanToggleCommentLine(forceNested, lineNum)$/;"	f
CanonicDirName	src/vimtlib/autoload/tbak.vim	/^fun! s:CanonicDirName(dir) "{{{3$/;"	f
CanonicFileName	src/vimtlib/plugin/TortoiseSVN.vim	/^fun! <SID>CanonicFileName(fname)$/;"	f
CanonicFilename	src/vimtlib/plugin/pim.vim	/^function! s:CanonicFilename(fname)$/;"	f
CanonicHyperWord	src/vimtlib/autoload/viki.vim	/^function! s:CanonicHyperWord(word) "{{{3$/;"	f
CanonicalFilename	src/vimtlib/autoload/spec.vim	/^function! s:CanonicalFilename(filename) "{{{3$/;"	f
CaptureKeyPresses	plugin/supertab.vim	/^function! s:CaptureKeyPresses()$/;"	f
Center	autoload/tabular.vim	/^function! s:Center(string, fieldwidth)$/;"	f
Center	src/tabular/autoload/tabular.vim	/^function! s:Center(string, fieldwidth)$/;"	f
CharRx	src/vimtlib/autoload/tskeleton.vim	/^function! s:CharRx(char) "{{{3$/;"	f
CharacterRun	ruby/fuzzy_file_finder.rb	/^  class CharacterRun < Struct.new(:string, :inside) #:nodoc:$/;"	c	class:FuzzyFileFinder
CheckAgentReturnValue	src/vimtlib/autoload/tlib/input.vim	/^function! s:CheckAgentReturnValue(name, value) "{{{3$/;"	f
CheckChars	src/vimtlib/autoload/hookcursormoved.vim	/^function! s:CheckChars(mode, chars) "{{{3$/;"	f
CheckLet	src/vimtlib/plugin/localvariables.vim	/^fun! s:CheckLet()$/;"	f
CheckLetLet	src/vimtlib/plugin/localvariables.vim	/^fun! s:CheckLetLet(rx, line)$/;"	f
CheckMethod	src/vimtlib/autoload/should/be.vim	/^function! s:CheckMethod(dict, prototype, method)$/;"	f
CheckMethod	src/vimtlib/macros/tassert.vim	/^fun! s:CheckMethod(dict, prototype, method)$/;"	f
CheckStyleJlint	src/vimtlib/plugin/checksyntax.vim	/^function! CheckStyleJlint() "{{{3$/;"	f
CheckSyntax	src/vimtlib/plugin/checksyntax.vim	/^augroup CheckSyntax$/;"	a
CheckSyntax	src/vimtlib/plugin/checksyntax.vim	/^command! -bang -nargs=? CheckSyntax call CheckSyntax(1, "<bang>", <f-args>)$/;"	c
CheckSyntax	src/vimtlib/plugin/checksyntax.vim	/^function! CheckSyntax(manually, ...)$/;"	f
CheckSyntaxFail	src/vimtlib/plugin/checksyntax.vim	/^    fun! CheckSyntaxFail(manually)$/;"	f
CheckSyntaxSucceed	src/vimtlib/plugin/checksyntax.vim	/^    func! CheckSyntaxSucceed(manually)$/;"	f
CheckSyntax_prepare_ruby	src/vimtlib/plugin/checksyntax.vim	/^    fun! CheckSyntax_prepare_ruby()$/;"	f
CheckTimeout	src/vimtlib/plugin/tGpg.vim	/^function! s:CheckTimeout() "{{{3$/;"	f
CheckType	src/vimtlib/autoload/should/be.vim	/^function! s:CheckType(expr, type, expected)$/;"	f
CheckType	src/vimtlib/macros/tassert.vim	/^fun! s:CheckType(expr, type)$/;"	f
CheckVersion	src/vimtlib/plugin/pim.vim	/^function! s:CheckVersion(version)$/;"	f
ChgDir	autoload/vimball.vim	/^fun! s:ChgDir(newdir)$/;"	f
ChooseCommandMap	plugin/Tabular.vim	/^function! s:ChooseCommandMap(commandline)$/;"	f
ChooseCommandMap	src/tabular/plugin/Tabular.vim	/^function! s:ChooseCommandMap(commandline)$/;"	f
ChooseSnippet	plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
ChooseSnippet	src/snipmate.vim/plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
CleanArgument	src/vimtlib/autoload/tskeleton.vim	/^function! s:CleanArgument(arg) "{{{3$/;"	f
Cleanup	src/vimtlib/autoload/tbak.vim	/^fun! s:Cleanup(maxversion, global, name, diffs) "{{{3$/;"	f
ClearBuffer	src/vimtlib/plugin/quickfixsigns.vim	/^function! s:ClearBuffer(sign, bufnr, new_idxs) "{{{3$/;"	f
ClearDummy	src/vimtlib/plugin/quickfixsigns.vim	/^function! s:ClearDummy(idx, bufnr) "{{{3$/;"	f
Close	ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
Close	src/snipmate.vim/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
CloseDisplay	src/vimtlib/autoload/tcalc.vim	/^function! s:CloseDisplay() "{{{3$/;"	f
ClosePair	junk/delimitMate.vim	/^function! s:ClosePair(char) "{{{1$/;"	f
ClosePair	junk/simple_pairs.vim	/^function! s:ClosePair(c)$/;"	f
ClosePreview	src/vimtlib/autoload/tselectfiles.vim	/^function! s:ClosePreview() "{{{3$/;"	f
CloseSession	bundle/session.vim/plugin/session.vim	/^command! -bar -bang CloseSession call xolox#session#close_cmd(<q-bang>, 0)$/;"	c
CmdFname	src/vimtlib/plugin/glark.vim	/^function! s:CmdFname(fname) "{{{3$/;"	f
CmdLineHelp	src/vimtlib/plugin/cmdlinehelp.vim	/^augroup CmdLineHelp$/;"	a
CmdLineHelpBuffer	src/vimtlib/plugin/cmdlinehelp.vim	/^function! CmdLineHelpBuffer() "{{{3$/;"	f
CmdLineHelpClose	src/vimtlib/plugin/cmdlinehelp.vim	/^function! s:CmdLineHelpClose() "{{{3$/;"	f
CmdLineHelpDown	src/vimtlib/plugin/cmdlinehelp.vim	/^function! CmdLineHelpDown() "{{{3$/;"	f
CmdLineHelpUp	src/vimtlib/plugin/cmdlinehelp.vim	/^function! CmdLineHelpUp() "{{{3$/;"	f
CmdLineHelpView	src/vimtlib/plugin/cmdlinehelp.vim	/^function! CmdLineHelpView() "{{{3$/;"	f
CoffeeCompile	bundle/vim-coffee-script/ftplugin/coffee.vim	/^command! -range=% CoffeeCompile <line1>,<line2>:w !coffee -scb$/;"	c
Col	src/vimtlib/autoload/hookcursormoved.vim	/^function! s:Col(mode, col) "{{{3$/;"	f
CollectBuffersInfo	src/vimtlib/autoload/tsession.vim	/^function! s:CollectBuffersInfo(session) "{{{3$/;"	f
CollectDiffs	src/vimtlib/autoload/tbak.vim	/^fun! s:CollectDiffs(global, pattern) "{{{3$/;"	f
CollectFileNames	src/vimtlib/autoload/viki.vim	/^fun! s:CollectFileNames(lb, le, bang) "{{{3$/;"	f
CollectFunctions	src/vimtlib/autoload/tskeleton.vim	/^function! s:CollectFunctions(pattern)$/;"	f
CollectHeader	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:CollectHeader(acc, ids)$/;"	f
CollectMultipart	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:CollectMultipart(boundary)$/;"	f
CollectVikiWords	src/vimtlib/autoload/viki.vim	/^function! s:CollectVikiWords(table, filename, basedir) "{{{3$/;"	f
CollectWindowsInfo	src/vimtlib/autoload/tsession.vim	/^function! s:CollectWindowsInfo(session) "{{{3$/;"	f
ColorHEX	plugin/colorx.vim	/^command! ColorHEX :call s:append_colour(s:colour_hex())$/;"	c
ColorRGB	plugin/colorx.vim	/^command! ColorRGB :call s:append_colour(s:colour_rgb())$/;"	c
ColorScroller	plugin/scrollcolor.vim	/^function! s:ColorScroller()$/;"	f
ComeHere	src/vimtlib/plugin/tGpg.vim	/^function! s:ComeHere(text) "{{{3$/;"	f
CommandEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:CommandEdit(cmd,name,prefix,suffix,filter,default,...)$/;"	f
CommandEdit	junk/rails.vim	/^function! s:CommandEdit(cmd,name,prefix,suffix,filter,default,...)$/;"	f
CommandLineCompletion	plugin/supertab.vim	/^function! s:CommandLineCompletion()$/;"	f
CommandList	bundle/vim-rails/autoload/rails.vim	/^function! s:CommandList(A,L,P)$/;"	f
CommandList	junk/rails.vim	/^function! s:CommandList(A,L,P)$/;"	f
CommandT	plugin/command-t.vim	/^command -nargs=? -complete=dir CommandT call <SID>CommandTShowFileFinder(<q-args>)$/;"	c
CommandT	ruby/command-t/controller.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/finder.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/finder/buffer_finder.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/finder/file_finder.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/match_window.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/prompt.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/scanner.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/scanner/buffer_scanner.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/scanner/file_scanner.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/settings.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/stub.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/vim.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/vim/path_utilities.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/vim/screen.rb	/^module CommandT$/;"	m
CommandT	ruby/command-t/vim/window.rb	/^module CommandT$/;"	m
CommandTAcceptSelection	plugin/command-t.vim	/^function CommandTAcceptSelection()$/;"	f
CommandTAcceptSelectionSplit	plugin/command-t.vim	/^function CommandTAcceptSelectionSplit()$/;"	f
CommandTAcceptSelectionTab	plugin/command-t.vim	/^function CommandTAcceptSelectionTab()$/;"	f
CommandTAcceptSelectionVSplit	plugin/command-t.vim	/^function CommandTAcceptSelectionVSplit()$/;"	f
CommandTBackspace	plugin/command-t.vim	/^function CommandTBackspace()$/;"	f
CommandTBuffer	plugin/command-t.vim	/^command CommandTBuffer call <SID>CommandTShowBufferFinder()$/;"	c
CommandTCancel	plugin/command-t.vim	/^function CommandTCancel()$/;"	f
CommandTClear	plugin/command-t.vim	/^function CommandTClear()$/;"	f
CommandTCursorEnd	plugin/command-t.vim	/^function CommandTCursorEnd()$/;"	f
CommandTCursorLeft	plugin/command-t.vim	/^function CommandTCursorLeft()$/;"	f
CommandTCursorRight	plugin/command-t.vim	/^function CommandTCursorRight()$/;"	f
CommandTCursorStart	plugin/command-t.vim	/^function CommandTCursorStart()$/;"	f
CommandTDelete	plugin/command-t.vim	/^function CommandTDelete()$/;"	f
CommandTFlush	plugin/command-t.vim	/^command CommandTFlush call <SID>CommandTFlush()$/;"	c
CommandTFlush	plugin/command-t.vim	/^function s:CommandTFlush()$/;"	f
CommandTHandleKey	plugin/command-t.vim	/^function CommandTHandleKey(arg)$/;"	f
CommandTMatch_initialize	ruby/command-t/match.c	/^VALUE CommandTMatch_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatch_matches	ruby/command-t/match.c	/^VALUE CommandTMatch_matches(VALUE self)$/;"	f
CommandTMatch_to_s	ruby/command-t/match.c	/^VALUE CommandTMatch_to_s(VALUE self)$/;"	f
CommandTMatcher_initialize	ruby/command-t/matcher.c	/^VALUE CommandTMatcher_initialize(int argc, VALUE *argv, VALUE self)$/;"	f
CommandTMatcher_matches_for	ruby/command-t/matcher.c	/^VALUE CommandTMatcher_matches_for(VALUE self, VALUE abbrev)$/;"	f
CommandTMatcher_sorted_matches_for	ruby/command-t/matcher.c	/^VALUE CommandTMatcher_sorted_matches_for(VALUE self, VALUE abbrev, VALUE options)$/;"	f
CommandTRubyWarning	plugin/command-t.vim	/^function s:CommandTRubyWarning()$/;"	f
CommandTSelectNext	plugin/command-t.vim	/^function CommandTSelectNext()$/;"	f
CommandTSelectPrev	plugin/command-t.vim	/^function CommandTSelectPrev()$/;"	f
CommandTShowBufferFinder	plugin/command-t.vim	/^function s:CommandTShowBufferFinder()$/;"	f
CommandTShowFileFinder	plugin/command-t.vim	/^function s:CommandTShowFileFinder(arg)$/;"	f
CommandTToggleFocus	plugin/command-t.vim	/^function CommandTToggleFocus()$/;"	f
CommandT_option_from_hash	ruby/command-t/ext.c	/^VALUE CommandT_option_from_hash(const char *option, VALUE hash)$/;"	f
CommentBlock	autoload/tcomment.vim	/^function! s:CommentBlock(beg, end, uncomment, checkRx, replace, indentStr)$/;"	f
CommentBlock	junk/NERD_commenter.vim	/^function s:CommentBlock(top, bottom, lSide, rSide, forceNested )$/;"	f
CommentBlock	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentBlock(top, bottom, lSide, rSide, forceNested )$/;"	f
CommentBlock	src/vimtlib/autoload/tcomment.vim	/^function! s:CommentBlock(beg, end, uncomment, checkRx, replace, indentStr)$/;"	f
CommentDef	autoload/tcomment.vim	/^function! s:CommentDef(beg, end, checkRx, commentMode, cstart, cend)$/;"	f
CommentDef	src/vimtlib/autoload/tcomment.vim	/^function! s:CommentDef(beg, end, checkRx, commentMode, cstart, cend)$/;"	f
CommentLines	autoload/tcomment.vim	/^function! s:CommentLines(beg, end, cstart, cend, uncomment, cmtCheck, cms0, indentStr) "{{{3$/;"	f
CommentLines	junk/NERD_commenter.vim	/^function s:CommentLines(forceNested, align, firstLine, lastLine)$/;"	f
CommentLines	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLines(forceNested, align, firstLine, lastLine)$/;"	f
CommentLines	src/vimtlib/autoload/tcomment.vim	/^function! s:CommentLines(beg, end, cstart, cend, uncomment, cmtCheck, cms0, indentStr) "{{{3$/;"	f
CommentLinesMinimal	junk/NERD_commenter.vim	/^function s:CommentLinesMinimal(firstLine, lastLine)$/;"	f
CommentLinesMinimal	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesMinimal(firstLine, lastLine)$/;"	f
CommentLinesSexy	junk/NERD_commenter.vim	/^function s:CommentLinesSexy(topline, bottomline)$/;"	f
CommentLinesSexy	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesSexy(topline, bottomline)$/;"	f
CommentLinesToggle	junk/NERD_commenter.vim	/^function s:CommentLinesToggle(forceNested, firstLine, lastLine)$/;"	f
CommentLinesToggle	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesToggle(forceNested, firstLine, lastLine)$/;"	f
CommentMode	autoload/tcomment.vim	/^function! s:CommentMode(commentMode, newmode) "{{{3$/;"	f
CommentMode	src/vimtlib/autoload/tcomment.vim	/^function! s:CommentMode(commentMode, newmode) "{{{3$/;"	f
CommentRegion	junk/NERD_commenter.vim	/^function s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested)$/;"	f
CommentRegion	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested)$/;"	f
CommentRegion	src/vimtlib/autoload/tassert.vim	/^fun! s:CommentRegion(mode, line1, line2)$/;"	f
Commit	plugin/fugitive.vim	/^function! s:Commit(args) abort$/;"	f
CommitComplete	plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
Compare	src/vimtlib/autoload/should/be.vim	/^function! s:Compare(a, b, comparator) "{{{3$/;"	f
CompareBufferNrByMRU	src/vimtlib/autoload/tlib/buffer.vim	/^function! s:CompareBufferNrByMRU(a, b) "{{{3$/;"	f
CompareLines	src/vimtlib/autoload/should/yield.vim	/^function! s:CompareLines(lines1, lines2) "{{{3$/;"	f
CompareRanks	plugin/fuzzyfinder.vim	/^function! s:CompareRanks(i1, i2)$/;"	f
CompareTimeDescending	plugin/fuzzyfinder.vim	/^function! s:CompareTimeDescending(i1, i2)$/;"	f
CompilerSet	src/vimtlib/compiler/deplate.vim	/^    command! -nargs=* CompilerSet setlocal <args>$/;"	c
Complete	src/vimtlib/autoload/ttagcomplete.vim	/^function! s:Complete(findstart, base) "{{{3$/;"	f
CompleteTabularizeCommand	plugin/Tabular.vim	/^function! s:CompleteTabularizeCommand(argstart, cmdline, cursorpos)$/;"	f
CompleteTabularizeCommand	src/tabular/plugin/Tabular.vim	/^function! s:CompleteTabularizeCommand(argstart, cmdline, cursorpos)$/;"	f
Complete_cd	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_cd(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_cd	junk/rails.vim	/^function! s:Complete_cd(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_console	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_console(A,L,P)$/;"	f
Complete_console	junk/rails.vim	/^function! s:Complete_console(A,L,P)$/;"	f
Complete_destroy	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_destroy(A,L,P)$/;"	f
Complete_destroy	junk/rails.vim	/^function! s:Complete_destroy(A,L,P)$/;"	f
Complete_edit	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_edit(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_edit	junk/rails.vim	/^function! s:Complete_edit(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_environments	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_environments(...)$/;"	f
Complete_environments	junk/rails.vim	/^function! s:Complete_environments(...)$/;"	f
Complete_find	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_find(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_find	junk/rails.vim	/^function! s:Complete_find(ArgLead, CmdLine, CursorPos)$/;"	f
Complete_generate	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_generate(A,L,P)$/;"	f
Complete_generate	junk/rails.vim	/^function! s:Complete_generate(A,L,P)$/;"	f
Complete_preview	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_preview(A,L,P)$/;"	f
Complete_preview	junk/rails.vim	/^function! s:Complete_preview(A,L,P)$/;"	f
Complete_rake	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_rake(A,L,P)$/;"	f
Complete_rake	junk/rails.vim	/^function! s:Complete_rake(A,L,P)$/;"	f
Complete_related	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_related(A,L,P)$/;"	f
Complete_related	junk/rails.vim	/^function! s:Complete_related(A,L,P)$/;"	f
Complete_ruby	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_ruby(A,L,P)$/;"	f
Complete_ruby	junk/rails.vim	/^function! s:Complete_ruby(A,L,P)$/;"	f
Complete_script	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_script(ArgLead,CmdLine,P)$/;"	f
Complete_script	junk/rails.vim	/^function! s:Complete_script(ArgLead,CmdLine,P)$/;"	f
Complete_server	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_server(A,L,P)$/;"	f
Complete_server	junk/rails.vim	/^function! s:Complete_server(A,L,P)$/;"	f
Complete_set	bundle/vim-rails/autoload/rails.vim	/^function! s:Complete_set(A,L,P)$/;"	f
Complete_set	junk/rails.vim	/^function! s:Complete_set(A,L,P)$/;"	f
CompletionReset	plugin/supertab.vim	/^function! s:CompletionReset(char)$/;"	f
Concat	plugin/fuzzyfinder.vim	/^function! s:Concat(in)$/;"	f
Concordance	src/vimtlib/plugin/concordance.vim	/^command! Concordance call concordance#Concordance()$/;"	c
ConditionalLet	src/vimtlib/plugin/localvariables.vim	/^fun! s:ConditionalLet(var,value)$/;"	f
Configuration	src/vimtlib/ruby/tbibtools.rb	/^    class Configuration$/;"	c	class:TBibTools
ConfirmCopyMove	src/vimtlib/autoload/tselectfiles.vim	/^function! s:ConfirmCopyMove(query, src, dest)$/;"	f
Conque	bundle/conque-term/autoload/conque_term/conque.py	/^class Conque:$/;"	c
ConqueScreen	bundle/conque-term/autoload/conque_term/conque_screen.py	/^class ConqueScreen(object):$/;"	c
ConqueSole	bundle/conque-term/autoload/conque_term/conque_sole.py	/^class ConqueSole(Conque):$/;"	c
ConqueSoleSharedMemory	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^class ConqueSoleSharedMemory():$/;"	c
ConqueSoleSubprocess	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^class ConqueSoleSubprocess():$/;"	c
ConqueSoleWrapper	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^class ConqueSoleWrapper():$/;"	c
ConqueSubprocess	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^class ConqueSubprocess:$/;"	c
ConqueTerm	bundle/conque-term/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTerm call conque_term#open(<q-args>)$/;"	c
ConqueTermSplit	bundle/conque-term/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermSplit call conque_term#open(<q-args>, ['belowright split'])$/;"	c
ConqueTermTab	bundle/conque-term/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermTab call conque_term#open(<q-args>, ['tabnew'])$/;"	c
ConqueTermVSplit	bundle/conque-term/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermVSplit call conque_term#open(<q-args>, ['belowright vsplit'])$/;"	c
ConstructFromComments	autoload/tcomment.vim	/^function! s:ConstructFromComments(commentMode)$/;"	f
ConstructFromComments	src/vimtlib/autoload/tcomment.vim	/^function! s:ConstructFromComments(commentMode)$/;"	f
ContextCompletion	plugin/supertab.vim	/^function! s:ContextCompletion()$/;"	f
ContextDiscover	plugin/supertab.vim	/^function! s:ContextDiscover()$/;"	f
ContextText	plugin/supertab.vim	/^function! s:ContextText()$/;"	f
Controller	ruby/command-t/controller.rb	/^  class Controller$/;"	c	class:CommandT
ConvertLeadingSpacesToTabs	junk/NERD_commenter.vim	/^function s:ConvertLeadingSpacesToTabs(line)$/;"	f
ConvertLeadingSpacesToTabs	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingSpacesToTabs(line)$/;"	f
ConvertLeadingTabsToSpaces	junk/NERD_commenter.vim	/^function s:ConvertLeadingTabsToSpaces(line)$/;"	f
ConvertLeadingTabsToSpaces	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingTabsToSpaces(line)$/;"	f
ConvertLeadingWhiteSpace	junk/NERD_commenter.vim	/^function s:ConvertLeadingWhiteSpace(line)$/;"	f
ConvertLeadingWhiteSpace	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingWhiteSpace(line)$/;"	f
ConvertWildcardToRegexp	plugin/fuzzyfinder.vim	/^function! s:ConvertWildcardToRegexp(expr)$/;"	f
Convert_quoted_printable	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:Convert_quoted_printable(body)$/;"	f
CopyFile	src/vimtlib/autoload/tselectfiles.vim	/^function! s:CopyFile(src, dest, confirm)$/;"	f
Count	autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
Count	src/snipmate.vim/autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
CountEntries	plugin/scrollcolor.vim	/^function! s:CountEntries(list)$/;"	f
CountHelper	src/vimtlib/autoload/tlib/string.vim	/^function! s:CountHelper() "{{{3$/;"	f
CountNonESCedOccurances	junk/NERD_commenter.vim	/^function s:CountNonESCedOccurances(str, searchstr, escChar)$/;"	f
CountNonESCedOccurances	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CountNonESCedOccurances(str, searchstr, escChar)$/;"	f
CreateMaps	junk/NERD_commenter.vim	/^function! s:CreateMaps(target, combo)$/;"	f
CreateMaps	src/nerdcommenter/plugin/NERD_commenter.vim	/^function! s:CreateMaps(target, combo)$/;"	f
CreateMenuItems	junk/NERD_commenter.vim	/^    function! s:CreateMenuItems(target, desc, root)$/;"	f
CreateMenuItems	src/nerdcommenter/plugin/NERD_commenter.vim	/^    function! s:CreateMenuItems(target, desc, root)$/;"	f
CreateMenus	bundle/vim-rails/plugin/rails.vim	/^function! s:CreateMenus() abort$/;"	f
CucumberComplete	ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
CucumberComplete	src/vim-cucumber/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
CurrentColor	plugin/scrollcolor.vim	/^function! s:CurrentColor()$/;"	f
CurrentFile	src/vimtlib/autoload/spec.vim	/^function! s:CurrentFile() "{{{3$/;"	f
CustomComplete	bundle/vim-rails/autoload/rails.vim	/^function! s:CustomComplete(A,L,P,cmd)$/;"	f
CustomComplete	junk/rails.vim	/^function! s:CustomComplete(A,L,P,cmd)$/;"	f
DEBUG	bundle/conque-term/autoload/conque_term/conque.py	/^import time # DEBUG$/;"	i
DEBUG	bundle/conque-term/autoload/conque_term/conque_globals.py	/^import logging # DEBUG$/;"	i
DEBUG	bundle/conque-term/autoload/conque_term/conque_globals.py	/^import os # DEBUG$/;"	i
DEBUG	bundle/conque-term/autoload/conque_term/conque_globals.py	/^import traceback # DEBUG$/;"	i
DEBUG_ONLY_THIS_PROCESS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^DEBUG_ONLY_THIS_PROCESS = 0x00000002$/;"	v
DEBUG_PROCESS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^DEBUG_PROCESS = 0x00000001$/;"	v
DEFFILE	ruby/command-t/Makefile	/^DEFFILE = $/;"	m
DEFS	ruby/command-t/Makefile	/^DEFS     = $/;"	m
DETACHED_PROCESS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^DETACHED_PROCESS = 0x00000008$/;"	v
DISTCLEANFILES	ruby/command-t/Makefile	/^DISTCLEANFILES = $/;"	m
DLDFLAGS	ruby/command-t/Makefile	/^DLDFLAGS = $(ldflags) $(dldflags) $(archflag)$/;"	m
DLLIB	ruby/command-t/Makefile	/^DLLIB = $(TARGET).bundle$/;"	m
DM	junk/cecutil.vim	/^com! -bar -nargs=1 DM	call DestroyMark(<q-args>)$/;"	c
DOC	bundle/delimitMate/Makefile	/^DOC=$(wildcard doc\/*.txt)$/;"	m
DefRuby	autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefaultRx	src/vimtlib/autoload/ttoc.vim	/^function! s:DefaultRx() "{{{3$/;"	f
DefaultValue	autoload/tcomment.vim	/^function! s:DefaultValue(option)$/;"	f
DefaultValue	src/vimtlib/autoload/tcomment.vim	/^function! s:DefaultValue(option)$/;"	f
DefineSnips	plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
DefineSnips	src/snipmate.vim/plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
DelMark	src/vimtlib/autoload/tmarks.vim	/^function! s:DelMark(m) "{{{3$/;"	f
DelTo	src/vimtlib/autoload/tskeleton.vim	/^function! s:DelTo(pattern, inclusive)$/;"	f
DeleteBlankLines	junk/vimacs-0.93.vim	/^function! <SID>DeleteBlankLines()$/;"	f
DeleteFile	src/vimtlib/autoload/tselectfiles.vim	/^function! s:DeleteFile(file)$/;"	f
DeleteRegionBody	src/vimtlib/autoload/viki.vim	/^fun! s:DeleteRegionBody(...) "{{{3$/;"	f
DeleteSession	bundle/session.vim/plugin/session.vim	/^command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names DeleteSession call xolox#session#delete_cmd(<q-args>, <q-bang>)$/;"	c
DeleteThisBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:DeleteThisBuffer(buffer)$/;"	f
DelimitMateDo	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:DelimitMateDo(...) "{{{$/;"	f
DelimitMateDo	junk/delimitMate.vim	/^function! s:DelimitMateDo() "{{{1$/;"	f
DelimitMateReload	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateReload call s:DelimitMateDo(1)$/;"	c
DelimitMateReload	junk/delimitMate.vim	/^command! DelimitMateReload call s:DelimitMateDo()$/;"	c
DelimitMateSwitch	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateSwitch call s:DelimitMateSwitch()$/;"	c
DelimitMateSwitch	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:DelimitMateSwitch() "{{{$/;"	f
DelimitMateTest	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateTest silent call s:TestMappingsDo()$/;"	c
DelimitMateTest	junk/delimitMate.vim	/^command! DelimitMateTest call s:TestMappingsDo()$/;"	c
DeplateCompilerSet	src/vimtlib/compiler/deplate.vim	/^command! -nargs=* DeplateCompilerSet call DeplateCompilerSet(<q-args>)$/;"	c
DeplateCompilerSet	src/vimtlib/compiler/deplate.vim	/^fun! DeplateCompilerSet(options)$/;"	f
DestroyMark	junk/cecutil.vim	/^fun! DestroyMark(markname)$/;"	f
Detect	bundle/vim-rails/plugin/rails.vim	/^function! s:Detect(filename)$/;"	f
Detect	junk/fugitive.vim	/^function! s:Detect()$/;"	f
Detect	plugin/fugitive.vim	/^function! s:Detect(path)$/;"	f
Detect	src/vim-fugitive/plugin/fugitive.vim	/^function! s:Detect()$/;"	f
DidSetup	src/vimtlib/autoload/tskeleton.vim	/^function! s:DidSetup(filetype) "{{{3$/;"	f
Diff	junk/fugitive.vim	/^function! s:Diff(...) abort$/;"	f
Diff	plugin/fugitive.vim	/^function! s:Diff(...) abort$/;"	f
Diff	src/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(...) abort$/;"	f
DirComplete	junk/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
DirComplete	plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
DirComplete	src/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Directory	ruby/fuzzy_file_finder.rb	/^  class Directory #:nodoc:$/;"	c	class:FuzzyFileFinder
Dispatch	src/vimtlib/autoload/tskeleton.vim	/^function! s:Dispatch(name) "{{{3$/;"	f
DisplayFormat	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:DisplayFormat(id)$/;"	f
DisplayStack	src/vimtlib/autoload/tcalc.vim	/^function! s:DisplayStack(stack_lines) "{{{3$/;"	f
DoVisual	src/vimtlib/autoload/tskeleton.vim	/^function! s:DoVisual(pattern, inclusive, cmd) "{{{3$/;"	f
Doc	bundle/vim-rails/autoload/rails.vim	/^function! s:Doc(bang, string)$/;"	f
Doc	junk/rails.vim	/^function! s:Doc(bang, string)$/;"	f
DoesBlockHaveDelim	junk/NERD_commenter.vim	/^function s:DoesBlockHaveDelim(delim, top, bottom)$/;"	f
DoesBlockHaveDelim	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveDelim(delim, top, bottom)$/;"	f
DoesBlockHaveMultipartDelim	junk/NERD_commenter.vim	/^function s:DoesBlockHaveMultipartDelim(top, bottom)$/;"	f
DoesBlockHaveMultipartDelim	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveMultipartDelim(top, bottom)$/;"	f
ENHANCED_KEY	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^ENHANCED_KEY = 0x0100$/;"	v
EXEEXT	ruby/command-t/Makefile	/^EXEEXT = $/;"	m
EXTENDED_STARTUPINFO_PRESENT	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^EXTENDED_STARTUPINFO_PRESENT = 0x00080000$/;"	v
EXTSTATIC	ruby/command-t/Makefile	/^EXTSTATIC = $/;"	m
EchoWithHl	plugin/fuzzyfinder.vim	/^function! s:EchoWithHl(msg, hl)$/;"	f
EchonPadded	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^function s:EchonPadded(msg)$/;"	f
Edit	bundle/vim-rails/autoload/rails.vim	/^function! s:Edit(count,cmd,...)$/;"	f
Edit	junk/fugitive.vim	/^function! s:Edit(cmd,...) abort$/;"	f
Edit	junk/rails.vim	/^function! s:Edit(count,cmd,...)$/;"	f
Edit	plugin/fugitive.vim	/^function! s:Edit(cmd,...) abort$/;"	f
Edit	src/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,...) abort$/;"	f
Edit	src/vimtlib/plugin/tmru.vim	/^function! s:Edit(filename) "{{{3$/;"	f
EditCallback	src/vimtlib/autoload/tlib/input.vim	/^function! s:EditCallback(...) "{{{3$/;"	f
EditCallback	src/vimtlib/plugin/tregisters.vim	/^function! s:EditCallback(register, ok, text) "{{{3$/;"	f
EditComplete	junk/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditComplete	plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditComplete	src/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditCompleteAgent	src/vimtlib/autoload/viki.vim	/^function! s:EditCompleteAgent(interviki, afname, fname) "{{{3$/;"	f
EditCompleteMapAgent1	src/vimtlib/autoload/viki.vim	/^function! s:EditCompleteMapAgent1(val, sfx, iv, rx) "{{{3$/;"	f
EditLocalFile	src/vimtlib/autoload/viki.vim	/^function! s:EditLocalFile(cmd, fname, fi, li, co, anchor) "{{{3$/;"	f
EditMRU	src/vimtlib/plugin/tmru.vim	/^function! s:EditMRU()$/;"	f
EditScratchBuffer	src/vimtlib/autoload/tskeleton.vim	/^function! s:EditScratchBuffer(filetype, ...) "{{{3$/;"	f
EditSimpleRb	bundle/vim-rails/autoload/rails.vim	/^function! s:EditSimpleRb(cmd,name,target,prefix,suffix,...)$/;"	f
EditSimpleRb	junk/rails.vim	/^function! s:EditSimpleRb(cmd,name,target,prefix,suffix,...)$/;"	f
EditWrapper	src/vimtlib/autoload/viki.vim	/^function! s:EditWrapper(cmd, fname) "{{{3$/;"	f
Egrep	junk/grep.vim	/^command! -nargs=* -complete=file Egrep$/;"	c
EgrepAdd	junk/grep.vim	/^command! -nargs=* -complete=file EgrepAdd$/;"	c
Egrep_Path	junk/grep.vim	/^    let Egrep_Path = 'egrep'$/;"	v
EligibleBits	src/vimtlib/autoload/tskeleton.vim	/^function! s:EligibleBits(type) "{{{3$/;"	f
EnableLongestEnhancement	plugin/supertab.vim	/^function! s:EnableLongestEnhancement()$/;"	f
EncodeCommentPart	autoload/tcomment.vim	/^function! s:EncodeCommentPart(string)$/;"	f
EncodeCommentPart	src/vimtlib/autoload/tcomment.vim	/^function! s:EncodeCommentPart(string)$/;"	f
EndRx	autoload/tcomment.vim	/^function! s:EndRx(pos)$/;"	f
EndRx	src/vimtlib/autoload/tcomment.vim	/^function! s:EndRx(pos)$/;"	f
EnsureAttachmentsDir	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:EnsureAttachmentsDir()$/;"	f
EntryByIndex	plugin/scrollcolor.vim	/^function! s:EntryByIndex(list,index)$/;"	f
EnumExpandedDirsEntries	plugin/fuzzyfinder.vim	/^function! s:EnumExpandedDirsEntries(dir, excluded)$/;"	f
Eol	src/vimtlib/autoload/tskeleton.vim	/^function! s:Eol(mode, col) "{{{3$/;"	f
ErrMsg	autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
Esc	junk/NERD_commenter.vim	/^function s:Esc(str)$/;"	f
Esc	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Esc(str)$/;"	f
Escape	autoload/vimball.vim	/^fun s:Escape(name)$/;"	f
EscapeBackSlash	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^function s:EscapeBackSlash(str)$/;"	f
EscapeFilename	plugin/fuzzyfinder.vim	/^function! s:EscapeFilename(fn)$/;"	f
EscapeFilename	src/vimtlib/plugin/tGpg.vim	/^function! s:EscapeFilename(file) "{{{3$/;"	f
EscapeShellCmdChars	src/vimtlib/plugin/tGpg.vim	/^function! s:EscapeShellCmdChars(text) "{{{3$/;"	f
EvalBitProcess	src/vimtlib/autoload/tskeleton.vim	/^function! s:EvalBitProcess(eval, global) "{{{3$/;"	f
EvalSelection	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelection(id, proc, cmd, ...) "{{{3$/;"	f
EvalSelection	src/vimtlib/ruby/EvalSelection.rb	/^module EvalSelection$/;"	m
EvalSelectionAbstractInterpreter	src/vimtlib/ruby/EvalSelection.rb	/^class EvalSelectionAbstractInterpreter$/;"	c
EvalSelectionBuildMenu_sps	src/vimtlib/plugin/EvalSelection.vim	/^        fun! EvalSelectionBuildMenu_sps() "{{{3$/;"	f
EvalSelectionCalculate	src/vimtlib/plugin/EvalSelection.vim	/^        fun! EvalSelectionCalculate(formula) "{{{3$/;"	f
EvalSelectionCalculate	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelectionCalculate(formula) "{{{3$/;"	f
EvalSelectionCmdLine	src/vimtlib/plugin/EvalSelection.vim	/^command! -nargs=1 EvalSelectionCmdLine call EvalSelectionCmdLine(<q-args>)$/;"	c
EvalSelectionCmdLine	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelectionCmdLine(lang) "{{{3$/;"	f
EvalSelectionCmdLineCalculator	src/vimtlib/plugin/EvalSelection.vim	/^command! EvalSelectionCmdLineCalculator :EvalSelectionCmdLine calculate$/;"	c
EvalSelectionCmdLineLisp	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionCmdLineLisp call EvalSelectionCmdLine("lisp")$/;"	c
EvalSelectionCmdLineMz	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionCmdLineMz :EvalSelectionCmdLine mz$/;"	c
EvalSelectionCmdLineOCaml	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionCmdLineOCaml call EvalSelectionCmdLine("ocaml")$/;"	c
EvalSelectionCmdLinePerl	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionCmdLinePerl :EvalSelectionCmdLine perl$/;"	c
EvalSelectionCmdLinePhp	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionCmdLinePhp call EvalSelectionCmdLine("php")$/;"	c
EvalSelectionCmdLinePython	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionCmdLinePython :EvalSelectionCmdLine python$/;"	c
EvalSelectionCmdLineR	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionCmdLineR call EvalSelectionCmdLine("r")$/;"	c
EvalSelectionCmdLineRuby	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionCmdLineRuby :EvalSelectionCmdLine ruby$/;"	c
EvalSelectionCmdLineSPSS	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionCmdLineSPSS call EvalSelectionCmdLine("sps")$/;"	c
EvalSelectionCmdLineScheme	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionCmdLineScheme call EvalSelectionCmdLine("scheme")$/;"	c
EvalSelectionCmdLineSh	src/vimtlib/plugin/EvalSelection.vim	/^command! EvalSelectionCmdLineSh :EvalSelectionCmdLine sh$/;"	c
EvalSelectionCmdLineTcl	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionCmdLineTcl :EvalSelectionCmdLine tcl$/;"	c
EvalSelectionCompleteCurrentWord	src/vimtlib/plugin/EvalSelection.vim	/^            \\ EvalSelectionCompleteCurrentWord call EvalSelectionCompleteCurrentWord(<q-args>)$/;"	c
EvalSelectionCompleteCurrentWord	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelectionCompleteCurrentWord(...) "{{{3$/;"	f
EvalSelectionCompleteCurrentWordInsert	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelectionCompleteCurrentWordInsert(word, remove_menu) "{{{3$/;"	f
EvalSelectionCompleteCurrentWord_r	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelectionCompleteCurrentWord_r(bit) "{{{3$/;"	f
EvalSelectionEcho	src/vimtlib/plugin/EvalSelection.vim	/^command! -nargs=* EvalSelectionEcho call EvalSelectionEcho(<q-args>)$/;"	c
EvalSelectionEcho	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelectionEcho(txt, ...)$/;"	f
EvalSelectionGenerateBindings	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelectionGenerateBindings(shortcut, lang, ...) "{{{3$/;"	f
EvalSelectionGenerateBindingsHelper	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelectionGenerateBindingsHelper(mapmode, mapleader, lang, modes, eyank, edelete) "{{{3$/;"	f
EvalSelectionGetWordCompletions	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelectionGetWordCompletions(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
EvalSelectionGetWordCompletions_r	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelectionGetWordCompletions_r(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
EvalSelectionInterpreter	src/vimtlib/ruby/EvalSelection.rb	/^class EvalSelectionInterpreter < EvalSelectionAbstractInterpreter$/;"	c
EvalSelectionLog	src/vimtlib/plugin/EvalSelection.vim	/^command! -nargs=* EvalSelectionLog call EvalSelectionLog(<q-args>)$/;"	c
EvalSelectionLog	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelectionLog(txt, ...) "{{{3$/;"	f
EvalSelectionLogAppend	src/vimtlib/plugin/EvalSelection.vim	/^fun! <SID>EvalSelectionLogAppend(txt, ...) "{{{3$/;"	f
EvalSelectionOLE	src/vimtlib/ruby/EvalSelection.rb	/^class EvalSelectionOLE < EvalSelectionAbstractInterpreter$/;"	c
EvalSelectionParagraphMappings	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelectionParagraphMappings(log, ...) "{{{3$/;"	f
EvalSelectionQuit	src/vimtlib/plugin/EvalSelection.vim	/^command! -nargs=1 EvalSelectionQuit ruby EvalSelection.tear_down(<q-args>)$/;"	c
EvalSelectionQuitLisp	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionQuitLisp  ruby EvalSelection.tear_down(VIM::evaluate("g:evalSelectionLispInterpreter"))$/;"	c
EvalSelectionQuitOCaml	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionQuitOCaml    ruby EvalSelection.tear_down("OCaml")$/;"	c
EvalSelectionQuitPhp	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionQuitPhp  ruby EvalSelection.tear_down(VIM::evaluate("g:evalSelectionPhpInterpreter"))$/;"	c
EvalSelectionQuitR	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionQuitR    ruby EvalSelection.tear_down("R")$/;"	c
EvalSelectionQuitSPSS	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionQuitSPSS    ruby EvalSelection.tear_down("SPSS")$/;"	c
EvalSelectionQuitScheme	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionQuitScheme    ruby EvalSelection.tear_down(VIM::evaluate("g:evalSelectionSchemeInterpreter"))$/;"	c
EvalSelectionRunSpssMenu	src/vimtlib/plugin/EvalSelection.vim	/^        fun! EvalSelectionRunSpssMenu(menuEntry) "{{{3$/;"	f
EvalSelectionSetupLisp	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionSetupLisp ruby EvalSelection.setup(VIM::evaluate("g:evalSelectionLispInterpreter"), EvalSelectionLisp)$/;"	c
EvalSelectionSetupOCaml	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionSetupOCaml   ruby EvalSelection.setup("OCaml", EvalSelectionOCaml)$/;"	c
EvalSelectionSetupPhp	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionSetupPhp ruby EvalSelection.setup(VIM::evaluate("g:evalSelectionPhpInterpreter"), EvalSelectionPhp)$/;"	c
EvalSelectionSetupR	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionSetupR   ruby EvalSelection.setup("R", EvalSelectionR)$/;"	c
EvalSelectionSetupSPSS	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionSetupSPSS   ruby EvalSelection.setup("SPSS", EvalSelectionSPSS)$/;"	c
EvalSelectionSetupScheme	src/vimtlib/plugin/EvalSelection.vim	/^    command! EvalSelectionSetupScheme   ruby EvalSelection.setup(VIM::evaluate("g:evalSelectionSchemeInterpreter"), EvalSelectionScheme)$/;"	c
EvalSelectionStdInFileOut	src/vimtlib/ruby/EvalSelection.rb	/^class EvalSelectionStdInFileOut < EvalSelectionInterpreter$/;"	c
EvalSelectionSystem	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelectionSystem(txt) "{{{3$/;"	f
EvalSelectionTalk	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelectionTalk(id, body) "{{{3$/;"	f
EvalSelection_calculate	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelection_calculate(cmd) "{{{3$/;"	f
EvalSelection_lisp	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_lisp(cmd) "{{{3$/;"	f
EvalSelection_mz	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_mz(cmd) "{{{3$/;"	f
EvalSelection_mz_helper	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_mz_helper(text) "{{{3$/;"	f
EvalSelection_ocaml	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_ocaml(cmd) "{{{3$/;"	f
EvalSelection_perl	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_perl(cmd) "{{{3$/;"	f
EvalSelection_php	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_php(cmd) "{{{3$/;"	f
EvalSelection_python	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_python(cmd) "{{{3$/;"	f
EvalSelection_r	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_r(cmd) "{{{3$/;"	f
EvalSelection_ruby	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_ruby(cmd) "{{{3$/;"	f
EvalSelection_scheme	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_scheme(cmd) "{{{3$/;"	f
EvalSelection_sh	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelection_sh(cmd) "{{{3$/;"	f
EvalSelection_sps	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_sps(cmd) "{{{3$/;"	f
EvalSelection_tcl	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_tcl(cmd) "{{{3$/;"	f
EvalSelection_tcl_helper	src/vimtlib/plugin/EvalSelection.vim	/^    fun! EvalSelection_tcl_helper(text) "{{{3$/;"	f
EvalSelection_vim	src/vimtlib/plugin/EvalSelection.vim	/^fun! EvalSelection_vim(cmd) "{{{3$/;"	f
EvaluateLearningRank	plugin/fuzzyfinder.vim	/^function! s:EvaluateLearningRank(word, stats)$/;"	f
EvaluateMatchingRate	plugin/fuzzyfinder.vim	/^function! s:EvaluateMatchingRate(word, base)$/;"	f
Exec	src/vimtlib/autoload/tskeleton.vim	/^function! s:Exec(arg) "{{{3$/;"	f
ExecCommand	src/vimtlib/plugin/TortoiseSVN.vim	/^fun! <SID>ExecCommand(cmd)$/;"	f
ExecEscape	src/vimtlib/autoload/tbak.vim	/^fun! s:ExecEscape(cmd) "{{{3$/;"	f
Execute	src/vimtlib/autoload/tskeleton.vim	/^function! s:Execute(text) "{{{3$/;"	f
ExecuteInTree	junk/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExecuteInTree	plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExecuteInTree	src/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExistsPrompt	plugin/fuzzyfinder.vim	/^function! s:ExistsPrompt(line, prompt)$/;"	f
ExistsPrompt	plugin/fuzzyfinder_textmate.vim	/^function! s:ExistsPrompt(line, prompt)$/;"	f
ExitDialog	plugin/scrollcolor.vim	/^function! s:ExitDialog(old, action)$/;"	f
Expand	src/vimtlib/autoload/tskeleton.vim	/^function! s:Expand(bit, ...) "{{{3$/;"	f
ExpandAbbrevMap	plugin/fuzzyfinder.vim	/^function! s:ExpandAbbrevMap(base, abbrev_map)$/;"	f
ExpandCompletion	src/vimtlib/autoload/tskeleton.vim	/^function! s:ExpandCompletion(args) "{{{3$/;"	f
ExpandMiniBit	src/vimtlib/autoload/tskeleton.vim	/^function! s:ExpandMiniBit(bit) "{{{3$/;"	f
ExpandReturn	junk/delimitMate.vim	/^function! s:ExpandReturn() "{{{1$/;"	f
ExpandSpace	junk/delimitMate.vim	/^function! s:ExpandSpace() "{{{1$/;"	f
ExpandTailDotSequenceToParentDir	plugin/fuzzyfinder.vim	/^function! s:ExpandTailDotSequenceToParentDir(base)$/;"	f
ExtendBitDefs	src/vimtlib/autoload/tskeleton.vim	/^function! s:ExtendBitDefs(dict, type) "{{{3$/;"	f
ExtraMappings	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:ExtraMappings() "{{{$/;"	f
ExtraMappings	junk/delimitMate.vim	/^function! s:ExtraMappings() "{{{1$/;"	f
Extract	bundle/vim-rails/autoload/rails.vim	/^function! s:Extract(bang,...) range abort$/;"	f
Extract	junk/rails.vim	/^function! s:Extract(bang,...) range abort$/;"	f
ExtractCommentsPart	autoload/tcomment.vim	/^function! s:ExtractCommentsPart(key)$/;"	f
ExtractCommentsPart	src/vimtlib/autoload/tcomment.vim	/^function! s:ExtractCommentsPart(key)$/;"	f
ExtractGitDir	junk/fugitive.vim	/^function! s:ExtractGitDir(path) abort$/;"	f
ExtractGitDir	plugin/fugitive.vim	/^function! s:ExtractGitDir(path) abort$/;"	f
ExtractGitDir	src/vim-fugitive/plugin/fugitive.vim	/^function! s:ExtractGitDir(path) abort$/;"	f
ExtractHeader	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:ExtractHeader(headstart, headend, name)$/;"	f
ExtractMatch	src/vimtlib/autoload/viki.vim	/^function! s:ExtractMatch(match, idx, default) "{{{3$/;"	f
ExtractSnips	plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnips	src/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnipsFile	plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
ExtractSnipsFile	src/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
F	plugin/space.vim	/^    noremap <expr> <silent> F <SID>setup_space("char", "F")$/;"	m
F	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> F <SID>setup_space("char", "F")$/;"	m
FILL_CHAR	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    FILL_CHAR = None$/;"	v	class:ConqueSoleSharedMemory
FOCUS_EVENT	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^FOCUS_EVENT = 0x0010$/;"	v
FOCUS_EVENT_RECORD	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class FOCUS_EVENT_RECORD(Structure):$/;"	c
Fgrep	junk/grep.vim	/^command! -nargs=* -complete=file Fgrep$/;"	c
FgrepAdd	junk/grep.vim	/^command! -nargs=* -complete=file FgrepAdd$/;"	c
Fgrep_Path	junk/grep.vim	/^    let Fgrep_Path = 'fgrep'$/;"	v
FileFinder	ruby/command-t/finder/file_finder.rb	/^  class FileFinder < Finder$/;"	c	class:CommandT
FileLimitExceeded	ruby/command-t/scanner/file_scanner.rb	/^    class FileLimitExceeded < ::RuntimeError; end$/;"	c	class:CommandT.FileScanner
FileRead	junk/fugitive.vim	/^function! s:FileRead()$/;"	f
FileRead	plugin/fugitive.vim	/^function! s:FileRead()$/;"	f
FileRead	src/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead()$/;"	f
FileScanner	ruby/command-t/scanner/file_scanner.rb	/^  class FileScanner < Scanner$/;"	c	class:CommandT
FileSystemEntry	ruby/fuzzy_file_finder.rb	/^  class FileSystemEntry #:nodoc:$/;"	c	class:FuzzyFileFinder
Filename	autoload/snipMate.vim	/^fun! Filename(...)$/;"	f
Filename	src/snipmate.vim/autoload/snipMate.vim	/^fun! Filename(...)$/;"	f
FiletypeInCache	src/vimtlib/autoload/tskeleton.vim	/^function! s:FiletypeInCache(filetype) "{{{3$/;"	f
FiletypeToBeInitialized	src/vimtlib/autoload/tskeleton.vim	/^function! s:FiletypeToBeInitialized(ft) "{{{3$/;"	f
FiletypesToBeInitialized	src/vimtlib/autoload/tskeleton.vim	/^function! s:FiletypesToBeInitialized(ftgroup, explicit_reset) "{{{3$/;"	f
FillInTemplate	src/vimtlib/autoload/pim.vim	/^function! s:FillInTemplate() "{{{3$/;"	f
FillParagraph	junk/vimacs-0.93.vim	/^command! FillParagraph :call <SID>FillParagraph()$/;"	c
FillParagraph	junk/vimacs-0.93.vim	/^function! <SID>FillParagraph()$/;"	f
FilterEx	plugin/fuzzyfinder.vim	/^function! s:FilterEx(in, expr, limit)$/;"	f
FilterMatching	plugin/fuzzyfinder.vim	/^function! s:FilterMatching(items, key, pattern, index, limit)$/;"	f
FilterString	autoload/tabular.vim	/^function! s:FilterString(lines, commandstring)$/;"	f
FilterString	src/tabular/autoload/tabular.vim	/^function! s:FilterString(lines, commandstring)$/;"	f
FinalEcho	plugin/scrollcolor.vim	/^function! s:FinalEcho(suffix)$/;"	f
Find	bundle/vim-rails/autoload/rails.vim	/^function! s:Find(count,cmd,...)$/;"	f
Find	junk/rails.vim	/^function! s:Find(count,cmd,...)$/;"	f
FindBoundingLinesOfSexyCom	junk/NERD_commenter.vim	/^function s:FindBoundingLinesOfSexyCom(lineNum)$/;"	f
FindBoundingLinesOfSexyCom	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindBoundingLinesOfSexyCom(lineNum)$/;"	f
FindDelimiterIndex	junk/NERD_commenter.vim	/^function s:FindDelimiterIndex(delimiter, line)$/;"	f
FindDelimiterIndex	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindDelimiterIndex(delimiter, line)$/;"	f
FindFileOtherWindow	junk/vimacs-0.93.vim	/^command! -nargs=1 -complete=file FindFileOtherWindow :call <SID>FindFileOtherWindow(<f-args>)$/;"	c
FindFileOtherWindow	junk/vimacs-0.93.vim	/^function! <SID>FindFileOtherWindow(filename)$/;"	f
FindIndex	plugin/scrollcolor.vim	/^function! s:FindIndex(list,entry)$/;"	f
FindValue	src/vimtlib/autoload/tskeleton.vim	/^function! s:FindValue(list, function, ...)$/;"	f
Findcomplete	autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
Findcomplete	src/vim-pathogen/autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
Finder	ruby/command-t/finder.rb	/^  class Finder$/;"	c	class:CommandT
Finish	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Finish() " {{{$/;"	f
FinishCommit	plugin/fugitive.vim	/^function! s:FinishCommit()$/;"	f
FlushBuffer	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:FlushBuffer() " {{{$/;"	f
FoldAllProjects	ftplugin/taskpaper.vim	/^function! s:FoldAllProjects()$/;"	f
FollowLink	src/vimtlib/autoload/viki.vim	/^function! s:FollowLink(def, ...) "{{{3$/;"	f
FormatBase	src/vimtlib/autoload/trag.vim	/^function! s:FormatBase(world) "{{{3$/;"	f
FormatName	src/vimtlib/autoload/ttagecho.vim	/^function! s:FormatName(tag) "{{{3$/;"	f
FormatQFLE	src/vimtlib/autoload/trag.vim	/^function! s:FormatQFLE(qfe) "{{{3$/;"	f
FormatRecipients	src/vimtlib/plugin/tGpg.vim	/^function! s:FormatRecipients(recipients) "{{{3$/;"	f
FormatTag	src/vimtlib/autoload/ttagecho.vim	/^function! s:FormatTag(index, max_index, tag, many_lines, compact) "{{{3$/;"	f
FormatTag	src/vimtlib/autoload/ttags.vim	/^function! s:FormatTag(tag) "{{{3$/;"	f
Fun1	src/vimtlib/spec/tassert/tassert.vim	/^function! Fun1(a) "{{{3$/;"	f
Fun1type	src/vimtlib/spec/tassert/tassert.vim	/^function! Fun1type(a) "{{{3$/;"	f
Fun2	src/vimtlib/spec/tassert/tassert.vim	/^function! Fun2() "{{{3$/;"	f
FunTakeTime	src/vimtlib/spec/tassert/tassert.vim	/^function! FunTakeTime() "{{{3$/;"	f
FuzzyFileFinder	ruby/fuzzy_file_finder.rb	/^class FuzzyFileFinder$/;"	c
FuzzyFinderAddBookmark	plugin/fuzzyfinder.vim	/^command! -bang -narg=?                  FuzzyFinderAddBookmark               call g:FuzzyFinderMode.Bookmark.bookmark_here(<q-args>)$/;"	c
FuzzyFinderAddBookmarkAsSelectedText	plugin/fuzzyfinder.vim	/^command! -bang -narg=0 -range           FuzzyFinderAddBookmarkAsSelectedText call g:FuzzyFinderMode.Bookmark.bookmark_here(s:SelectedText())$/;"	c
FuzzyFinderBookmark	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=file   FuzzyFinderBookmark                  call g:FuzzyFinderMode.Bookmark.launch_base  (<q-args>, len(<q-bang>))$/;"	c
FuzzyFinderBuffer	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=buffer FuzzyFinderBuffer                    call g:FuzzyFinderMode.Buffer.launch_base    (<q-args>, len(<q-bang>))$/;"	c
FuzzyFinderDir	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=dir    FuzzyFinderDir                       call g:FuzzyFinderMode.Dir.launch_base       (<q-args>, len(<q-bang>))$/;"	c
FuzzyFinderDirWithCurrentBufferDir	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=dir    FuzzyFinderDirWithCurrentBufferDir   call g:FuzzyFinderMode.Dir.launch_base       (expand('%:p:~')[:-1-len(expand('%:p:~:t'))] . <q-args>, len(<q-bang>))$/;"	c
FuzzyFinderDirWithFullCwd	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=dir    FuzzyFinderDirWithFullCwd            call g:FuzzyFinderMode.Dir.launch_base       (fnamemodify(getcwd(), ':p') . <q-args>, len(<q-bang>))$/;"	c
FuzzyFinderEditInfo	plugin/fuzzyfinder.vim	/^command! -bang -narg=0                  FuzzyFinderEditInfo                  call s:InfoFileManager.edit()$/;"	c
FuzzyFinderFile	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=file   FuzzyFinderFile                      call g:FuzzyFinderMode.File.launch_base      (<q-args>, len(<q-bang>))$/;"	c
FuzzyFinderFileWithCurrentBufferDir	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=file   FuzzyFinderFileWithCurrentBufferDir  call g:FuzzyFinderMode.File.launch_base      (expand('%:~:.')[:-1-len(expand('%:~:.:t'))] . <q-args>, len(<q-bang>))$/;"	c
FuzzyFinderFileWithFullCwd	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=file   FuzzyFinderFileWithFullCwd           call g:FuzzyFinderMode.File.launch_base      (fnamemodify(getcwd(), ':p') . <q-args>, len(<q-bang>))$/;"	c
FuzzyFinderMode.Base.add_stat	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.add_stat(base, word)$/;"	f
FuzzyFinderMode.Base.complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.complete(findstart, base)$/;"	f
FuzzyFinderMode.Base.deserialize_info	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.deserialize_info(lines)$/;"	f
FuzzyFinderMode.Base.empty_cache_if_existed	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.empty_cache_if_existed(force)$/;"	f
FuzzyFinderMode.Base.extend_options	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.extend_options()$/;"	f
FuzzyFinderMode.Base.get_filtered_stats	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.get_filtered_stats(base)$/;"	f
FuzzyFinderMode.Base.launch_base	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.launch_base(initial_pattern, partial_matching)$/;"	f
FuzzyFinderMode.Base.make_complete_func	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.make_complete_func(name)$/;"	f
FuzzyFinderMode.Base.make_pattern	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.make_pattern(base)$/;"	f
FuzzyFinderMode.Base.next_mode	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.next_mode(rev)$/;"	f
FuzzyFinderMode.Base.on_bs	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_bs()$/;"	f
FuzzyFinderMode.Base.on_buf_enter	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_buf_enter()$/;"	f
FuzzyFinderMode.Base.on_buf_write_post	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_buf_write_post()$/;"	f
FuzzyFinderMode.Base.on_command_pre	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_command_pre(cmd)$/;"	f
FuzzyFinderMode.Base.on_cr	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_cr(index, dir_check)$/;"	f
FuzzyFinderMode.Base.on_cursor_moved_i	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_cursor_moved_i()$/;"	f
FuzzyFinderMode.Base.on_insert_leave	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_insert_leave()$/;"	f
FuzzyFinderMode.Base.on_mode_enter_post	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_mode_enter_post()$/;"	f
FuzzyFinderMode.Base.on_mode_enter_pre	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_mode_enter_pre()$/;"	f
FuzzyFinderMode.Base.on_mode_leave_post	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_mode_leave_post(opened)$/;"	f
FuzzyFinderMode.Base.on_switch_ignore_case	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_switch_ignore_case()$/;"	f
FuzzyFinderMode.Base.on_switch_mode	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.on_switch_mode(next_prev)$/;"	f
FuzzyFinderMode.Base.serialize_info	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.serialize_info()$/;"	f
FuzzyFinderMode.Base.to_key	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.to_key()$/;"	f
FuzzyFinderMode.Base.to_str	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Base.to_str(...)$/;"	f
FuzzyFinderMode.Bookmark.bookmark_here	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Bookmark.bookmark_here(word)$/;"	f
FuzzyFinderMode.Bookmark.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Bookmark.on_complete(base)$/;"	f
FuzzyFinderMode.Bookmark.on_mode_enter_post	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Bookmark.on_mode_enter_post()$/;"	f
FuzzyFinderMode.Bookmark.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Bookmark.on_open(expr, mode)$/;"	f
FuzzyFinderMode.Buffer.jump_to	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Buffer.jump_to(item, cmd_open)$/;"	f
FuzzyFinderMode.Buffer.make_item	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Buffer.make_item(nr)$/;"	f
FuzzyFinderMode.Buffer.on_buf_enter	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Buffer.on_buf_enter()$/;"	f
FuzzyFinderMode.Buffer.on_buf_write_post	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Buffer.on_buf_write_post()$/;"	f
FuzzyFinderMode.Buffer.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Buffer.on_complete(base)$/;"	f
FuzzyFinderMode.Buffer.on_mode_enter_post	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Buffer.on_mode_enter_post()$/;"	f
FuzzyFinderMode.Buffer.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Buffer.on_open(expr, mode)$/;"	f
FuzzyFinderMode.Buffer.update_buf_times	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Buffer.update_buf_times()$/;"	f
FuzzyFinderMode.CallbackFile.cached_glob	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackFile.cached_glob(dir, file, excluded, index, limit)$/;"	f
FuzzyFinderMode.CallbackFile.launch	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackFile.launch(initial_pattern, partial_matching, listener)$/;"	f
FuzzyFinderMode.CallbackFile.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackFile.on_complete(base)$/;"	f
FuzzyFinderMode.CallbackFile.on_mode_leave_post	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackFile.on_mode_leave_post(opened)$/;"	f
FuzzyFinderMode.CallbackFile.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackFile.on_open(expr, mode)$/;"	f
FuzzyFinderMode.CallbackFile.on_switch_mode	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackFile.on_switch_mode(next_prev)$/;"	f
FuzzyFinderMode.CallbackItem.launch	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackItem.launch(initial_pattern, partial_matching, listener, items, for_file)$/;"	f
FuzzyFinderMode.CallbackItem.on_complete_file	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackItem.on_complete_file(base)$/;"	f
FuzzyFinderMode.CallbackItem.on_complete_nonfile	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackItem.on_complete_nonfile(base)$/;"	f
FuzzyFinderMode.CallbackItem.on_mode_leave_post	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackItem.on_mode_leave_post(opened)$/;"	f
FuzzyFinderMode.CallbackItem.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackItem.on_open(expr, mode)$/;"	f
FuzzyFinderMode.CallbackItem.on_switch_mode	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.CallbackItem.on_switch_mode(next_prev)$/;"	f
FuzzyFinderMode.Dir.cached_glob_dir	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Dir.cached_glob_dir(dir, file, excluded, index, limit)$/;"	f
FuzzyFinderMode.Dir.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Dir.on_complete(base)$/;"	f
FuzzyFinderMode.Dir.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Dir.on_open(expr, mode)$/;"	f
FuzzyFinderMode.File.cached_glob	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.File.cached_glob(dir, file, excluded, index, limit)$/;"	f
FuzzyFinderMode.File.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.File.on_complete(base)$/;"	f
FuzzyFinderMode.File.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.File.on_open(expr, mode)$/;"	f
FuzzyFinderMode.GivenCmd.launch	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenCmd.launch(initial_pattern, partial_matching, items)$/;"	f
FuzzyFinderMode.GivenCmd.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenCmd.on_complete(base)$/;"	f
FuzzyFinderMode.GivenCmd.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenCmd.on_open(expr, mode)$/;"	f
FuzzyFinderMode.GivenCmd.on_switch_mode	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenCmd.on_switch_mode(next_prev)$/;"	f
FuzzyFinderMode.GivenDir.launch	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenDir.launch(initial_pattern, partial_matching, items)$/;"	f
FuzzyFinderMode.GivenDir.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenDir.on_complete(base)$/;"	f
FuzzyFinderMode.GivenDir.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenDir.on_open(expr, mode)$/;"	f
FuzzyFinderMode.GivenDir.on_switch_mode	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenDir.on_switch_mode(next_prev)$/;"	f
FuzzyFinderMode.GivenFile.launch	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenFile.launch(initial_pattern, partial_matching, items)$/;"	f
FuzzyFinderMode.GivenFile.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenFile.on_complete(base)$/;"	f
FuzzyFinderMode.GivenFile.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenFile.on_open(expr, mode)$/;"	f
FuzzyFinderMode.GivenFile.on_switch_mode	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.GivenFile.on_switch_mode(next_prev)$/;"	f
FuzzyFinderMode.MruCmd.on_command_pre	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruCmd.on_command_pre(cmd)$/;"	f
FuzzyFinderMode.MruCmd.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruCmd.on_complete(base)$/;"	f
FuzzyFinderMode.MruCmd.on_mode_enter_post	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruCmd.on_mode_enter_post()$/;"	f
FuzzyFinderMode.MruCmd.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruCmd.on_open(expr, mode)$/;"	f
FuzzyFinderMode.MruCmd.update_info	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruCmd.update_info(cmd)$/;"	f
FuzzyFinderMode.MruFile.format_item_using_cache	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruFile.format_item_using_cache(item)$/;"	f
FuzzyFinderMode.MruFile.on_buf_enter	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruFile.on_buf_enter()$/;"	f
FuzzyFinderMode.MruFile.on_buf_write_post	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruFile.on_buf_write_post()$/;"	f
FuzzyFinderMode.MruFile.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruFile.on_complete(base)$/;"	f
FuzzyFinderMode.MruFile.on_mode_enter_post	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruFile.on_mode_enter_post()$/;"	f
FuzzyFinderMode.MruFile.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruFile.on_open(expr, mode)$/;"	f
FuzzyFinderMode.MruFile.remove_item_from_cache	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruFile.remove_item_from_cache(word)$/;"	f
FuzzyFinderMode.MruFile.update_info	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.MruFile.update_info()$/;"	f
FuzzyFinderMode.Tag.find_tag	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Tag.find_tag(pattern, index, limit)$/;"	f
FuzzyFinderMode.Tag.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Tag.on_complete(base)$/;"	f
FuzzyFinderMode.Tag.on_mode_enter_pre	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Tag.on_mode_enter_pre()$/;"	f
FuzzyFinderMode.Tag.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.Tag.on_open(expr, mode)$/;"	f
FuzzyFinderMode.TaggedFile.find_tagged_file	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.TaggedFile.find_tagged_file(pattern, index, limit)$/;"	f
FuzzyFinderMode.TaggedFile.on_complete	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.TaggedFile.on_complete(base)$/;"	f
FuzzyFinderMode.TaggedFile.on_mode_enter_pre	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.TaggedFile.on_mode_enter_pre()$/;"	f
FuzzyFinderMode.TaggedFile.on_open	plugin/fuzzyfinder.vim	/^function! g:FuzzyFinderMode.TaggedFile.on_open(expr, mode)$/;"	f
FuzzyFinderMruCmd	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=file   FuzzyFinderMruCmd                    call g:FuzzyFinderMode.MruCmd.launch_base    (<q-args>, len(<q-bang>))$/;"	c
FuzzyFinderMruFile	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=file   FuzzyFinderMruFile                   call g:FuzzyFinderMode.MruFile.launch_base   (<q-args>, len(<q-bang>))$/;"	c
FuzzyFinderRenewCache	plugin/fuzzyfinder.vim	/^command! -bang -narg=0                  FuzzyFinderRenewCache                for s:m in s:GetAvailableModes() | call s:m.empty_cache_if_existed(1) | endfor$/;"	c
FuzzyFinderTag	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=tag    FuzzyFinderTag                       call g:FuzzyFinderMode.Tag.launch_base       (<q-args>, len(<q-bang>))$/;"	c
FuzzyFinderTagWithCursorWord	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=tag    FuzzyFinderTagWithCursorWord         call g:FuzzyFinderMode.Tag.launch_base       (expand('<cword>') . <q-args>, len(<q-bang>))$/;"	c
FuzzyFinderTaggedFile	plugin/fuzzyfinder.vim	/^command! -bang -narg=? -complete=file   FuzzyFinderTaggedFile                call g:FuzzyFinderMode.TaggedFile.launch_base(<q-args>, len(<q-bang>))$/;"	c
FuzzyFinderTextMate	plugin/fuzzyfinder_textmate.vim	/^command! -bang -narg=? -complete=file   FuzzyFinderTextMate   call FuzzyFinderTextMateLauncher(<q-args>, len(<q-bang>))$/;"	c
FuzzyFinderTextMateLauncher	plugin/fuzzyfinder_textmate.vim	/^  function! FuzzyFinderTextMateLauncher(initial_text, partial_matching)$/;"	f
FuzzyFinderTextMateRefreshFiles	plugin/fuzzyfinder_textmate.vim	/^command! FuzzyFinderTextMateRefreshFiles ruby refresh_finder$/;"	c
FuzzyfinderGlobal	plugin/fuzzyfinder.vim	/^augroup FuzzyfinderGlobal$/;"	a
GF	junk/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GF	plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GF	src/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GetAvailableModes	plugin/fuzzyfinder.vim	/^function! s:GetAvailableModes()$/;"	f
GetBackRef	src/vimtlib/autoload/viki.vim	/^function! s:GetBackRef()$/;"	f
GetBitDefs	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetBitDefs() "{{{3$/;"	f
GetBitGroup	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetBitGroup(filetype, ...) "{{{3$/;"	f
GetBitProcess	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetBitProcess(text, name, global) "{{{3$/;"	f
GetBrokenLine	src/vimtlib/autoload/viki.vim	/^fun! s:GetBrokenLine(ls, le) "{{{3$/;"	f
GetBufIndicator	plugin/fuzzyfinder.vim	/^function! s:GetBufIndicator(buf_nr)$/;"	f
GetBufNr	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:GetBufNr(buffer)$/;"	f
GetBufferCacheFilename	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetBufferCacheFilename(filetype, ...) "{{{3$/;"	f
GetBufferNames	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:GetBufferNames(selected) "{{{3$/;"	f
GetBufferRubyClass	autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name)$/;"	f
GetBufferRubyEntity	autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type )$/;"	f
GetBufferRubyModule	autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name)$/;"	f
GetBufferRubySingletonMethods	autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCache	src/vimtlib/plugin/tGpg.vim	/^function! s:GetCache(id, file, default) "{{{3$/;"	f
GetCacheFilename	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetCacheFilename(type, what) "{{{3$/;"	f
GetCacheVar	src/vimtlib/plugin/tGpg.vim	/^function! s:GetCacheVar(id, file, default) "{{{3$/;"	f
GetCharRx	src/vimtlib/autoload/ttagecho.vim	/^function! s:GetCharRx() "{{{3$/;"	f
GetClass	src/vimtlib/autoload/pim.vim	/^function! s:GetClass(...) "{{{3$/;"	f
GetClassDir	src/vimtlib/autoload/pim.vim	/^function! s:GetClassDir(class) "{{{3$/;"	f
GetCmdHeight	src/vimtlib/autoload/tEchoPair.vim	/^fun! s:GetCmdHeight()$/;"	f
GetCmdLine	src/vimtlib/plugin/TortoiseSVN.vim	/^fun! <SID>GetCmdLine(command, ...)$/;"	f
GetCoffeeIndent	bundle/vim-coffee-script/indent/coffee.vim	/^function! GetCoffeeIndent(curlinenum)$/;"	f
GetColShift	src/vimtlib/plugin/glark.vim	/^function! s:GetColShift() "{{{3$/;"	f
GetColorschemesList	plugin/scrollcolor.vim	/^function! s:GetColorschemesList()$/;"	f
GetCommentString	autoload/tcomment.vim	/^function! s:GetCommentString(beg, end, commentMode, ...)$/;"	f
GetCommentString	src/vimtlib/autoload/tcomment.vim	/^function! s:GetCommentString(beg, end, commentMode, ...)$/;"	f
GetCucumberIndent	indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetCucumberIndent	src/vim-cucumber/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetCurrentTagFiles	plugin/fuzzyfinder.vim	/^function! s:GetCurrentTagFiles()$/;"	f
GetCustomCommentString	autoload/tcomment.vim	/^function! s:GetCustomCommentString(ft, commentMode, ...)$/;"	f
GetCustomCommentString	src/vimtlib/autoload/tcomment.vim	/^function! s:GetCustomCommentString(ft, commentMode, ...)$/;"	f
GetDefaultString	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetDefaultString(bit, default) "{{{3$/;"	f
GetDepth	src/vimtlib/autoload/viki.vim	/^fun! s:GetDepth(file) "{{{3$/;"	f
GetEligibleBits	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetEligibleBits(type) "{{{3$/;"	f
GetFileEntry	src/vimtlib/autoload/viki.vim	/^fun! s:GetFileEntry(file, list) "{{{3$/;"	f
GetFilename	src/vimtlib/autoload/trag.vim	/^function! s:GetFilename(qfe) "{{{3$/;"	f
GetFilename	src/vimtlib/plugin/glark.vim	/^function! s:GetFilename() "{{{3$/;"	f
GetFiles	src/vimtlib/autoload/trag.vim	/^function! s:GetFiles() "{{{3$/;"	f
GetFiletypeBitsCacheFilename	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetFiletypeBitsCacheFilename(filetype) "{{{3$/;"	f
GetFirstColors	plugin/scrollcolor.vim	/^function! s:GetFirstColors() $/;"	f
GetFirstError	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^function s:GetFirstError()$/;"	f
GetGlarkWin	src/vimtlib/plugin/glark.vim	/^function! s:GetGlarkWin(args) "{{{3$/;"	f
GetHamlIndent	indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetHamlIndent	src/vim-haml/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetIndent	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetIndent(line) "{{{3$/;"	f
GetIndentString	autoload/tcomment.vim	/^function! s:GetIndentString(line, start)$/;"	f
GetIndentString	src/vimtlib/autoload/tcomment.vim	/^function! s:GetIndentString(line, start)$/;"	f
GetLastColors	plugin/scrollcolor.vim	/^function! s:GetLastColors()$/;"	f
GetLeft	junk/NERD_commenter.vim	/^function s:GetLeft(alt, space, esc)$/;"	f
GetLeft	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetLeft(alt, space, esc)$/;"	f
GetLineNumber	src/vimtlib/plugin/glark.vim	/^function! s:GetLineNumber() "{{{3$/;"	f
GetLinePattern	plugin/fuzzyfinder.vim	/^function! s:GetLinePattern(lnum)$/;"	f
GetList	src/vimtlib/autoload/tmarks.vim	/^function! s:GetList() "{{{3$/;"	f
GetList	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:GetList(bufnr)$/;"	f
GetLocalList	src/vimtlib/autoload/tmarks.vim	/^function! s:GetLocalList() "{{{3$/;"	f
GetLogArg	src/vimtlib/autoload/tlog.vim	/^fun! s:GetLogArg()$/;"	f
GetLogPref	src/vimtlib/autoload/tlog.vim	/^fun! s:GetLogPref()$/;"	f
GetLogType	src/vimtlib/autoload/tlog.vim	/^fun! s:GetLogType()$/;"	f
GetMark	src/vimtlib/autoload/tmarks.vim	/^function! s:GetMark(line) "{{{3$/;"	f
GetMenuCache	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetMenuCache(type) "{{{3$/;"	f
GetMenuCacheFilename	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetMenuCacheFilename(filetype) "{{{3$/;"	f
GetMode	src/vimtlib/plugin/tGpg.vim	/^function! s:GetMode(mode) "{{{3$/;"	f
GetNextColor	plugin/scrollcolor.vim	/^function! s:GetNextColor(color)$/;"	f
GetNthElement	src/vimtlib/autoload/tlib/list.vim	/^function! s:GetNthElement(n, lists, default) "{{{3$/;"	f
GetPassphrase	src/vimtlib/plugin/tGpg.vim	/^function! s:GetPassphrase(iomode, default) "{{{3$/;"	f
GetPrevColor	plugin/scrollcolor.vim	/^function! s:GetPrevColor(color)$/;"	f
GetPrevLineNum	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetPrevLineNum(linenum)$/;"	f
GetRecipients	src/vimtlib/plugin/tGpg.vim	/^function! s:GetRecipients(iomode, default) "{{{3$/;"	f
GetRegionArgs	src/vimtlib/autoload/viki.vim	/^fun! s:GetRegionArgs(ls, le) "{{{3$/;"	f
GetRegionGeometry	src/vimtlib/autoload/viki.vim	/^fun! s:GetRegionGeometry(...) "{{{3$/;"	f
GetRegionStartRx	src/vimtlib/autoload/viki.vim	/^fun! s:GetRegionStartRx(...) "{{{3$/;"	f
GetRegisters	src/vimtlib/plugin/tregisters.vim	/^function! s:GetRegisters() "{{{3$/;"	f
GetRight	junk/NERD_commenter.vim	/^function s:GetRight(alt, space, esc)$/;"	f
GetRight	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetRight(alt, space, esc)$/;"	f
GetRubyVarType	autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetRx	src/vimtlib/autoload/trag.vim	/^function! s:GetRx(filename, kinds, rx, default) "{{{3$/;"	f
GetSNR	src/vimtlib/autoload/spec.vim	/^fun! s:GetSNR(file, ...)$/;"	f
GetSassIndent	indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetSassIndent	src/vim-haml/indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetSexyComLeft	junk/NERD_commenter.vim	/^function s:GetSexyComLeft(space, esc)$/;"	f
GetSexyComLeft	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComLeft(space, esc)$/;"	f
GetSexyComMarker	junk/NERD_commenter.vim	/^function s:GetSexyComMarker(space, esc)$/;"	f
GetSexyComMarker	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComMarker(space, esc)$/;"	f
GetSexyComRight	junk/NERD_commenter.vim	/^function s:GetSexyComRight(space, esc)$/;"	f
GetSexyComRight	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComRight(space, esc)$/;"	f
GetSidPrefix	plugin/fuzzyfinder.vim	/^function! s:GetSidPrefix()$/;"	f
GetSnippet	plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippet	src/snipmate.vim/plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippets	plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetSnippets	src/snipmate.vim/plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetSortedSwitchableModes	plugin/fuzzyfinder.vim	/^function! s:GetSortedSwitchableModes()$/;"	f
GetSpaceMovement	plugin/space.vim	/^function! GetSpaceMovement()$/;"	f
GetSpaceMovement	src/vim-space/plugin/space.vim	/^function! GetSpaceMovement()$/;"	f
GetStyle	src/vimtlib/autoload/tEchoPair.vim	/^fun! s:GetStyle()$/;"	f
GetSuffix	src/vimtlib/autoload/viki.vim	/^function! s:GetSuffix() "{{{3$/;"	f
GetTag	src/vimtlib/autoload/ttags.vim	/^function! s:GetTag(world, id) "{{{3$/;"	f
GetTagList	plugin/fuzzyfinder.vim	/^function! s:GetTagList(tagfile)$/;"	f
GetTaggedFileList	plugin/fuzzyfinder.vim	/^function! s:GetTaggedFileList(tagfile)$/;"	f
GetTemplates	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetTemplates(aslist) "{{{3$/;"	f
GetTestCmd	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^function s:GetTestCmd()$/;"	f
GetTrimmedLine	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
GetTruncatedHead	plugin/fuzzyfinder.vim	/^function! s:GetTruncatedHead(head, max_len, max_item_width)$/;"	f
GetVar	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetVar(var) "{{{3$/;"	f
GetVar	src/vimtlib/plugin/checksyntax.vim	/^function! s:GetVar(var, ft, manually) "{{{3$/;"	f
GetVarName	src/vimtlib/autoload/tskeleton.vim	/^function! s:GetVarName(name, global) "{{{3$/;"	f
GetVersionDiffs	src/vimtlib/autoload/tbak.vim	/^fun! s:GetVersionDiffs(vers, global) "{{{3$/;"	f
GetWords	src/vimtlib/autoload/loremipsum.vim	/^function! s:GetWords(nwords, splitrx, join) "{{{3$/;"	f
Gist	plugin/gist.vim	/^command! -nargs=? -range=% Gist :call Gist(<line1>, <line2>, <f-args>)$/;"	c
Gist	plugin/gist.vim	/^function! Gist(line1, line2, ...)$/;"	f
GistDelete	plugin/gist.vim	/^function! s:GistDelete(user, token, gistid)$/;"	f
GistDetectFiletype	plugin/gist.vim	/^function! s:GistDetectFiletype(gistid)$/;"	f
GistGet	plugin/gist.vim	/^function! s:GistGet(user, token, gistid, clipboard)$/;"	f
GistGetFileName	plugin/gist.vim	/^function! s:GistGetFileName(gistid)$/;"	f
GistGetPage	plugin/gist.vim	/^function! s:GistGetPage(url, user, param, opt)$/;"	f
GistList	plugin/gist.vim	/^function! s:GistList(user, token, gistls, page)$/;"	f
GistListAction	plugin/gist.vim	/^function! s:GistListAction()$/;"	f
GistPost	plugin/gist.vim	/^function! s:GistPost(user, token, content, private)$/;"	f
GistPostBuffers	plugin/gist.vim	/^function! s:GistPostBuffers(user, token, private)$/;"	f
GistUpdate	plugin/gist.vim	/^function! s:GistUpdate(user, token, content, gistid, gistnm)$/;"	f
GistWrite	plugin/gist.vim	/^function! s:GistWrite(fname)$/;"	f
Git	junk/fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
Git	plugin/fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
Git	src/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
GitComplete	junk/fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
GitComplete	plugin/fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
GitComplete	src/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
GitRepoPath	plugin/nerdtree_plugin/git_menu.vim	/^function! s:GitRepoPath()$/;"	f
Glark	src/vimtlib/plugin/glark.vim	/^command! -nargs=* -complete=file Glark call GlarkRun(<q-args>)$/;"	c
GlarkFoldLevel	src/vimtlib/ftplugin/glark.vim	/^fun! GlarkFoldLevel(lnum)$/;"	f
GlarkJump	src/vimtlib/plugin/glark.vim	/^function! GlarkJump(flags) "{{{3$/;"	f
GlarkParseExplain	src/vimtlib/plugin/glark.vim	/^function! GlarkParseExplain(...) "{{{3$/;"	f
GlarkRun	src/vimtlib/plugin/glark.vim	/^function! GlarkRun(args) "{{{3$/;"	f
GlarkUpdate	src/vimtlib/plugin/glark.vim	/^function! GlarkUpdate() "{{{3$/;"	f
GlobSessions	src/vimtlib/autoload/tsession.vim	/^function! s:GlobSessions() "{{{3$/;"	f
GoHome	src/vimtlib/plugin/tGpg.vim	/^function! s:GoHome(value) "{{{3$/;"	f
GoWinbufnr	junk/cecutil.vim	/^fun! GoWinbufnr(bufnum)$/;"	f
GotoItem	src/vimtlib/plugin/tbibtools.vim	/^fun! s:GotoItem(entry)$/;"	f
GotoLine	junk/vimacs-0.93.vim	/^command! GotoLine :call <SID>GotoLine()$/;"	c
GotoLine	junk/vimacs-0.93.vim	/^function! <SID>GotoLine()$/;"	f
GreenBar	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^function s:GreenBar()$/;"	f
Grep	junk/fugitive.vim	/^function! s:Grep(bang,arg) abort$/;"	f
Grep	junk/grep.vim	/^command! -nargs=* -complete=file Grep$/;"	c
Grep	plugin/fugitive.vim	/^function! s:Grep(bang,arg) abort$/;"	f
Grep	src/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(bang,arg) abort$/;"	f
GrepAdd	junk/grep.vim	/^command! -nargs=* -complete=file GrepAdd$/;"	c
GrepArgs	junk/grep.vim	/^command! -nargs=* GrepArgs$/;"	c
GrepArgsAdd	junk/grep.vim	/^command! -nargs=* GrepArgsAdd$/;"	c
GrepBuffer	junk/grep.vim	/^command! -nargs=* GrepBuffer$/;"	c
GrepBufferAdd	junk/grep.vim	/^command! -nargs=* GrepBufferAdd$/;"	c
Grep_Cygwin_Find	junk/grep.vim	/^    let Grep_Cygwin_Find = 0$/;"	v
Grep_Default_Filelist	junk/grep.vim	/^    let Grep_Default_Filelist = '*'$/;"	v
Grep_Default_Options	junk/grep.vim	/^    let Grep_Default_Options = ''$/;"	v
Grep_Find_Path	junk/grep.vim	/^    let Grep_Find_Path = 'find'$/;"	v
Grep_Find_Use_Xargs	junk/grep.vim	/^    let Grep_Find_Use_Xargs = 1$/;"	v
Grep_Null_Device	junk/grep.vim	/^        let Grep_Null_Device = 'NUL'$/;"	v
Grep_Null_Device	junk/grep.vim	/^        let Grep_Null_Device = '\/dev\/null'$/;"	v
Grep_OpenQuickfixWindow	junk/grep.vim	/^    let Grep_OpenQuickfixWindow = 1$/;"	v
Grep_Path	junk/grep.vim	/^    let Grep_Path = 'grep'$/;"	v
Grep_Shell_Escape_Char	junk/grep.vim	/^        let Grep_Shell_Escape_Char = ''$/;"	v
Grep_Shell_Escape_Char	junk/grep.vim	/^        let Grep_Shell_Escape_Char = '\\'$/;"	v
Grep_Shell_Quote_Char	junk/grep.vim	/^        let Grep_Shell_Quote_Char = "'"$/;"	v
Grep_Shell_Quote_Char	junk/grep.vim	/^        let Grep_Shell_Quote_Char = ''$/;"	v
Grep_Skip_Dirs	junk/grep.vim	/^    let Grep_Skip_Dirs = 'RCS CVS SCCS'$/;"	v
Grep_Skip_Files	junk/grep.vim	/^    let Grep_Skip_Files = '*~ *,v s.*'$/;"	v
Grep_Xargs_Options	junk/grep.vim	/^    let Grep_Xargs_Options = '--null'$/;"	v
Grep_Xargs_Path	junk/grep.vim	/^    let Grep_Xargs_Path = 'xargs'$/;"	v
GuessCurrentCommentString	autoload/tcomment.vim	/^function! s:GuessCurrentCommentString(commentMode)$/;"	f
GuessCurrentCommentString	src/vimtlib/autoload/tcomment.vim	/^function! s:GuessCurrentCommentString(commentMode)$/;"	f
GuessFileType	autoload/tcomment.vim	/^function! s:GuessFileType(beg, end, commentMode, filetype, ...)$/;"	f
GuessFileType	src/vimtlib/autoload/tcomment.vim	/^function! s:GuessFileType(beg, end, commentMode, filetype, ...)$/;"	f
GuessInterViki	src/vimtlib/autoload/viki.vim	/^function! s:GuessInterViki(def) "{{{3$/;"	f
HIGH_PRIORITY_CLASS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^HIGH_PRIORITY_CLASS = 0x00000080$/;"	v
HandleTag	src/vimtlib/autoload/tskeleton.vim	/^function! s:HandleTag(match, filetype) "{{{3$/;"	f
HasCStyleComments	junk/NERD_commenter.vim	/^function s:HasCStyleComments()$/;"	f
HasCStyleComments	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasCStyleComments()$/;"	f
HasCachedBufferBits	src/vimtlib/autoload/tskeleton.vim	/^function! s:HasCachedBufferBits(filetype) "{{{3$/;"	f
HasLeadingTabs	junk/NERD_commenter.vim	/^function s:HasLeadingTabs(...)$/;"	f
HasLeadingTabs	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasLeadingTabs(...)$/;"	f
HasMultipartDelims	junk/NERD_commenter.vim	/^function s:HasMultipartDelims()$/;"	f
HasMultipartDelims	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasMultipartDelims()$/;"	f
Helptags	autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
Helptags	src/vim-pathogen/autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HiDef	src/vimtlib/syntax/bbcode.vim	/^    command! -nargs=+ HiDef hi <args>$/;"	c
HiDef	src/vimtlib/syntax/bbcode.vim	/^    command! -nargs=+ HiDef hi def <args>$/;"	c
HiDefaults	bundle/vim-rails/autoload/rails.vim	/^function! s:HiDefaults()$/;"	f
HiDefaults	junk/rails.vim	/^function! s:HiDefaults()$/;"	f
HiLink	src/vimtlib/syntax/EvalSelectionLog.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	src/vimtlib/syntax/EvalSelectionLog.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	src/vimtlib/syntax/bbcode.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	src/vimtlib/syntax/bbcode.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	src/vimtlib/syntax/glark.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	src/vimtlib/syntax/glark.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	src/vimtlib/syntax/tcalc.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	src/vimtlib/syntax/tcalc.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	src/vimtlib/syntax/texmath.vim	/^        command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	src/vimtlib/syntax/texmath.vim	/^        command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	src/vimtlib/syntax/tskeleton.vim	/^        command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	src/vimtlib/syntax/tskeleton.vim	/^        command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	src/vimtlib/syntax/viki.vim	/^      command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	src/vimtlib/syntax/viki.vim	/^      command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	syntax/jquery.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	syntax/jquery.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	syntax/taskpaper.vim	/^  command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	syntax/taskpaper.vim	/^  command! -nargs=+ HiLink hi link <args>$/;"	c
HighlightError	plugin/fuzzyfinder.vim	/^function! s:HighlightError()$/;"	f
HighlightPrompt	plugin/fuzzyfinder.vim	/^function! s:HighlightPrompt(prompt, highlight)$/;"	f
HookCursorMoved	src/vimtlib/autoload/hookcursormoved.vim	/^augroup HookCursorMoved$/;"	a
HookCursorMoved	src/vimtlib/plugin/hookcursormoved.vim	/^augroup HookCursorMoved$/;"	a
HowManyWindows	src/vimtlib/autoload/viki.vim	/^function! s:HowManyWindows() "{{{3$/;"	f
I	junk/colorize.vim	/^noremap I :highlight Normal guibg=lightyellow<cr>I$/;"	m
IDLE_PRIORITY_CLASS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^IDLE_PRIORITY_CLASS = 0x00000040$/;"	v
INCFLAGS	ruby/command-t/Makefile	/^INCFLAGS = -I. -I$(topdir) -I$(hdrdir) -I$(srcdir)$/;"	m
INHERIT_PARENT_AFFINITY	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^INHERIT_PARENT_AFFINITY = 0x00010000$/;"	v
INPUT_RECORD	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class INPUT_RECORD(Structure):$/;"	c
INPUT_UNION	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class INPUT_UNION(Union):$/;"	c
INSTALL	ruby/command-t/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	ruby/command-t/Makefile	/^INSTALL_DATA = $(INSTALL) -m 644$/;"	m
INSTALL_PROG	ruby/command-t/Makefile	/^INSTALL_PROG = $(INSTALL) -m 0755$/;"	m
IncrKillRing	junk/vimacs-0.93.vim	/^function! <SID>IncrKillRing()$/;"	f
IndentLines	src/vimtlib/autoload/tskeleton.vim	/^function! s:IndentLines(from, to, indent) "{{{3$/;"	f
IndicateCursor	src/vimtlib/autoload/tEchoPair.vim	/^fun! s:IndicateCursor(text, c0, l0, c1, l1)$/;"	f
InfoFileManager.edit	plugin/fuzzyfinder.vim	/^function! s:InfoFileManager.edit()$/;"	f
InfoFileManager.get_info_file	plugin/fuzzyfinder.vim	/^function! s:InfoFileManager.get_info_file()$/;"	f
InfoFileManager.get_info_version_line	plugin/fuzzyfinder.vim	/^function! s:InfoFileManager.get_info_version_line()$/;"	f
InfoFileManager.load	plugin/fuzzyfinder.vim	/^function! s:InfoFileManager.load()$/;"	f
InfoFileManager.on_buf_write_cmd	plugin/fuzzyfinder.vim	/^function! s:InfoFileManager.on_buf_write_cmd()$/;"	f
InfoFileManager.save	plugin/fuzzyfinder.vim	/^function! s:InfoFileManager.save()$/;"	f
InfoFileManager.warn_old_info	plugin/fuzzyfinder.vim	/^function! s:InfoFileManager.warn_old_info()$/;"	f
Init	junk/delimitMate.vim	/^function! s:Init() "{{{1$/;"	f
Init	plugin/supertab.vim	/^function! s:Init()$/;"	f
Init	src/vimtlib/autoload/spec/speckiller.vim	/^function! s:Init(options) "{{{3$/;"	f
Init	src/vimtlib/autoload/tlib/input.vim	/^function! s:Init(world, cmd) "{{{3$/;"	f
InitBuffer	plugin/supertab.vim	/^function! s:InitBuffer()$/;"	f
InitBufferMenu	src/vimtlib/autoload/tskeleton.vim	/^function! s:InitBufferMenu()$/;"	f
InitStatusline	bundle/vim-rails/autoload/rails.vim	/^function! s:InitStatusline()$/;"	f
InitStatusline	junk/rails.vim	/^function! s:InitStatusline()$/;"	f
InitVariable	bundle/vim-bufsurf/plugin/bufsurf.vim	/^function s:InitVariable(var, value)$/;"	f
InitVariable	junk/NERD_commenter.vim	/^function s:InitVariable(var, value)$/;"	f
InitVariable	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InitVariable(var, value)$/;"	f
Init_ext	ruby/command-t/ext.c	/^void Init_ext()$/;"	f
Initialize	src/vimtlib/autoload/linglang.vim	/^function! s:Initialize(langenc) "{{{3$/;"	f
InitializeBuffer	src/vimtlib/autoload/setsyntax.vim	/^function! s:InitializeBuffer() "{{{3$/;"	f
InjectIntoStatusline	bundle/vim-rails/autoload/rails.vim	/^function! s:InjectIntoStatusline(status)$/;"	f
InjectIntoStatusline	junk/rails.vim	/^function! s:InjectIntoStatusline(status)$/;"	f
Input	src/vimtlib/autoload/tskeleton.vim	/^function! s:Input(text) "{{{3$/;"	f
InputHl	plugin/fuzzyfinder.vim	/^function! s:InputHl(prompt, text, hl)$/;"	f
InsertBit	src/vimtlib/autoload/tskeleton.vim	/^function! s:InsertBit(agent, bit, mode) "{{{3$/;"	f
InsertBitText	src/vimtlib/autoload/tskeleton.vim	/^function! s:InsertBitText(mode, bittext) "{{{3$/;"	f
InsertDefault	src/vimtlib/autoload/tskeleton.vim	/^function! s:InsertDefault(mode, bit, default) "{{{3$/;"	f
InsertEntry	src/vimtlib/autoload/pim.vim	/^function! s:InsertEntry(class, fname, ...) "{{{3$/;"	f
InsertPair	junk/simple_pairs.vim	/^function! s:InsertPair(c)$/;"	f
InstallAutoHide	src/vimtlib/plugin/cmdlinehelp.vim	/^function! s:InstallAutoHide() "{{{3$/;"	f
InstallAutocmd	src/vimtlib/plugin/shymenu.vim	/^function! s:InstallAutocmd() "{{{3$/;"	f
InstallDirHandler	src/vimtlib/autoload/tselectfiles.vim	/^function! s:InstallDirHandler(world) "{{{3$/;"	f
InstantiateTextMateMode	plugin/fuzzyfinder_textmate.vim	/^function! InstantiateTextMateMode() "{{{$/;"	f
InterVikiDef	src/vimtlib/autoload/viki.vim	/^function! s:InterVikiDef(vikiname, ...)$/;"	f
Invert	bundle/vim-rails/autoload/rails.vim	/^function! s:Invert(bang)$/;"	f
Invert	junk/rails.vim	/^function! s:Invert(bang)$/;"	f
InvertComment	junk/NERD_commenter.vim	/^function s:InvertComment(firstLine, lastLine)$/;"	f
InvertComment	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InvertComment(firstLine, lastLine)$/;"	f
IsA	src/vimtlib/macros/tassert.vim	/^fun! IsA(expr, type)$/;"	f
IsAvailableMode	plugin/fuzzyfinder.vim	/^function! s:IsAvailableMode(mode)$/;"	f
IsBlockVisual	junk/delimitMate.vim	/^function! s:IsBlockVisual() " {{{1$/;"	f
IsComment	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsComment(line)$/;"	f
IsCommented	junk/NERD_commenter.vim	/^function s:IsCommented(left, right, line)$/;"	f
IsCommented	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommented(left, right, line)$/;"	f
IsCommentedFromStartOfLine	junk/NERD_commenter.vim	/^function s:IsCommentedFromStartOfLine(left, line)$/;"	f
IsCommentedFromStartOfLine	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedFromStartOfLine(left, line)$/;"	f
IsCommentedNormOrSexy	junk/NERD_commenter.vim	/^function s:IsCommentedNormOrSexy(lineNum)$/;"	f
IsCommentedNormOrSexy	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedNormOrSexy(lineNum)$/;"	f
IsCommentedOuttermost	junk/NERD_commenter.vim	/^function s:IsCommentedOuttermost(left, right, leftAlt, rightAlt, line)$/;"	f
IsCommentedOuttermost	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedOuttermost(left, right, leftAlt, rightAlt, line)$/;"	f
IsContinuation	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsContinuation(line)$/;"	f
IsDefined	src/vimtlib/autoload/tskeleton.vim	/^function! s:IsDefined(bit) "{{{3$/;"	f
IsDelimValid	junk/NERD_commenter.vim	/^function s:IsDelimValid(delimiter, delIndx, line)$/;"	f
IsDelimValid	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsDelimValid(delimiter, delIndx, line)$/;"	f
IsDictionary	src/vimtlib/macros/tassert.vim	/^fun! IsDictionary(expr)$/;"	f
IsDotAccess	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsDotAccess(line)$/;"	f
IsEOL	src/vimtlib/autoload/tskeleton.vim	/^function! s:IsEOL(mode) "{{{3$/;"	f
IsEligibleLine	src/vimtlib/autoload/viki.vim	/^fun! s:IsEligibleLine(afile, bfile, bang) "{{{3$/;"	f
IsEmpty	src/vimtlib/macros/tassert.vim	/^fun! IsEmpty(expr)$/;"	f
IsEmptyPair	junk/delimitMate.vim	/^function! s:IsEmptyPair(str) "{{{1$/;"	f
IsEqual	src/vimtlib/macros/tassert.vim	/^fun! IsEqual(expr, expected)$/;"	f
IsError	src/vimtlib/macros/tassert.vim	/^fun! IsError(expr, expected)$/;"	f
IsEscaped	junk/NERD_commenter.vim	/^function s:IsEscaped(str, indx, escChar)$/;"	f
IsEscaped	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsEscaped(str, indx, escChar)$/;"	f
IsException	src/vimtlib/macros/tassert.vim	/^fun! IsException(expr)$/;"	f
IsExistent	src/vimtlib/macros/tassert.vim	/^fun! IsExistent(expr)$/;"	f
IsFirstWhen	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsFirstWhen(curline, prevline)$/;"	f
IsFullScreen	src/vimtlib/plugin/shymenu.vim	/^function! s:IsFullScreen() "{{{3$/;"	f
IsFuncref	src/vimtlib/macros/tassert.vim	/^fun! IsFuncref(expr)$/;"	f
IsInClassDef	autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInSexyComment	junk/NERD_commenter.vim	/^function s:IsInSexyComment(line)$/;"	f
IsInSexyComment	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsInSexyComment(line)$/;"	f
IsInsertMode	src/vimtlib/autoload/tskeleton.vim	/^function! s:IsInsertMode(mode) "{{{3$/;"	f
IsList	src/vimtlib/macros/tassert.vim	/^fun! IsList(expr)$/;"	f
IsMatch	src/vimtlib/macros/tassert.vim	/^fun! IsMatch(expr, expected)$/;"	f
IsMultiLineAssignment	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsMultiLineAssignment(line)$/;"	f
IsNotEmpty	src/vimtlib/macros/tassert.vim	/^fun! IsNotEmpty(expr)$/;"	f
IsNotEqual	src/vimtlib/macros/tassert.vim	/^fun! IsNotEqual(expr, expected)$/;"	f
IsNotMatch	src/vimtlib/macros/tassert.vim	/^fun! IsNotMatch(expr, expected)$/;"	f
IsNumEven	junk/NERD_commenter.vim	/^function s:IsNumEven(num)$/;"	f
IsNumEven	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsNumEven(num)$/;"	f
IsNumber	src/vimtlib/macros/tassert.vim	/^fun! IsNumber(expr)$/;"	f
IsPopup	src/vimtlib/autoload/tskeleton.vim	/^function! s:IsPopup(mode) "{{{3$/;"	f
IsPosInClassDef	autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsSexyComment	junk/NERD_commenter.vim	/^function s:IsSexyComment(topline, bottomline)$/;"	f
IsSexyComment	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsSexyComment(topline, bottomline)$/;"	f
IsSingleLineElse	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsSingleLineElse(line)$/;"	f
IsSingleLineStatement	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:IsSingleLineStatement(line)$/;"	f
IsString	src/vimtlib/macros/tassert.vim	/^fun! IsString(expr)$/;"	f
IsSubdir	src/vimtlib/autoload/viki.vim	/^fun! s:IsSubdir(adir, bdir) "{{{3$/;"	f
IsValidClass	src/vimtlib/autoload/pim.vim	/^function! s:IsValidClass(class) "{{{3$/;"	f
It	src/vimtlib/macros/spec.vim	/^command! -nargs=1 -bang It call spec#__Comment('It '. <q-args>, !empty('<bang>'))$/;"	c
JoinLine	src/vimtlib/autoload/tskeleton.vim	/^function! s:JoinLine()$/;"	f
JumpByIndex	plugin/scrollcolor.vim	/^function! s:JumpByIndex(list,total)$/;"	f
JumpByIndex2	plugin/scrollcolor.vim	/^function! s:JumpByIndex2(list,total, index)$/;"	f
JumpInit	junk/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
JumpInit	plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
JumpInit	src/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
JumpToBookmark	plugin/fuzzyfinder.vim	/^function! s:JumpToBookmark(path, mode, pattern, lnum, range, reuse)$/;"	f
JumpToRegister	junk/vimacs-0.93.vim	/^command! JumpToRegister :call JumpToRegister()$/;"	c
JumpToRegister	junk/vimacs-0.93.vim	/^function! <SID>JumpToRegister()$/;"	f
KEY_EVENT	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^KEY_EVENT = 0x0001$/;"	v
KEY_EVENT_RECORD	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class KEY_EVENT_RECORD(Structure):$/;"	c
KeyMap.All	plugin/NERD_tree.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.All	src/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	plugin/NERD_tree.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.BindAll	src/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	plugin/NERD_tree.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.Create	src/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.bind	plugin/NERD_tree.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.bind	src/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.bind()$/;"	f
KillLine	junk/vimacs-0.93.vim	/^function! <SID>KillLine()$/;"	f
KillWord	junk/vimacs-0.93.vim	/^function! <SID>KillWord()$/;"	f
LAck	plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAck call s:Ack('lgrep<bang>', <q-args>)$/;"	c
LAck	src/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAck call s:Ack('lgrep<bang>', <q-args>)$/;"	c
LAckAdd	plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAckAdd call s:Ack('lgrepadd<bang>', <q-args>)$/;"	c
LAckAdd	src/ack.vim/plugin/ack.vim	/^command! -bang -nargs=* -complete=file LAckAdd call s:Ack('lgrepadd<bang>', <q-args>)$/;"	c
LDSHARED	ruby/command-t/Makefile	/^LDSHARED = cc -arch i386 -arch x86_64 -pipe -bundle -undefined dynamic_lookup$/;"	m
LEFT_ALT_PRESSED	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^LEFT_ALT_PRESSED = 0x0002$/;"	v
LEFT_CTRL_PRESSED	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^LEFT_CTRL_PRESSED = 0x0008$/;"	v
LIBPATH	ruby/command-t/Makefile	/^LIBPATH =  -L. -L$(libdir)$/;"	m
LIBRUBY	ruby/command-t/Makefile	/^LIBRUBY = $(LIBRUBY_SO)$/;"	m
LIBRUBYARG_SHARED	ruby/command-t/Makefile	/^LIBRUBYARG_SHARED = -l$(RUBY_SO_NAME)$/;"	m
LIBRUBYARG_STATIC	ruby/command-t/Makefile	/^LIBRUBYARG_STATIC = -l$(RUBY_SO_NAME)$/;"	m
LIBRUBY_A	ruby/command-t/Makefile	/^LIBRUBY_A = lib$(RUBY_SO_NAME)-static.a$/;"	m
LIBS	ruby/command-t/Makefile	/^LIBS = $(LIBRUBYARG_SHARED)  -lpthread -ldl  $/;"	m
LOCAL_LIBS	ruby/command-t/Makefile	/^LOCAL_LIBS = $/;"	m
LPBYTE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^LPBYTE = POINTER(c_ubyte)$/;"	v
LPTSTR	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^LPTSTR = POINTER(c_char)$/;"	v
LastCondition	src/vimtlib/autoload/tskeleton.vim	/^function! s:LastCondition() "{{{3$/;"	f
LastIndexOfDelim	junk/NERD_commenter.vim	/^function s:LastIndexOfDelim(delim, str)$/;"	f
LastIndexOfDelim	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LastIndexOfDelim(delim, str)$/;"	f
Latest	src/vimtlib/autoload/tbak.vim	/^fun! s:Latest(filename) "{{{3$/;"	f
LatestFullBackup	src/vimtlib/autoload/tbak.vim	/^fun! s:LatestFullBackup(diffs, maxversion) "{{{3$/;"	f
Left	autoload/tabular.vim	/^function! s:Left(string, fieldwidth)$/;"	f
Left	src/tabular/autoload/tabular.vim	/^function! s:Left(string, fieldwidth)$/;"	f
LeftMostIndx	junk/NERD_commenter.vim	/^function s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
LeftMostIndx	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
LetDefault	junk/vimacs-0.93.vim	/^command! -nargs=+ LetDefault call s:LetDefault(<f-args>)$/;"	c
LetDefault	junk/vimacs-0.93.vim	/^function! <SID>LetDefault(var_name, value)$/;"	f
LetVar	src/vimtlib/autoload/tskeleton.vim	/^function! s:LetVar(text) "{{{3$/;"	f
LetVar	src/vimtlib/autoload/viki.vim	/^function! s:LetVar(name, var) "{{{3$/;"	f
Linglang	src/vimtlib/plugin/linglang.vim	/^command! -bang -nargs=* Linglang call linglang#Linglang(empty('<bang>'), <f-args>)$/;"	c
LinkNotFoundEtc	src/vimtlib/autoload/viki.vim	/^function! s:LinkNotFoundEtc(oldmap, ignoreSyntax) "{{{3$/;"	f
ListColors	plugin/scrollcolor.vim	/^function! s:ListColors()$/;"	f
LiveTimeStamp	src/vimtlib/plugin/livetimestamp.vim	/^command! -narg=? LiveTimeStamp call LiveTimeStamp(<f-args>)$/;"	c
LiveTimeStamp	src/vimtlib/plugin/livetimestamp.vim	/^fun! LiveTimeStamp(...)$/;"	f
LocalModelines	bundle/vim-rails/autoload/rails.vim	/^function! s:LocalModelines(lnum)$/;"	f
LocalModelines	junk/rails.vim	/^function! s:LocalModelines(lnum)$/;"	f
LocalVariablesAllowSpecial	src/vimtlib/plugin/localvariables.vim	/^    fun! s:LocalVariablesAllowSpecial(class, value)$/;"	f
LocalVariablesAppendEvent	src/vimtlib/plugin/localvariables.vim	/^    fun! LocalVariablesAppendEvent(event, value)$/;"	f
LocalVariablesAskUser	src/vimtlib/plugin/localvariables.vim	/^fun! s:LocalVariablesAskUser(prompt, default)$/;"	f
LocalVariablesCheck	src/vimtlib/plugin/localvariables.vim	/^fun! LocalVariablesCheck()$/;"	f
LocalVariablesExecute	src/vimtlib/plugin/localvariables.vim	/^    fun! s:LocalVariablesExecute(cmd)$/;"	f
LocalVariablesReCheck	src/vimtlib/plugin/localvariables.vim	/^command! LocalVariablesReCheck call LocalVariablesReCheck()$/;"	c
LocalVariablesReCheck	src/vimtlib/plugin/localvariables.vim	/^fun! LocalVariablesReCheck()$/;"	f
LocalVariablesRegisterHook	src/vimtlib/plugin/localvariables.vim	/^command! -nargs=1 -bang LocalVariablesRegisterHook call LocalVariablesRegisterHook(<q-args>, <q-bang>)$/;"	c
LocalVariablesRegisterHook	src/vimtlib/plugin/localvariables.vim	/^fun! LocalVariablesRegisterHook(event, bang)$/;"	f
LocalVariablesRunEventHook	src/vimtlib/plugin/localvariables.vim	/^fun! LocalVariablesRunEventHook(event)$/;"	f
LocalVariablesSearch	src/vimtlib/plugin/localvariables.vim	/^fun! s:LocalVariablesSearch(repos)$/;"	f
LocalVariablesSet	src/vimtlib/plugin/localvariables.vim	/^fun! s:LocalVariablesSet(line, prefix, suffix)$/;"	f
Log	bundle/vim-rails/autoload/rails.vim	/^function! s:Log(bang,arg)$/;"	f
Log	junk/fugitive.vim	/^function! s:Log(cmd)$/;"	f
Log	junk/rails.vim	/^function! s:Log(bang,arg)$/;"	f
Log	plugin/fugitive.vim	/^function! s:Log(cmd,...)$/;"	f
Log	src/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd)$/;"	f
Log	src/vimtlib/autoload/spec.vim	/^function! s:Log(level, string) "{{{3$/;"	f
LoopFor	src/vimtlib/autoload/tskeleton.vim	/^function! s:LoopFor(text) "{{{3$/;"	f
Loremipsum	src/vimtlib/plugin/loremipsum.vim	/^command! -bang -nargs=* Loremipsum call loremipsum#Insert("<bang>", <f-args>)$/;"	c
Loreplace	src/vimtlib/plugin/loremipsum.vim	/^command! -nargs=* Loreplace call loremipsum#Replace(<f-args>)$/;"	c
LowerCharacters	src/vimtlib/autoload/viki.vim	/^function! s:LowerCharacters() "{{{3$/;"	f
M	colors/inkpot.vim	/^fun! <SID>M(a)$/;"	f
M	colors/vividchalk.vim	/^fun! s:M(a)$/;"	f
M	src/inkpot/colors/inkpot.vim	/^fun! <SID>M(a)$/;"	f
MAKEDIRS	ruby/command-t/Makefile	/^MAKEDIRS = mkdir -p$/;"	m
MBoxVar	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:MBoxVar(bufnr, name)$/;"	f
MEMORY_BASIC_INFORMATION	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class MEMORY_BASIC_INFORMATION(Structure):$/;"	c
MENU_EVENT	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^MENU_EVENT = 0x0008$/;"	v
MENU_EVENT_RECORD	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class MENU_EVENT_RECORD(Structure):$/;"	c
MOUSE_EVENT	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^MOUSE_EVENT = 0x0002$/;"	v
MOUSE_EVENT_RECORD	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class MOUSE_EVENT_RECORD(Structure):$/;"	c
Make	src/vimtlib/plugin/checksyntax.vim	/^fun! s:Make()$/;"	f
MakeAscendingValues	plugin/fuzzyfinder.vim	/^function! s:MakeAscendingValues(n, total)$/;"	f
MakeFileAbbrInfo	plugin/fuzzyfinder.vim	/^function! s:MakeFileAbbrInfo(item, max_len_stats)$/;"	f
MakeMenuEntry	src/vimtlib/autoload/tskeleton.vim	/^function! s:MakeMenuEntry(items, ...)$/;"	f
MakeQFE	src/vimtlib/autoload/ttags.vim	/^function! s:MakeQFE(tag) "{{{3$/;"	f
MakeQFL	src/vimtlib/autoload/ttags.vim	/^function! s:MakeQFL(tags) "{{{3$/;"	f
MakeRx	src/vimtlib/autoload/tEchoPair.vim	/^fun! s:MakeRx(type, text)$/;"	f
MakeSnip	plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
MakeSnip	src/snipmate.vim/plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
MakeSpace	junk/Align.vim	/^fun! s:MakeSpace(spacecnt)$/;"	f
MakeVikiDefPart	src/vimtlib/autoload/viki.vim	/^function! s:MakeVikiDefPart(txt) "{{{3$/;"	f
MakeWellFormedList	plugin/scrollcolor.vim	/^function! s:MakeWellFormedList(list) $/;"	f
ManualCompletionEnter	plugin/supertab.vim	/^function! s:ManualCompletionEnter()$/;"	f
Map	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Map() "{{{$/;"	f
MapDelimiters	junk/NERD_commenter.vim	/^function s:MapDelimiters(left, right)$/;"	f
MapDelimiters	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:MapDelimiters(left, right)$/;"	f
MapDelimitersWithAlternative	junk/NERD_commenter.vim	/^function s:MapDelimitersWithAlternative(left, right, leftAlt, rightAlt)$/;"	f
MapDelimitersWithAlternative	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:MapDelimitersWithAlternative(left, right, leftAlt, rightAlt)$/;"	f
MapMsg	junk/delimitMate.vim	/^function! s:MapMsg(msg) "{{{1$/;"	f
MapToSetAbbrWithFileWord	plugin/fuzzyfinder.vim	/^function! s:MapToSetAbbrWithFileWord(items, max_item_width)$/;"	f
MapToSetSerialIndex	plugin/fuzzyfinder.vim	/^function! s:MapToSetSerialIndex(in, offset)$/;"	f
Mark	junk/vimacs-0.93.vim	/^function! <SID>Mark(...)$/;"	f
MarkId	src/vimtlib/plugin/quickfixsigns.vim	/^function! s:MarkId(item) "{{{3$/;"	f
MarkInexistent	src/vimtlib/autoload/viki.vim	/^function! s:MarkInexistent(line1, line2, ...) "{{{3$/;"	f
MarkInexistentInDocument	src/vimtlib/autoload/viki.vim	/^function! s:MarkInexistentInDocument() "{{{3$/;"	f
MarkInexistentInLine	src/vimtlib/autoload/viki.vim	/^function! s:MarkInexistentInLine() "{{{3$/;"	f
MarkInexistentInLineQuick	src/vimtlib/autoload/viki.vim	/^function! s:MarkInexistentInLineQuick() "{{{3$/;"	f
MarkInexistentInParagraph	src/vimtlib/autoload/viki.vim	/^function! s:MarkInexistentInParagraph() "{{{3$/;"	f
MarkInexistentInParagraphQuick	src/vimtlib/autoload/viki.vim	/^function! s:MarkInexistentInParagraphQuick() "{{{3$/;"	f
MarkInexistentInParagraphVisible	src/vimtlib/autoload/viki.vim	/^function! s:MarkInexistentInParagraphVisible() "{{{3$/;"	f
MarkRead	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:MarkRead(ids)$/;"	f
MarkSign	src/vimtlib/plugin/quickfixsigns.vim	/^function! s:MarkSign(item) "{{{3$/;"	f
Marks	src/vimtlib/plugin/quickfixsigns.vim	/^function! s:Marks() "{{{3$/;"	f
MatchBit	src/vimtlib/autoload/tskeleton.vim	/^function! s:MatchBit(value, rx) "{{{3$/;"	f
MatchHead	src/vimtlib/ftplugin/viki.vim	/^    function! s:MatchHead(lnum) "{{{3$/;"	f
MatchList	src/vimtlib/ftplugin/viki.vim	/^    function! s:MatchList(lnum) "{{{3$/;"	f
MatchWindow	ruby/command-t/match_window.rb	/^  class MatchWindow$/;"	c	class:CommandT
MaybeCloseScratch	src/vimtlib/autoload/spec.vim	/^function! s:MaybeCloseScratch() "{{{3$/;"	f
MaybeOpenScratch	src/vimtlib/autoload/spec.vim	/^function! s:MaybeOpenScratch() "{{{3$/;"	f
MenuController.New	plugin/NERD_tree.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController.New	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	plugin/NERD_tree.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._allIndexesFor	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	plugin/NERD_tree.vim	/^function! s:MenuController._current()$/;"	f
MenuController._current	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	plugin/NERD_tree.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorDown	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	plugin/NERD_tree.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._cursorUp	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	plugin/NERD_tree.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._echoPrompt	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	plugin/NERD_tree.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._handleKeypress	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	plugin/NERD_tree.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._nextIndexFor	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	plugin/NERD_tree.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._restoreOptions	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	plugin/NERD_tree.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._saveOptions	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	plugin/NERD_tree.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController._setCmdheight	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	plugin/NERD_tree.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuController.showMenu	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	plugin/NERD_tree.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.All	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	plugin/NERD_tree.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.AllEnabled	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	plugin/NERD_tree.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.Create	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSeparator	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.CreateSubmenu	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	plugin/NERD_tree.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.enabled	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	plugin/NERD_tree.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.execute	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	plugin/NERD_tree.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSeparator	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	plugin/NERD_tree.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
MenuItem.isSubmenu	src/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
MkBackup	src/vimtlib/autoload/tbak.vim	/^fun! s:MkBackup(filename, dest) "{{{3$/;"	f
MkDiff	src/vimtlib/autoload/tbak.vim	/^fun! s:MkDiff(filename, dir) "{{{3$/;"	f
MkDir	src/vimtlib/autoload/tbak.vim	/^fun! s:MkDir(dir) "{{{3$/;"	f
MkVimball	plugin/vimballPlugin.vim	/^com! -ra   -complete=file -na=+ -bang MkVimball call vimball#MkVimball(<line1>,<line2>,<bang>0,<f-args>)$/;"	c
Modify	src/vimtlib/autoload/tskeleton.vim	/^function! s:Modify(text, modifier) "{{{3$/;"	f
ModifyWordAsFilename	plugin/fuzzyfinder.vim	/^function! s:ModifyWordAsFilename(item, mods)$/;"	f
Move	junk/fugitive.vim	/^function! s:Move(force,destination)$/;"	f
Move	plugin/fugitive.vim	/^function! s:Move(force,destination)$/;"	f
Move	src/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination)$/;"	f
MoveComplete	junk/fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
MoveComplete	plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
MoveComplete	src/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
MoveToOtherTabPageOpeningBuffer	plugin/fuzzyfinder.vim	/^function! s:MoveToOtherTabPageOpeningBuffer(buf_nr)$/;"	f
MoveToWindowOfBufferInCurrentTabPage	plugin/fuzzyfinder.vim	/^function! s:MoveToWindowOfBufferInCurrentTabPage(buf_nr)$/;"	f
MoveToWindowOfBufferInOtherTabPage	plugin/fuzzyfinder.vim	/^function! s:MoveToWindowOfBufferInOtherTabPage(buf_nr)$/;"	f
MruRegister	src/vimtlib/plugin/tmru.vim	/^function! s:MruRegister(fname)$/;"	f
MruRetrieve	src/vimtlib/plugin/tmru.vim	/^function! s:MruRetrieve()$/;"	f
MruStore	src/vimtlib/plugin/tmru.vim	/^function! s:MruStore(mru)$/;"	f
Multipart	junk/NERD_commenter.vim	/^function s:Multipart()$/;"	f
Multipart	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Multipart()$/;"	f
MyCB	bundle/conque-term/tests/api.vim	/^function! MyCB(output)$/;"	f
MyCap	bundle/conque-term/tests/test_insert.vim	/^function! MyCap()$/;"	f
N	plugin/space.vim	/^    noremap <expr> <silent> N  <SID>setup_space("search", "N")$/;"	m
N	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> N  <SID>setup_space("search", "N")$/;"	m
NERDComment	junk/NERD_commenter.vim	/^function! NERDComment(isVisual, type) range$/;"	f
NERDComment	src/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDComment(isVisual, type) range$/;"	f
NERDTree	plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call s:initNerdTree('<args>')$/;"	c
NERDTree	src/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	src/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call s:initNerdTree('<args>')$/;"	c
NERDTreeAddKeyMap	plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddKeyMap	src/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuItem	src/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddMenuSeparator	src/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddNode	plugin/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddNode	src/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeAddSubmenu	src/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeClose	plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call s:closeTreeIfOpen()$/;"	c
NERDTreeClose	src/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call s:closeTreeIfOpen()$/;"	c
NERDTreeCopyNode	nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyNode	plugin/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeCopyNode	src/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeDeleteNode	plugin/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeDeleteNode	src/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFile	plugin/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFile	src/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecFileActive	plugin/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecFileActive	src/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeFind	plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call s:findAndRevealPath()$/;"	c
NERDTreeFind	src/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call s:findAndRevealPath()$/;"	c
NERDTreeFromBookmark	plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,s:completeBookmarks -bar NERDTreeFromBookmark call s:initNerdTree('<args>')$/;"	c
NERDTreeFromBookmark	src/nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,s:completeBookmarks -bar NERDTreeFromBookmark call s:initNerdTree('<args>')$/;"	c
NERDTreeGitAdd	plugin/nerdtree_plugin/git_menu.vim	/^function! NERDTreeGitAdd()$/;"	f
NERDTreeGitCheckout	plugin/nerdtree_plugin/git_menu.vim	/^function! NERDTreeGitCheckout()$/;"	f
NERDTreeGitMenuEnabled	plugin/nerdtree_plugin/git_menu.vim	/^function! NERDTreeGitMenuEnabled()$/;"	f
NERDTreeGitMove	plugin/nerdtree_plugin/git_menu.vim	/^function! NERDTreeGitMove()$/;"	f
NERDTreeGitRemove	plugin/nerdtree_plugin/git_menu.vim	/^function! NERDTreeGitRemove()$/;"	f
NERDTreeHijackNetrw	plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeHijackNetrw	src/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call s:initNerdTreeMirror()$/;"	c
NERDTreeMirror	src/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call s:initNerdTreeMirror()$/;"	c
NERDTreeMoveNode	nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeMoveNode	plugin/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeMoveNode	src/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeRender	plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRender	src/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeToggle	plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call s:toggle('<args>')$/;"	c
NERDTreeToggle	src/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call s:toggle('<args>')$/;"	c
NEXTCOLOR	plugin/scrollcolor.vim	/^command! NEXTCOLOR   :call s:NextColorscheme()$/;"	c
NORMAL_PRIORITY_CLASS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^NORMAL_PRIORITY_CLASS = 0x00000020$/;"	v
NUMLOCK_ON	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^NUMLOCK_ON = 0x0020$/;"	v
Navcommand	bundle/vim-rails/autoload/rails.vim	/^function! s:Navcommand(bang,...)$/;"	f
Navcommand	junk/rails.vim	/^function! s:Navcommand(bang,...)$/;"	f
NerdEcho	junk/NERD_commenter.vim	/^function s:NerdEcho(msg, typeOfMsg)$/;"	f
NerdEcho	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NerdEcho(msg, typeOfMsg)$/;"	f
NewProject	junk/rails.vim	/^function! s:NewProject(proj,rr)$/;"	f
NewProjectTemplate	junk/rails.vim	/^function! s:NewProjectTemplate(proj,rr)$/;"	f
NextColorscheme	plugin/scrollcolor.vim	/^function! s:NextColorscheme()$/;"	f
NextSilent	plugin/scrollcolor.vim	/^function! s:NextSilent()$/;"	f
NoAutoClose	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:NoAutoClose() "{{{$/;"	f
NoAutoClose	junk/delimitMate.vim	/^function! s:NoAutoClose() "{{{1$/;"	f
NoInline	src/vimtlib/autoload/loremipsum.vim	/^function! s:NoInline(flags) "{{{3$/;"	f
NoTags	src/vimtlib/autoload/ttags.vim	/^function! s:NoTags() "{{{3$/;"	f
NormInPreview	src/vimtlib/plugin/cmdlinehelp.vim	/^function! s:NormInPreview(seq) "{{{3$/;"	f
Normal	src/vimtlib/autoload/tEchoPair.vim	/^fun! s:Normal(cmd, ...)$/;"	f
NumLinesInBuf	junk/NERD_commenter.vim	/^function s:NumLinesInBuf()$/;"	f
NumLinesInBuf	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumLinesInBuf()$/;"	f
NumberOfLeadingTabs	junk/NERD_commenter.vim	/^function s:NumberOfLeadingTabs(s)$/;"	f
NumberOfLeadingTabs	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumberOfLeadingTabs(s)$/;"	f
O	junk/colorize.vim	/^noremap O :highlight Normal guibg=lightyellow<cr>O$/;"	m
OBJS	ruby/command-t/Makefile	/^OBJS = ext.o match.o matcher.o$/;"	m
OnCmdCR	plugin/fuzzyfinder.vim	/^function! s:OnCmdCR()$/;"	f
Open1LineBuffer	plugin/fuzzyfinder.vim	/^function! s:Open1LineBuffer(buf_nr, buf_name)$/;"	f
OpenBuffer	plugin/fuzzyfinder.vim	/^function! s:OpenBuffer(buf_nr, mode, reuse)$/;"	f
OpenFile	plugin/fuzzyfinder.vim	/^function! s:OpenFile(path, mode, reuse)$/;"	f
OpenLink	src/vimtlib/autoload/viki.vim	/^function! s:OpenLink(dest, anchor, winNr)$/;"	f
OpenSession	bundle/session.vim/plugin/session.vim	/^command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names OpenSession call xolox#session#open_cmd(<q-args>, <q-bang>)$/;"	c
OpenTag	plugin/fuzzyfinder.vim	/^function s:OpenTag(tag, mode)$/;"	f
OptionManager.restore_all	plugin/fuzzyfinder.vim	/^function! s:OptionManager.restore_all()$/;"	f
OptionManager.set	plugin/fuzzyfinder.vim	/^function! s:OptionManager.set(name, value)$/;"	f
OptionsDefault	src/vimtlib/autoload/spec/speckiller.vim	/^function! s:OptionsDefault(...) "{{{3$/;"	f
OptionsRestCmd	src/vimtlib/autoload/tsession.vim	/^function! s:OptionsRestCmd(type) "{{{3$/;"	f
PLUGIN	bundle/delimitMate/Makefile	/^PLUGIN=$(shell basename "$$PWD")$/;"	m
PREVCOLOR	plugin/scrollcolor.vim	/^command! PREVCOLOR   :call s:PrevColorscheme()$/;"	c
PROCESS_CREATE_PROCESS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_CREATE_PROCESS = 0x0080$/;"	v
PROCESS_CREATE_THREAD	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_CREATE_THREAD = 0x0002$/;"	v
PROCESS_DUP_HANDLE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_DUP_HANDLE = 0x0040$/;"	v
PROCESS_INFORMATION	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class PROCESS_INFORMATION(Structure):$/;"	c
PROCESS_QUERY_INFORMATION	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_QUERY_INFORMATION = 0x0400$/;"	v
PROCESS_QUERY_LIMITED_INFORMATION	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_QUERY_LIMITED_INFORMATION = 0x1000$/;"	v
PROCESS_SET_INFORMATION	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_SET_INFORMATION = 0x0200$/;"	v
PROCESS_SET_QUOTA	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_SET_QUOTA = 0x0100$/;"	v
PROCESS_SUSPEND_RESUME	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_SUSPEND_RESUME = 0x0800$/;"	v
PROCESS_TERMINATE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_TERMINATE = 0x0001$/;"	v
PROCESS_VM_OPERATION	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_OPERATION = 0x0008$/;"	v
PROCESS_VM_READ	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_READ = 0x0010$/;"	v
PROCESS_VM_WRITE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_WRITE = 0x0020$/;"	v
ParseArgs	src/vimtlib/autoload/spec.vim	/^function! s:ParseArgs(args, sfile) "{{{3$/;"	f
ParseArgs	src/vimtlib/autoload/ttags.vim	/^function! s:ParseArgs(keyargs_as_string) "{{{3$/;"	f
ParsePattern	plugin/Tabular.vim	/^function! s:ParsePattern(string)$/;"	f
ParsePattern	src/tabular/plugin/Tabular.vim	/^function! s:ParsePattern(string)$/;"	f
Path	autoload/vimball.vim	/^fun! s:Path(cmd,quote)$/;"	f
Path.AbsolutePathFor	plugin/NERD_tree.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.AbsolutePathFor	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	plugin/NERD_tree.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.CopyingSupported	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	plugin/NERD_tree.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.Create	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	plugin/NERD_tree.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.JoinPathStrings	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	plugin/NERD_tree.vim	/^function! s:Path.New(path)$/;"	f
Path.New	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.New(path)$/;"	f
Path.Slash	plugin/NERD_tree.vim	/^function! s:Path.Slash()$/;"	f
Path.Slash	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	plugin/NERD_tree.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path.WinToUnixPath	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._str	plugin/NERD_tree.vim	/^function! s:Path._str()$/;"	f
Path._str	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	plugin/NERD_tree.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForCd	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	plugin/NERD_tree.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForEdit	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	plugin/NERD_tree.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForGlob	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	plugin/NERD_tree.vim	/^function! s:Path._strForUI()$/;"	f
Path._strForUI	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	plugin/NERD_tree.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.bookmarkNames	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	plugin/NERD_tree.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.cacheDisplayString	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	plugin/NERD_tree.vim	/^function! s:Path.changeToDir()$/;"	f
Path.changeToDir	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	plugin/NERD_tree.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.compareTo	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	plugin/NERD_tree.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copy	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	plugin/NERD_tree.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.copyingWillOverwrite	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	plugin/NERD_tree.vim	/^function! s:Path.delete()$/;"	f
Path.delete	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	plugin/NERD_tree.vim	/^function! s:Path.displayString()$/;"	f
Path.displayString	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.displayString()$/;"	f
Path.equals	plugin/NERD_tree.vim	/^function! s:Path.equals(path)$/;"	f
Path.equals	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	plugin/NERD_tree.vim	/^function! s:Path.exists()$/;"	f
Path.exists	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	plugin/NERD_tree.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.extractDriveLetter	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	plugin/NERD_tree.vim	/^function! s:Path.getDir()$/;"	f
Path.getDir	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	plugin/NERD_tree.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getLastPathComponent	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	plugin/NERD_tree.vim	/^function! s:Path.getParent()$/;"	f
Path.getParent	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	plugin/NERD_tree.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.getSortOrderIndex	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	plugin/NERD_tree.vim	/^function! s:Path.ignore()$/;"	f
Path.ignore	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	plugin/NERD_tree.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnder	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.readInfoFromDisk	plugin/NERD_tree.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.readInfoFromDisk	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	plugin/NERD_tree.vim	/^function! s:Path.refresh()$/;"	f
Path.refresh	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	plugin/NERD_tree.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.rename	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	plugin/NERD_tree.vim	/^function! s:Path.str(...)$/;"	f
Path.str	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	plugin/NERD_tree.vim	/^function! s:Path.strTrunk()$/;"	f
Path.strTrunk	src/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.strTrunk()$/;"	f
PathUtilities	ruby/command-t/vim/path_utilities.rb	/^    module PathUtilities$/;"	m	class:CommandT.VIM
Pim	src/vimtlib/plugin/pim.vim	/^augroup Pim$/;"	a
PimCanonicDate	src/vimtlib/plugin/pim.vim	/^    function! PimCanonicDate(date) "{{{3$/;"	f
PimCanonicTime	src/vimtlib/plugin/pim.vim	/^    function! PimCanonicTime(time, ...) "{{{3$/;"	f
PimCleanEntry	src/vimtlib/plugin/pim.vim	/^command! PimCleanEntry %s\/^.*<+.\\{-}+>.*\\n\/\/e$/;"	c
PimInsertDate	src/vimtlib/autoload/pim.vim	/^    command! PimInsertDate call pim#SelectDate(bufnr('%'))$/;"	c
PimMonth	src/vimtlib/plugin/pim.vim	/^command! -bang -narg=? PimMonth call pim#Month("<bang>", <q-args>)$/;"	c
PimRebuild	src/vimtlib/plugin/pim.vim	/^command! PimRebuild call pim#Rebuild()$/;"	c
PimSortDates	src/vimtlib/plugin/pim.vim	/^    command! -range PimSortDates <line1>,<line2>sort n$/;"	c
PimSortTasks	src/vimtlib/plugin/pim.vim	/^    command! -range PimSortTasks <line1>,<line2>sort n$/;"	c
PimToday	src/vimtlib/plugin/pim.vim	/^command! -bang -narg=? PimToday call pim#Today("<bang>", <q-args>)$/;"	c
PimWeek	src/vimtlib/plugin/pim.vim	/^command! -bang -narg=? PimWeek  call pim#Week("<bang>", <q-args>)$/;"	c
PimYankDate	src/vimtlib/autoload/pim.vim	/^    command! -narg=? PimYankDate call pim#SelectDate(<f-args>)$/;"	c
PlaceDelimitersAndInsBetween	junk/NERD_commenter.vim	/^function s:PlaceDelimitersAndInsBetween()$/;"	f
PlaceDelimitersAndInsBetween	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:PlaceDelimitersAndInsBetween()$/;"	f
PlaceSign	src/vimtlib/plugin/quickfixsigns.vim	/^function! s:PlaceSign(sign, list, ...) "{{{3$/;"	f
PluginSession	bundle/session.vim/plugin/session.vim	/^augroup PluginSession$/;"	a
PointToRegister	junk/vimacs-0.93.vim	/^command! PointToRegister :call PointToRegister()$/;"	c
PointToRegister	junk/vimacs-0.93.vim	/^function! <SID>PointToRegister()$/;"	f
PopFile	src/vimtlib/autoload/spec.vim	/^function! s:PopFile() "{{{3$/;"	f
PrefixTag	src/vimtlib/plugin/cmdlinehelp.vim	/^function! s:PrefixTag(tag) "{{{3$/;"	f
PrepareAbbreviation	src/vimtlib/autoload/tskeleton.vim	/^function! s:PrepareAbbreviation(name) "{{{3$/;"	f
PrepareBuffer	src/vimtlib/autoload/tskeleton.vim	/^function! s:PrepareBuffer(filetype)$/;"	f
PrepareBufferFromCache	src/vimtlib/autoload/tskeleton.vim	/^function! s:PrepareBufferFromCache(filetype) "{{{3$/;"	f
PrepareFiletype	src/vimtlib/autoload/tskeleton.vim	/^function! s:PrepareFiletype(filetype, reset)$/;"	f
PrepareFiletypeFromCache	src/vimtlib/autoload/tskeleton.vim	/^function! s:PrepareFiletypeFromCache(filetype) "{{{3$/;"	f
PrepareFiletypeMap	src/vimtlib/autoload/tskeleton.vim	/^function! s:PrepareFiletypeMap(type, anyway) "{{{3$/;"	f
PrepareFiletypeMenu	src/vimtlib/autoload/tskeleton.vim	/^function! s:PrepareFiletypeMenu(type) "{{{3$/;"	f
PrepareMenu	src/vimtlib/autoload/tskeleton.vim	/^function! s:PrepareMenu(type, ...) "{{{3$/;"	f
PrepareMenuEntry	src/vimtlib/autoload/tskeleton.vim	/^function! s:PrepareMenuEntry(name, subpriority, mode) "{{{3$/;"	f
PrepareMiniBit	src/vimtlib/autoload/tskeleton.vim	/^function! s:PrepareMiniBit(dict, def, buildmenu) "{{{3$/;"	f
PrepareSelectBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:PrepareSelectBuffer()$/;"	f
PrepareSelectFiles	src/vimtlib/autoload/tselectfiles.vim	/^function! s:PrepareSelectFiles(hide)$/;"	f
PrevColorscheme	plugin/scrollcolor.vim	/^function! s:PrevColorscheme()$/;"	f
PrevSilent	plugin/scrollcolor.vim	/^function! s:PrevSilent()$/;"	f
Preview	bundle/vim-rails/autoload/rails.vim	/^function! s:Preview(bang,lnum,arg)$/;"	f
Preview	junk/rails.vim	/^function! s:Preview(bang,lnum,arg)$/;"	f
Preview	src/vimtlib/autoload/tselectfiles.vim	/^function! s:Preview(file) "{{{3$/;"	f
PrintArray	src/vimtlib/autoload/tcalc.vim	/^function! s:PrintArray(lines, reversed, align) "{{{3$/;"	f
PrintFormat	src/vimtlib/autoload/tlib/string.vim	/^function! s:PrintFormat(format, string) "{{{3$/;"	f
ProcessFile	plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessFile	src/snipmate.vim/plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessLine	src/vimtlib/autoload/ttoc.vim	/^function! s:ProcessLine() "{{{3$/;"	f
ProcessSnippet	autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
ProcessSnippet	src/snipmate.vim/autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
ProcessTemplate	src/vimtlib/plugin/tGpg.vim	/^function! s:ProcessTemplate(parms, iomode, template, vars) "{{{3$/;"	f
ProcessedLine	autoload/tcomment.vim	/^function! s:ProcessedLine(uncomment, match, checkRx, replace)$/;"	f
ProcessedLine	src/vimtlib/autoload/tcomment.vim	/^function! s:ProcessedLine(uncomment, match, checkRx, replace)$/;"	f
Project	junk/rails.vim	/^function! s:Project(bang,arg)$/;"	f
ProjectMenu	bundle/vim-rails/plugin/rails.vim	/^function! s:ProjectMenu()$/;"	f
Prompt	ruby/command-t/prompt.rb	/^  class Prompt$/;"	c	class:CommandT
PushFile	src/vimtlib/autoload/spec.vim	/^function! s:PushFile(filename) "{{{3$/;"	f
PutCache	src/vimtlib/plugin/tGpg.vim	/^function! s:PutCache(id, file, secret) "{{{3$/;"	f
PutCacheVar	src/vimtlib/plugin/tGpg.vim	/^function! s:PutCacheVar(id, file, secret) "{{{3$/;"	f
Pwd	src/vimtlib/plugin/glark.vim	/^function! s:Pwd() "{{{3$/;"	f
QArgSplitter	junk/Align.vim	/^fun! s:QArgSplitter(qarg)$/;"	f
QArgSplitter	junk/cecutil.vim	/^fun! QArgSplitter(qarg)$/;"	f
Query	src/vimtlib/autoload/tskeleton.vim	/^function! s:Query(arg) "{{{3$/;"	f
QueryReplace	junk/vimacs-0.93.vim	/^command! QueryReplace :call <SID>QueryReplace()()$/;"	c
QueryReplace	junk/vimacs-0.93.vim	/^function! <SID>QueryReplace()$/;"	f
QueryReplaceRegexp	junk/vimacs-0.93.vim	/^command! QueryReplaceRegexp :call <SID>QueryReplace()_regexp()$/;"	c
QueryReplaceRegexp	junk/vimacs-0.93.vim	/^function! <SID>QueryReplaceRegexp()$/;"	f
QuickFixSigns	src/vimtlib/plugin/quickfixsigns.vim	/^augroup QuickFixSigns$/;"	a
QuickfixsignsBalloon	src/vimtlib/plugin/quickfixsigns.vim	/^function! QuickfixsignsBalloon() "{{{3$/;"	f
QuickfixsignsClear	src/vimtlib/plugin/quickfixsigns.vim	/^function! QuickfixsignsClear(sign) "{{{3$/;"	f
QuickfixsignsMarks	src/vimtlib/plugin/quickfixsigns.vim	/^function! QuickfixsignsMarks(state) "{{{3$/;"	f
QuickfixsignsSet	src/vimtlib/plugin/quickfixsigns.vim	/^function! QuickfixsignsSet(event) "{{{3$/;"	f
QuoteDelim	junk/delimitMate.vim	/^function! s:QuoteDelim(char) "{{{1$/;"	f
RARRAY_LEN	ruby/command-t/ruby_compat.h	/^#define RARRAY_LEN(/;"	d
RARRAY_PTR	ruby/command-t/ruby_compat.h	/^#define RARRAY_PTR(/;"	d
REALTIME_PRIORITY_CLASS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^REALTIME_PRIORITY_CLASS = 0x00000100$/;"	v
RFLOAT_VALUE	ruby/command-t/ruby_compat.h	/^#define RFLOAT_VALUE(/;"	d
RIGHT_ALT_PRESSED	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^RIGHT_ALT_PRESSED = 0x0001$/;"	v
RIGHT_CTRL_PRESSED	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^RIGHT_CTRL_PRESSED = 0x0004$/;"	v
RM	junk/cecutil.vim	/^com! -bar -nargs=1 RM	call RestoreMark(<q-args>)$/;"	c
RM	ruby/command-t/Makefile	/^RM = rm -f$/;"	m
RSTRING_LEN	ruby/command-t/ruby_compat.h	/^#define RSTRING_LEN(/;"	d
RSTRING_PTR	ruby/command-t/ruby_compat.h	/^#define RSTRING_PTR(/;"	d
RUBY	ruby/command-t/Makefile	/^RUBY = $(ruby)$/;"	m
RUBYARCHDIR	ruby/command-t/Makefile	/^RUBYARCHDIR   = $(sitearchdir)$(target_prefix)$/;"	m
RUBYCOMMONDIR	ruby/command-t/Makefile	/^RUBYCOMMONDIR = $(sitedir)$(target_prefix)$/;"	m
RUBYLIBDIR	ruby/command-t/Makefile	/^RUBYLIBDIR    = $(sitelibdir)$(target_prefix)$/;"	m
RUBY_EXTCONF_H	ruby/command-t/Makefile	/^RUBY_EXTCONF_H = $/;"	m
RUBY_INSTALL_NAME	ruby/command-t/Makefile	/^RUBY_INSTALL_NAME = ruby$/;"	m
RUBY_SO_NAME	ruby/command-t/Makefile	/^RUBY_SO_NAME = ruby$/;"	m
RWP	junk/cecutil.vim	/^com! -bar -nargs=0 RWP	call RestoreWinPosn()$/;"	c
Ragrep	junk/grep.vim	/^command! -nargs=* -complete=file Ragrep$/;"	c
RagrepAdd	junk/grep.vim	/^command! -nargs=* -complete=file RagrepAdd$/;"	c
Rails	bundle/vim-rails/plugin/rails.vim	/^command! -bar -bang -nargs=* -complete=dir Rails :if s:autoload()|call rails#new_app_command(<bang>0,<f-args>)|endif$/;"	c
RailsBufInit	bundle/vim-rails/autoload/rails.vim	/^function! RailsBufInit(path)$/;"	f
RailsBufInit	junk/rails.vim	/^function! RailsBufInit(path)$/;"	f
RailsFile	bundle/vim-rails/autoload/rails.vim	/^function! RailsFile()$/;"	f
RailsFile	junk/rails.vim	/^function! RailsFile()$/;"	f
RailsFilePath	bundle/vim-rails/autoload/rails.vim	/^function! RailsFilePath()$/;"	f
RailsFilePath	junk/rails.vim	/^function! RailsFilePath()$/;"	f
RailsFileType	bundle/vim-rails/autoload/rails.vim	/^function! RailsFileType()$/;"	f
RailsFileType	junk/rails.vim	/^function! RailsFileType()$/;"	f
RailsFind	bundle/vim-rails/autoload/rails.vim	/^function! s:RailsFind()$/;"	f
RailsFind	junk/rails.vim	/^function! s:RailsFind()$/;"	f
RailsHelpCommand	bundle/vim-rails/autoload/rails.vim	/^function! RailsHelpCommand(...)$/;"	f
RailsHelpCommand	junk/rails.vim	/^function! RailsHelpCommand(...)$/;"	f
RailsIncludeexpr	bundle/vim-rails/autoload/rails.vim	/^function! RailsIncludeexpr()$/;"	f
RailsIncludeexpr	junk/rails.vim	/^function! RailsIncludeexpr()$/;"	f
RailsIncludefind	bundle/vim-rails/autoload/rails.vim	/^function! s:RailsIncludefind(str,...)$/;"	f
RailsIncludefind	junk/rails.vim	/^function! s:RailsIncludefind(str,...)$/;"	f
RailsNamedRoutes	bundle/vim-rails/autoload/rails.vim	/^function! RailsNamedRoutes()$/;"	f
RailsNamedRoutes	junk/rails.vim	/^function! RailsNamedRoutes()$/;"	f
RailsRevision	bundle/vim-rails/autoload/rails.vim	/^function! RailsRevision()$/;"	f
RailsRevision	junk/rails.vim	/^function! RailsRevision()$/;"	f
RailsRoot	bundle/vim-rails/autoload/rails.vim	/^function! RailsRoot()$/;"	f
RailsRoot	junk/rails.vim	/^function! RailsRoot()$/;"	f
Rake	bundle/vim-rails/autoload/rails.vim	/^function! s:Rake(bang,lnum,arg)$/;"	f
Rake	junk/rails.vim	/^function! s:Rake(bang,lnum,arg)$/;"	f
ReadFile	src/vimtlib/autoload/tskeleton.vim	/^function! s:ReadFile(filename) "{{{3$/;"	f
ReadSkeleton	src/vimtlib/autoload/tskeleton.vim	/^function! s:ReadSkeleton(filename) "{{{3$/;"	f
RebuildIndexEntry	src/vimtlib/autoload/pim.vim	/^function! s:RebuildIndexEntry(fname, class) "{{{3$/;"	f
RecordInFile	autoload/vimball.vim	/^fun! s:RecordInFile(home)$/;"	f
RecordInVar	autoload/vimball.vim	/^fun! s:RecordInVar(home,cmd)$/;"	f
RedBar	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^function s:RedBar(msg)$/;"	f
Refresh	bundle/vim-rails/autoload/rails.vim	/^function! s:Refresh(bang)$/;"	f
Refresh	junk/rails.vim	/^function! s:Refresh(bang)$/;"	f
RefreshBuffer	bundle/vim-rails/autoload/rails.vim	/^function! s:RefreshBuffer()$/;"	f
RefreshBuffer	junk/rails.vim	/^function! s:RefreshBuffer()$/;"	f
RefreshColorschemesList	plugin/scrollcolor.vim	/^function! s:RefreshColorschemesList() $/;"	f
RegexpGroup	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:RegexpGroup(...)$/;"	f
RegexpJoin	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:RegexpJoin(regexps)$/;"	f
Regrep	junk/grep.vim	/^command! -nargs=* -complete=file Regrep$/;"	c
RegrepAdd	junk/grep.vim	/^command! -nargs=* -complete=file RegrepAdd$/;"	c
Related	bundle/vim-rails/autoload/rails.vim	/^function! s:Related(cmd,line1,line2,count,...)$/;"	f
Related	junk/rails.vim	/^function! s:Related(cmd,line1,line2,count,...)$/;"	f
ReleaseKeyPresses	plugin/supertab.vim	/^function! s:ReleaseKeyPresses()$/;"	f
ReloadAllSnippets	plugin/snipMate.vim	/^fun! ReloadAllSnippets()$/;"	f
ReloadAllSnippets	src/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadAllSnippets()$/;"	f
ReloadSnippets	plugin/snipMate.vim	/^fun! ReloadSnippets(ft)$/;"	f
ReloadSnippets	src/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadSnippets(ft)$/;"	f
Remove	junk/fugitive.vim	/^function! s:Remove(force)$/;"	f
Remove	plugin/fugitive.vim	/^function! s:Remove(force)$/;"	f
Remove	src/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force)$/;"	f
RemoveAutoHide	src/vimtlib/plugin/cmdlinehelp.vim	/^function! s:RemoveAutoHide() "{{{3$/;"	f
RemoveDelimiters	junk/NERD_commenter.vim	/^function s:RemoveDelimiters(left, right, line)$/;"	f
RemoveDelimiters	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RemoveDelimiters(left, right, line)$/;"	f
RemoveDuplicates	plugin/scrollcolor.vim	/^function! s:RemoveDuplicates(list)$/;"	f
RemovePrompt	plugin/fuzzyfinder.vim	/^function! s:RemovePrompt(line, prompt)$/;"	f
RemovePrompt	plugin/fuzzyfinder_textmate.vim	/^function! s:RemovePrompt(line, prompt)$/;"	f
RemoveSnippet	autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
RemoveSnippet	src/snipmate.vim/autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
Rename	plugin/Rename.vim	/^command! -nargs=* -complete=file -bang Rename :call Rename("<args>", "<bang>")$/;"	c
Rename	plugin/Rename.vim	/^function! Rename(name, bang)$/;"	f
RenameFile	src/vimtlib/autoload/tselectfiles.vim	/^function! s:RenameFile(file, name, confirm)$/;"	f
RenameThisBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:RenameThisBuffer(buffer)$/;"	f
RepeatLast	bundle/delimitMate/autoload/delimitMateTests.vim	/^	function! RepeatLast(name, output, ...) " {{{$/;"	f
ReplaceCmd	junk/fugitive.vim	/^function! s:ReplaceCmd(cmd) abort$/;"	f
ReplaceCmd	plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceCmd	src/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd) abort$/;"	f
ReplaceDelims	junk/NERD_commenter.vim	/^function s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str)$/;"	f
ReplaceDelims	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str)$/;"	f
ReplaceLeftMostDelim	junk/NERD_commenter.vim	/^function s:ReplaceLeftMostDelim(toReplace, replacor, str)$/;"	f
ReplaceLeftMostDelim	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceLeftMostDelim(toReplace, replacor, str)$/;"	f
ReplaceLine	src/vimtlib/autoload/tskeleton.vim	/^function! s:ReplaceLine(col, repl) "{{{3$/;"	f
ReplaceRightMostDelim	junk/NERD_commenter.vim	/^function s:ReplaceRightMostDelim(toReplace, replacor, str)$/;"	f
ReplaceRightMostDelim	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceRightMostDelim(toReplace, replacor, str)$/;"	f
Replay	src/vimtlib/macros/spec.vim	/^command! -nargs=1 -bang Replay if empty("<bang>")$/;"	c
ResetAllSnippets	plugin/snipMate.vim	/^fun! ResetAllSnippets()$/;"	f
ResetAllSnippets	src/snipmate.vim/plugin/snipMate.vim	/^fun! ResetAllSnippets()$/;"	f
ResetBufferCacheForFiletype	src/vimtlib/autoload/tskeleton.vim	/^function! s:ResetBufferCacheForFiletype(filetype) "{{{3$/;"	f
ResetInputList	src/vimtlib/autoload/tselectfiles.vim	/^function! s:ResetInputList(world, ...) "{{{3$/;"	f
ResetKillRing	junk/vimacs-0.93.vim	/^function! <SID>ResetKillRing()$/;"	f
ResetMappings	junk/delimitMate.vim	/^function! s:ResetMappings() "{{{1$/;"	f
ResetOptions	src/vimtlib/plugin/tGpg.vim	/^function! s:ResetOptions() "{{{3$/;"	f
ResetRegisters	src/vimtlib/plugin/tGpg.vim	/^function! s:ResetRegisters() "{{{3$/;"	f
ResetSavedCursorPosition	src/vimtlib/autoload/viki.vim	/^function! s:ResetSavedCursorPosition() "{{{3$/;"	f
ResetSnippets	plugin/snipMate.vim	/^fun! ResetSnippets(ft)$/;"	f
ResetSnippets	src/snipmate.vim/plugin/snipMate.vim	/^fun! ResetSnippets(ft)$/;"	f
ResolveSIDs	src/vimtlib/autoload/spec.vim	/^fun! s:ResolveSIDs(string, ...)$/;"	f
RestartVim	bundle/session.vim/plugin/session.vim	/^command! -bang -nargs=* -complete=command RestartVim call xolox#session#restart_cmd(<q-bang>, <q-args>)$/;"	c
Restore1	src/vimtlib/autoload/tsession.vim	/^function! s:Restore1(session, ...) "{{{3$/;"	f
RestoreCmdLine	src/vimtlib/plugin/cmdlinehelp.vim	/^function! s:RestoreCmdLine() "{{{3$/;"	f
RestoreMark	junk/cecutil.vim	/^fun! RestoreMark(markname)$/;"	f
RestorePrompt	plugin/fuzzyfinder.vim	/^function! s:RestorePrompt(line, prompt)$/;"	f
RestoreRegister	junk/delimitMate.vim	/^function! s:RestoreRegister() " {{{1$/;"	f
RestoreScreenState	junk/NERD_commenter.vim	/^function s:RestoreScreenState()$/;"	f
RestoreScreenState	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RestoreScreenState()$/;"	f
RestoreUserMaps	junk/cecutil.vim	/^fun! RestoreUserMaps(suffix)$/;"	f
RestoreWinPosn	junk/cecutil.vim	/^fun! RestoreWinPosn(...)$/;"	f
Retrieve	src/vimtlib/plugin/glark.vim	/^function! s:Retrieve(field, default) "{{{3$/;"	f
RetrieveAgent_text	src/vimtlib/autoload/tskeleton.vim	/^function! s:RetrieveAgent_text(bit) "{{{3$/;"	f
RetrieveBit	src/vimtlib/autoload/tskeleton.vim	/^function! s:RetrieveBit(agent, bit, ...) "{{{3$/;"	f
ReturnAgent	src/vimtlib/plugin/tregisters.vim	/^function! s:ReturnAgent(world, selected) "{{{3$/;"	f
Revert	src/vimtlib/autoload/tbak.vim	/^fun! s:Revert(global, vers, diffs) "{{{3$/;"	f
RevertDiff	src/vimtlib/autoload/tbak.vim	/^fun! s:RevertDiff(file) "{{{3$/;"	f
RevertFile	src/vimtlib/autoload/tbak.vim	/^fun! s:RevertFile(file) "{{{3$/;"	f
RewriteFormatString	src/vimtlib/autoload/tlib/string.vim	/^function! s:RewriteFormatString(format, pattern, string) "{{{3$/;"	f
Rfgrep	junk/grep.vim	/^command! -nargs=* -complete=file Rfgrep$/;"	c
RfgrepAdd	junk/grep.vim	/^command! -nargs=* -complete=file RfgrepAdd$/;"	c
Rgrep	junk/grep.vim	/^command! -nargs=* -complete=file Rgrep$/;"	c
RgrepAdd	junk/grep.vim	/^command! -nargs=* -complete=file RgrepAdd$/;"	c
Right	autoload/tabular.vim	/^function! s:Right(string, fieldwidth)$/;"	f
Right	src/tabular/autoload/tabular.vim	/^function! s:Right(string, fieldwidth)$/;"	f
RightMostIndx	junk/NERD_commenter.vim	/^function s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
RightMostIndx	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
RmVimball	plugin/vimballPlugin.vim	/^com! -na=* -complete=dir  RmVimball   call vimball#SaveSettings()|call vimball#RmVimball(<f-args>)|call vimball#RestoreSettings()$/;"	c
RubyCex	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^function s:RubyCex(cmd)$/;"	f
Run	src/vimtlib/plugin/glark.vim	/^function! s:Run(args)$/;"	f
RunAllRubyTests	src/ruby_focused_unit_test.vim	/^command RunAllRubyTests :call <SID>RunAllRubyTests()$/;"	c
RunAllRubyTests	src/ruby_focused_unit_test.vim	/^function! s:RunAllRubyTests()$/;"	f
RunAllRubyTests	src/ruby_focused_unit_test_vim/ruby_focused_unit_test.vim	/^command RunAllRubyTests :call <SID>RunAllRubyTests()$/;"	c
RunAllRubyTests	src/ruby_focused_unit_test_vim/ruby_focused_unit_test.vim	/^function! s:RunAllRubyTests()$/;"	f
RunGrep	junk/grep.vim	/^function! s:RunGrep(cmd_name, grep_cmd, action, ...)$/;"	f
RunGrepCmd	junk/grep.vim	/^function! s:RunGrepCmd(cmd, pattern, action)$/;"	f
RunGrepRecursive	junk/grep.vim	/^function! s:RunGrepRecursive(cmd_name, grep_cmd, action, ...)$/;"	f
RunGrepSpecial	junk/grep.vim	/^function! s:RunGrepSpecial(cmd_name, which, action, ...)$/;"	f
RunHooks	src/vimtlib/autoload/hookcursormoved.vim	/^function! s:RunHooks(mode, condition) "{{{3$/;"	f
RunLastRubyTest	src/ruby_focused_unit_test.vim	/^command RunLastRubyTest :call <SID>RunLastRubyTest()$/;"	c
RunLastRubyTest	src/ruby_focused_unit_test.vim	/^function! s:RunLastRubyTest()$/;"	f
RunLastRubyTest	src/ruby_focused_unit_test_vim/ruby_focused_unit_test.vim	/^command RunLastRubyTest :call <SID>RunLastRubyTest()$/;"	c
RunLastRubyTest	src/ruby_focused_unit_test_vim/ruby_focused_unit_test.vim	/^function! s:RunLastRubyTest()$/;"	f
RunRubyFocusedContext	src/ruby_focused_unit_test.vim	/^command RunRubyFocusedContext :call <SID>RunRubyFocusedContext()$/;"	c
RunRubyFocusedContext	src/ruby_focused_unit_test.vim	/^function! s:RunRubyFocusedContext()$/;"	f
RunRubyFocusedContext	src/ruby_focused_unit_test_vim/ruby_focused_unit_test.vim	/^command RunRubyFocusedContext :call <SID>RunRubyFocusedContext()$/;"	c
RunRubyFocusedContext	src/ruby_focused_unit_test_vim/ruby_focused_unit_test.vim	/^function! s:RunRubyFocusedContext()$/;"	f
RunRubyFocusedUnitTest	src/ruby_focused_unit_test.vim	/^command RunRubyFocusedUnitTest :call <SID>RunRubyFocusedUnitTest()$/;"	c
RunRubyFocusedUnitTest	src/ruby_focused_unit_test.vim	/^function! s:RunRubyFocusedUnitTest()$/;"	f
RunRubyFocusedUnitTest	src/ruby_focused_unit_test_vim/ruby_focused_unit_test.vim	/^command RunRubyFocusedUnitTest :call <SID>RunRubyFocusedUnitTest()$/;"	c
RunRubyFocusedUnitTest	src/ruby_focused_unit_test_vim/ruby_focused_unit_test.vim	/^function! s:RunRubyFocusedUnitTest()$/;"	f
RunTests	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^function s:RunTests() "{{{1$/;"	f
Rx	src/vimtlib/autoload/trag.vim	/^function! s:Rx(rxacc, default) "{{{3$/;"	f
RxifyFilename	src/vimtlib/autoload/viki.vim	/^function! s:RxifyFilename(filename) "{{{3$/;"	f
S	bundle/vim-surround/plugin/surround.vim	/^      vmap  S    <Plug>VSurround$/;"	m
S	junk/colorize.vim	/^noremap S :highlight Normal guibg=lightyellow<cr>S$/;"	m
S	junk/surround.vim	/^            vmap  S    <Plug>VSurround$/;"	m
SCRIPT	bundle/delimitMate/Makefile	/^SCRIPT=$(wildcard plugin\/*.vim)$/;"	m
SCROLLCOLOR	plugin/scrollcolor.vim	/^command! SCROLLCOLOR :call s:ColorScroller()$/;"	c
SCROLLLOCK_ON	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SCROLLLOCK_ON = 0x0040$/;"	v
SECURITY_ATTRIBUTES	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class SECURITY_ATTRIBUTES(Structure):$/;"	c
SHELL	ruby/command-t/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHIFT_PRESSED	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SHIFT_PRESSED = 0x0010$/;"	v
SID	src/vimtlib/autoload/viki.vim	/^    function! s:SID()$/;"	f
SM	junk/cecutil.vim	/^com! -bar -nargs=1 SM	call SaveMark(<q-args>)$/;"	c
SMALL_RECT	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class SMALL_RECT(Structure):$/;"	c
SNR	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:SNR()$/;"	f
SNR	src/vimtlib/plugin/tbibtools.vim	/^fun! s:SNR()$/;"	f
SNR	src/vimtlib/plugin/tmru.vim	/^function! s:SNR()$/;"	f
SNR	src/vimtlib/plugin/tregisters.vim	/^function! s:SNR() "{{{3$/;"	f
SNR	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:SNR()$/;"	f
SPrintF	autoload/tcomment.vim	/^function! s:SPrintF(string, ...)$/;"	f
SPrintF	src/vimtlib/autoload/tcomment.vim	/^function! s:SPrintF(string, ...)$/;"	f
SRCS	ruby/command-t/Makefile	/^SRCS = ext.c match.c matcher.c$/;"	m
SSet	src/vimtlib/autoload/setsyntax.vim	/^function! s:SSet(option, value, unset_value) "{{{3$/;"	f
STARTF_FORCEOFFFEEDBACK	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_FORCEOFFFEEDBACK = 0x00000080$/;"	v
STARTF_FORCEONFEEDBACK	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_FORCEONFEEDBACK = 0x00000040$/;"	v
STARTF_PREVENTPINNING	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_PREVENTPINNING = 0x00002000$/;"	v
STARTF_RUNFULLSCREEN	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_RUNFULLSCREEN = 0x00000020$/;"	v
STARTF_TITLEISAPPID	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_TITLEISAPPID = 0x00001000$/;"	v
STARTF_TITLEISLINKNAME	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_TITLEISLINKNAME = 0x00000800$/;"	v
STARTF_USECOUNTCHARS	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_USECOUNTCHARS = 0x00000008$/;"	v
STARTF_USEFILLATTRIBUTE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_USEFILLATTRIBUTE = 0x00000010$/;"	v
STARTF_USEHOTKEY	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_USEHOTKEY = 0x00000200$/;"	v
STARTF_USEPOSITION	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_USEPOSITION = 0x00000004$/;"	v
STARTF_USESHOWWINDOW	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_USESHOWWINDOW = 0x00000001$/;"	v
STARTF_USESIZE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_USESIZE = 0x00000002$/;"	v
STARTF_USESTDHANDLES	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STARTF_USESTDHANDLES = 0x00000100$/;"	v
STARTUPINFO	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class STARTUPINFO(Structure):$/;"	c
STATIC_LIB	ruby/command-t/Makefile	/^STATIC_LIB = $/;"	m
STD_ERROR_HANDLE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STD_ERROR_HANDLE = c_ulong(-12)$/;"	v
STD_INPUT_HANDLE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STD_INPUT_HANDLE = c_ulong(-10)$/;"	v
STD_OUTPUT_HANDLE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^STD_OUTPUT_HANDLE = c_ulong(-11)$/;"	v
SWP	junk/cecutil.vim	/^com! -bar -nargs=0 SWP	call SaveWinPosn()$/;"	c
SW_FORCEMINIMIZE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_FORCEMINIMIZE = 11$/;"	v
SW_HIDE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_HIDE = 0$/;"	v
SW_MAXIMIZE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_MAXIMIZE = 3$/;"	v
SW_MINIMIZE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_MINIMIZE = 6$/;"	v
SW_RESTORE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_RESTORE = 9$/;"	v
SW_SHOW	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_SHOW = 5$/;"	v
SW_SHOWDEFAULT	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_SHOWDEFAULT = 10$/;"	v
SW_SHOWMAXIMIZED	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMAXIMIZED = 3$/;"	v
SW_SHOWMINIMIZED	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMINIMIZED = 2$/;"	v
SW_SHOWMINNOACTIVE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMINNOACTIVE = 7$/;"	v
SW_SHOWNA	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNA = 8$/;"	v
SW_SHOWNOACTIVATE	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNOACTIVATE = 4$/;"	v
SW_SHOWNORMAL	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNORMAL = 1$/;"	v
Save	src/vimtlib/autoload/setsyntax.vim	/^function! s:Save(option, unset_value) "{{{3$/;"	f
SaveBitProcess	src/vimtlib/autoload/tskeleton.vim	/^function! s:SaveBitProcess(name, match, global) "{{{3$/;"	f
SaveComments	src/vimtlib/autoload/viki.vim	/^fun! s:SaveComments(lb, le) "{{{3$/;"	f
SaveMark	junk/cecutil.vim	/^fun! SaveMark(markname)$/;"	f
SaveRegisters	src/vimtlib/plugin/tGpg.vim	/^function! s:SaveRegisters() "{{{3$/;"	f
SaveScreenState	junk/NERD_commenter.vim	/^function s:SaveScreenState()$/;"	f
SaveScreenState	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SaveScreenState()$/;"	f
SaveSession	bundle/session.vim/plugin/session.vim	/^command! -bar -bang -nargs=? -complete=customlist,xolox#session#complete_names SaveSession call xolox#session#save_cmd(<q-args>, <q-bang>)$/;"	c
SaveUserMaps	junk/cecutil.vim	/^fun! SaveUserMaps(mapmode,maplead,mapchx,suffix)$/;"	f
SaveView	src/vimtlib/autoload/hookcursormoved.vim	/^function! s:SaveView() "{{{3$/;"	f
SaveWinPosn	junk/cecutil.vim	/^fun! SaveWinPosn(...)$/;"	f
ScaleFont	src/vimtlib/plugin/scalefont.vim	/^command! -nargs=1 -complete=custom,s:ScaleFontCompleteModes ScaleFont $/;"	c
ScaleFont	src/vimtlib/plugin/scalefont.vim	/^fun! s:ScaleFont(delta) "{{{3$/;"	f
ScaleFontBigger	src/vimtlib/plugin/scalefont.vim	/^command! ScaleFontBigger  :call s:ScaleFont(1)$/;"	c
ScaleFontBuildMenu	src/vimtlib/plugin/scalefont.vim	/^fun! ScaleFontBuildMenu() "{{{3$/;"	f
ScaleFontCompleteModes	src/vimtlib/plugin/scalefont.vim	/^fun! s:ScaleFontCompleteModes(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
ScaleFontGet	src/vimtlib/plugin/scalefont.vim	/^function! ScaleFontGet(mode, ...) "{{{3$/;"	f
ScaleFontInfo	src/vimtlib/plugin/scalefont.vim	/^command! ScaleFontInfo echom "Font: ". g:scaleFontWidth ."x". g:scaleFontSize $/;"	c
ScaleFontMaximizeWindow	src/vimtlib/plugin/scalefont.vim	/^        fun! ScaleFontMaximizeWindow() "{{{3$/;"	f
ScaleFontMode	src/vimtlib/plugin/scalefont.vim	/^command! -nargs=1 -complete=custom,s:ScaleFontCompleteModes ScaleFontMode $/;"	c
ScaleFontSaveOptions	src/vimtlib/plugin/scalefont.vim	/^fun! ScaleFontSaveOptions(...) "{{{3$/;"	f
ScaleFontSet	src/vimtlib/plugin/scalefont.vim	/^function! ScaleFontSet(mode, opts) "{{{3$/;"	f
ScaleFontSetLinesCols	src/vimtlib/plugin/scalefont.vim	/^command! -nargs=* ScaleFontSetLinesCols call s:ScaleFontSetLinesCols(1, <f-args>)$/;"	c
ScaleFontSetLinesCols	src/vimtlib/plugin/scalefont.vim	/^fun! s:ScaleFontSetLinesCols(setIt, lines, cols, ...) "{{{3$/;"	f
ScaleFontSetScaledWidthSize	src/vimtlib/plugin/scalefont.vim	/^fun! s:ScaleFontSetScaledWidthSize(...) "{{{3$/;"	f
ScaleFontSetSize	src/vimtlib/plugin/scalefont.vim	/^fun! s:ScaleFontSetSize(mode, ...) "{{{3$/;"	f
ScaleFontShift	src/vimtlib/plugin/scalefont.vim	/^fun! s:ScaleFontShift(val) "{{{3$/;"	f
ScaleFontSmaller	src/vimtlib/plugin/scalefont.vim	/^command! ScaleFontSmaller :call s:ScaleFont(-1)$/;"	c
ScanHeading	src/vimtlib/ftplugin/viki.vim	/^    function! s:ScanHeading(lnum, top, vikiFolds) "{{{3$/;"	f
Scanner	ruby/command-t/scanner.rb	/^  class Scanner; end$/;"	c	class:CommandT
Screen	ruby/command-t/vim/screen.rb	/^    module Screen$/;"	m	class:CommandT.VIM
Screen	ruby/vim/screen.rb	/^  module Screen$/;"	m	class:VIM
ScrollOtherWindow	junk/vimacs-0.93.vim	/^command! ScrollOtherWindow silent! execute "normal! \\<C-w>w\\<PageDown>\\<C-w>W"$/;"	c
ScrollerHelp	plugin/scrollcolor.vim	/^function! s:ScrollerHelp()$/;"	f
SearchAgain	junk/vimacs-0.93.vim	/^function! <SID>SearchAgain()$/;"	f
SearchHead	src/vimtlib/ftplugin/viki.vim	/^    function! s:SearchHead(lnum, top) "{{{3$/;"	f
SearchKeyword	src/vimtlib/autoload/tskeleton.vim	/^function! s:SearchKeyword(filetype, pos) "{{{3$/;"	f
Select	src/vimtlib/autoload/tskeleton.vim	/^function! s:Select(text) "{{{3$/;"	f
SelectAndInsert	src/vimtlib/autoload/tskeleton.vim	/^function! s:SelectAndInsert(bit, mode) "{{{3$/;"	f
SelectBackRef	src/vimtlib/autoload/viki.vim	/^function! s:SelectBackRef(...) "{{{3$/;"	f
SelectCompletion	plugin/supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f
SelectMRU	src/vimtlib/plugin/tmru.vim	/^function! s:SelectMRU()$/;"	f
SelectThisBackRef	src/vimtlib/autoload/viki.vim	/^function! s:SelectThisBackRef(n) "{{{3$/;"	f
SelectVersion	src/vimtlib/autoload/tbak.vim	/^fun! s:SelectVersion(global) "{{{3$/;"	f
SelectWord	autoload/snipMate.vim	/^fun s:SelectWord()$/;"	f
SelectWord	src/snipmate.vim/autoload/snipMate.vim	/^fun s:SelectWord()$/;"	f
SelectedText	plugin/fuzzyfinder.vim	/^function! s:SelectedText() " by id:ka-nacht$/;"	f
SessionBegin	src/vimtlib/autoload/tsession.vim	/^function! s:SessionBegin(name) "{{{3$/;"	f
SessionComplete	src/vimtlib/plugin/tsession.vim	/^function! s:SessionComplete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
SessionEnd	src/vimtlib/autoload/tsession.vim	/^function! s:SessionEnd(name) "{{{3$/;"	f
SessionLoad	sessions/default.vim	/^let SessionLoad = 1$/;"	v
SessionName	src/vimtlib/autoload/tsession.vim	/^function! s:SessionName(name, ...) "{{{3$/;"	f
Set	bundle/vim-rails/autoload/rails.vim	/^function! s:Set(bang,...)$/;"	f
Set	junk/rails.vim	/^function! s:Set(bang,...)$/;"	f
Set	src/vimtlib/autoload/linglang.vim	/^function! s:Set(langenc) "{{{3$/;"	f
Set	src/vimtlib/autoload/setsyntax.vim	/^function! s:Set(option, value) "{{{3$/;"	f
SetAbbrWithFileAbbrData	plugin/fuzzyfinder.vim	/^function! s:SetAbbrWithFileAbbrData(item, truncated_heads, max_item_width)$/;"	f
SetBackRef	src/vimtlib/autoload/viki.vim	/^function! s:SetBackRef(file, li, co) "{{{3$/;"	f
SetBasePath	bundle/vim-rails/autoload/rails.vim	/^function! s:SetBasePath()$/;"	f
SetBasePath	junk/rails.vim	/^function! s:SetBasePath()$/;"	f
SetColor	plugin/scrollcolor.vim	/^function! s:SetColor(name)$/;"	f
SetCompletionType	plugin/supertab.vim	/^function! s:SetCompletionType()$/;"	f
SetDefaultCompletionType	plugin/supertab.vim	/^function! s:SetDefaultCompletionType()$/;"	f
SetFormattedTimeToMenu	plugin/fuzzyfinder.vim	/^function! s:SetFormattedTimeToMenu(item, format)$/;"	f
SetFormattedWordToAbbr	plugin/fuzzyfinder.vim	/^function! s:SetFormattedWordToAbbr(item, max_item_width)$/;"	f
SetHeadingMaxLevel	src/vimtlib/ftplugin/viki.vim	/^    function! s:SetHeadingMaxLevel(once) "{{{3$/;"	f
SetHeadingMaxLevelAtCurrentLine	src/vimtlib/ftplugin/viki.vim	/^    function! s:SetHeadingMaxLevelAtCurrentLine(lnum) "{{{3$/;"	f
SetIgnore	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:SetIgnore(markread)$/;"	f
SetInputListParams	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:SetInputListParams(setbuffer)$/;"	f
SetLine	src/vimtlib/autoload/tskeleton.vim	/^function! s:SetLine(mode) "{{{3$/;"	f
SetLines	autoload/tabular.vim	/^function! s:SetLines(start, len, strings)$/;"	f
SetLines	src/tabular/autoload/tabular.vim	/^function! s:SetLines(start, len, strings)$/;"	f
SetLocalOptionsForFuzzyfinder	plugin/fuzzyfinder.vim	/^function! s:SetLocalOptionsForFuzzyfinder(cwd, complete_func)$/;"	f
SetMaxLevel	src/vimtlib/ftplugin/viki.vim	/^function! s:SetMaxLevel() "{{{3$/;"	f
SetMenu	src/vimtlib/plugin/shymenu.vim	/^function! s:SetMenu(mode) "{{{3$/;"	f
SetOptDefault	bundle/vim-rails/plugin/rails.vim	/^function! s:SetOptDefault(opt,val)$/;"	f
SetOption	bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
SetOptionLabel	src/vimtlib/macros/toptions.vim	/^fun s:SetOptionLabel(option, field, value)$/;"	f
SetProcessing	src/vimtlib/autoload/tskeleton.vim	/^function! s:SetProcessing(...) "{{{3$/;"	f
SetRanks	plugin/fuzzyfinder.vim	/^function! s:SetRanks(item, eval_word, eval_base, stats)$/;"	f
SetScrollBind	src/vimtlib/autoload/tlib/file.vim	/^function! s:SetScrollBind(world) "{{{3$/;"	f
SetSyntax	src/vimtlib/plugin/setsyntax.vim	/^augroup SetSyntax$/;"	a
SetSyntax	src/vimtlib/plugin/setsyntax.vim	/^command! -nargs=+ SetSyntax call setsyntax#SetSyntax(<f-args>)$/;"	c
SetTopLine	src/vimtlib/plugin/shymenu.vim	/^function! s:SetTopLine(lineno) "{{{3$/;"	f
SetUpForNewFiletype	junk/NERD_commenter.vim	/^function s:SetUpForNewFiletype(filetype, forceReset)$/;"	f
SetUpForNewFiletype	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SetUpForNewFiletype(filetype, forceReset)$/;"	f
SetVar	src/vimtlib/autoload/tskeleton.vim	/^function! s:SetVar(var, val) "{{{3$/;"	f
Settings	ruby/command-t/settings.rb	/^  class Settings$/;"	c	class:CommandT
Should	src/vimtlib/macros/spec.vim	/^command! -nargs=1 Should$/;"	c
ShouldIndent	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:ShouldIndent(curline, prevline)$/;"	f
ShouldIndentAfter	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:ShouldIndentAfter(prevline, prevprevline)$/;"	f
ShouldOutdent	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:ShouldOutdent(curline, prevline)$/;"	f
ShouldOutdentAfter	bundle/vim-coffee-script/indent/coffee.vim	/^function! s:ShouldOutdentAfter(prevline)$/;"	f
ShowAll	ftplugin/taskpaper.vim	/^function! s:ShowAll()$/;"	f
ShowAvailableSnips	plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
ShowAvailableSnips	src/snipmate.vim/plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
ShowContext	ftplugin/taskpaper.vim	/^function! s:ShowContext()$/;"	f
ShowHelp	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:ShowHelp()$/;"	f
ShowMenu	src/vimtlib/plugin/shymenu.vim	/^function! s:ShowMenu() "{{{3$/;"	f
ShowTag	src/vimtlib/autoload/ttags.vim	/^function! s:ShowTag(world, tagline) "{{{3$/;"	f
ShyMenu	src/vimtlib/plugin/shymenu.vim	/^augroup ShyMenu$/;"	a
ShyMenu	src/vimtlib/plugin/shymenu.vim	/^function! ShyMenu(mode) "{{{3$/;"	f
ShyMenuCollect	src/vimtlib/plugin/shymenu.vim	/^function! s:ShyMenuCollect() "{{{3$/;"	f
ShyMenuInstall	src/vimtlib/plugin/shymenu.vim	/^function! s:ShyMenuInstall() "{{{3$/;"	f
SignId	src/vimtlib/autoload/tlib/signs.vim	/^function! s:SignId(item) "{{{3$/;"	f
SignId	src/vimtlib/plugin/quickfixsigns.vim	/^function! s:SignId(item) "{{{3$/;"	f
SkipDelim	junk/delimitMate.vim	/^function! s:SkipDelim(char) "{{{1$/;"	f
SkipVar	src/vimtlib/autoload/tskeleton.vim	/^function! s:SkipVar(var) "{{{3$/;"	f
SolarizedHiTrail	bundle/vim-colors-solarized/colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	bundle/vim-colors-solarized/colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	bundle/vim-colors-solarized/colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	bundle/vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
SortByFilename	src/vimtlib/autoload/tskeleton/tags.vim	/^function! s:SortByFilename(tag1, tag2)$/;"	f
SortBySource	src/vimtlib/autoload/tskeleton/tags.vim	/^function! s:SortBySource(a, b)$/;"	f
SortVar	plugin/scrollcolor.vim	/^function! s:SortVar(list, sep)$/;"	f
SpaceRemoveMappings	plugin/space.vim	/^command! SpaceRemoveMappings call <SID>remove_space_mappings()$/;"	c
SpaceRemoveMappings	src/vim-space/plugin/space.vim	/^command! SpaceRemoveMappings call <SID>remove_space_mappings()$/;"	c
Spec	src/vimtlib/plugin/spec.vim	/^command! -nargs=? -complete=file -bang Spec$/;"	c
SpecBegin	src/vimtlib/macros/spec.vim	/^command! -nargs=* SpecBegin call spec#__Begin({<args>}, expand("<sfile>:p"))$/;"	c
SpecInclude	src/vimtlib/macros/spec.vim	/^command! -nargs=1 SpecInclude call spec#Include(<args>, 0)$/;"	c
SpecInit	src/vimtlib/plugin/spec.vim	/^fun! SpecInit()$/;"	f
Split	src/vimtlib/autoload/pim.vim	/^function! s:Split() "{{{3$/;"	f
SplitArgList	src/vimtlib/autoload/trag.vim	/^function! s:SplitArgList(string, default) "{{{3$/;"	f
SplitArgs	src/vimtlib/autoload/trag.vim	/^function! s:SplitArgs(args) "{{{3$/;"	f
SplitCDeclarations	after/plugin/TabularMaps.vim	/^function! SplitCDeclarations(lines)$/;"	f
SplitCDeclarations	src/tabular/after/plugin/TabularMaps.vim	/^function! SplitCDeclarations(lines)$/;"	f
SplitCommands	plugin/Tabular.vim	/^function! s:SplitCommands(string)$/;"	f
SplitCommands	src/tabular/plugin/Tabular.vim	/^function! s:SplitCommands(string)$/;"	f
SplitDelim	autoload/tabular.vim	/^function! s:SplitDelim(string, delim)$/;"	f
SplitDelim	src/tabular/autoload/tabular.vim	/^function! s:SplitDelim(string, delim)$/;"	f
SplitFileName	src/vimtlib/autoload/pim.vim	/^function! s:SplitFileName(fname) "{{{3$/;"	f
SplitPath	plugin/fuzzyfinder.vim	/^function! s:SplitPath(path)$/;"	f
Squeeze	src/vimtlib/autoload/should/yield.vim	/^function! s:Squeeze(lines) "{{{3$/;"	f
StageDiff	plugin/fugitive.vim	/^function! s:StageDiff() abort$/;"	f
StagePatch	plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StageToggle	plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StandardOptions	src/vimtlib/plugin/tGpg.vim	/^function! s:StandardOptions()$/;"	f
StartBufExplorer	plugin/bufexplorer.vim	/^function! StartBufExplorer(open)$/;"	f
StartMarkSel	junk/vimacs-0.93.vim	/^function! <SID>StartMarkSel()$/;"	f
StartRx	autoload/tcomment.vim	/^function! s:StartRx(pos)$/;"	f
StartRx	src/vimtlib/autoload/tcomment.vim	/^function! s:StartRx(pos)$/;"	f
StartSearch	junk/vimacs-0.93.vim	/^function! <SID>StartSearch(search_dir)$/;"	f
StartShiftSel	junk/vimacs-0.93.vim	/^function! <SID>StartShiftSel()$/;"	f
StartVisualMode	junk/vimacs-0.93.vim	/^function! <SID>StartVisualMode()$/;"	f
Status	plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StopSearch	junk/vimacs-0.93.vim	/^function! <SID>StopSearch()$/;"	f
StripBackslash	src/vimtlib/autoload/viki.vim	/^function! s:StripBackslash(string) "{{{3$/;"	f
StripLeadingSpaces	autoload/tabular.vim	/^function! s:StripLeadingSpaces(string)$/;"	f
StripLeadingSpaces	src/tabular/autoload/tabular.vim	/^function! s:StripLeadingSpaces(string)$/;"	f
StripText	src/vimtlib/autoload/trag.vim	/^function! s:StripText(rec) "{{{3$/;"	f
StripTrailingSpaces	autoload/tabular.vim	/^function! s:StripTrailingSpaces(string)$/;"	f
StripTrailingSpaces	src/tabular/autoload/tabular.vim	/^function! s:StripTrailingSpaces(string)$/;"	f
Strlen	autoload/tabular.vim	/^function! s:Strlen(string)$/;"	f
Strlen	junk/Align.vim	/^fun! s:Strlen(x)$/;"	f
Strlen	src/tabular/autoload/tabular.vim	/^function! s:Strlen(string)$/;"	f
Stub	ruby/command-t/stub.rb	/^  class Stub$/;"	c	class:CommandT
Subline	src/vimtlib/autoload/tskeleton.vim	/^function! s:Subline(line, col, mode) "{{{3$/;"	f
SubstituteArgs	src/vimtlib/autoload/pim.vim	/^function! s:SubstituteArgs(...) "{{{3$/;"	f
SuffixNumber	plugin/fuzzyfinder.vim	/^function! s:SuffixNumber(str)$/;"	f
SuperTab	plugin/supertab.vim	/^function! s:SuperTab(command)$/;"	f
SuperTabAlternateCompletion	plugin/supertab.vim	/^function! SuperTabAlternateCompletion(type)$/;"	f
SuperTabHelp	plugin/supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabHelp	plugin/supertab.vim	/^function! s:SuperTabHelp()$/;"	f
SuperTabSetCompletionType	plugin/supertab.vim	/^function! SuperTabSetCompletionType(type)$/;"	f
SuperTabSetDefaultCompletionType	plugin/supertab.vim	/^function! SuperTabSetDefaultCompletionType(type)$/;"	f
Suspend	junk/vimacs-0.93.vim	/^function! <SID>Suspend()$/;"	f
Swap	src/vimtlib/plugin/tsession.vim	/^function! s:Swap(bang) "{{{3$/;"	f
SwapOutterMultiPartDelimsForPlaceHolders	junk/NERD_commenter.vim	/^function s:SwapOutterMultiPartDelimsForPlaceHolders(line)$/;"	f
SwapOutterMultiPartDelimsForPlaceHolders	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterMultiPartDelimsForPlaceHolders(line)$/;"	f
SwapOutterPlaceHoldersForMultiPartDelims	junk/NERD_commenter.vim	/^function s:SwapOutterPlaceHoldersForMultiPartDelims(line)$/;"	f
SwapOutterPlaceHoldersForMultiPartDelims	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterPlaceHoldersForMultiPartDelims(line)$/;"	f
SwitchAutoclose	junk/delimitMate.vim	/^function! s:SwitchAutoclose() "{{{1$/;"	f
SwitchElse	src/vimtlib/autoload/tskeleton.vim	/^function! s:SwitchElse()$/;"	f
SwitchElseif	src/vimtlib/autoload/tskeleton.vim	/^function! s:SwitchElseif(text)$/;"	f
SwitchEndif	src/vimtlib/autoload/tskeleton.vim	/^function! s:SwitchEndif()$/;"	f
SwitchIf	src/vimtlib/autoload/tskeleton.vim	/^function! s:SwitchIf(text)$/;"	f
SwitchToAlternativeDelimiters	junk/NERD_commenter.vim	/^function s:SwitchToAlternativeDelimiters(printMsgs)$/;"	f
SwitchToAlternativeDelimiters	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwitchToAlternativeDelimiters(printMsgs)$/;"	f
SwitchToBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! s:SwitchToBuffer(world, buffer, ...)$/;"	f
SynId	src/vimtlib/autoload/hookcursormoved.vim	/^function! s:SynId(mode, pos) "{{{3$/;"	f
T	plugin/space.vim	/^    noremap <expr> <silent> T <SID>setup_space("char", "T")$/;"	m
T	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> T <SID>setup_space("char", "T")$/;"	m
TARGET	ruby/command-t/Makefile	/^TARGET = ext$/;"	m
TARGET_SO	ruby/command-t/Makefile	/^TARGET_SO     = $(DLLIB)$/;"	m
TAssert	src/vimtlib/plugin/07tassert.vim	/^    command! -nargs=1 -bang -bar TAssert $/;"	c
TAssert	src/vimtlib/plugin/07tassert.vim	/^    command! -nargs=1 -bang -bar TAssert :$/;"	c
TAssertComment	src/vimtlib/plugin/07tassert.vim	/^    command! -range=% -bar -bang TAssertComment call tassert#Comment(<line1>, <line2>, "<bang>")$/;"	c
TAssertType	src/vimtlib/plugin/07tassert.vim	/^    command! -nargs=+ -bang -bar TAssertType :$/;"	c
TAssertType	src/vimtlib/plugin/07tassert.vim	/^    command! -nargs=+ -bang -bar TAssertType TAssert<bang> IsA(<args>)$/;"	c
TAssertUncomment	src/vimtlib/plugin/07tassert.vim	/^    command! -range=% -bar -bang TAssertUncomment call tassert#Uncomment(<line1>, <line2>, "<bang>")$/;"	c
TBak	src/vimtlib/plugin/tbak.vim	/^command! -bang -bar TBak call tbak#TBak("<bang>")$/;"	c
TBakBuffer	src/vimtlib/autoload/tbak.vim	/^fun! s:TBakBuffer(cmd) "{{{3$/;"	f
TBakCleanup	src/vimtlib/plugin/tbak.vim	/^command! -bar -bang -nargs=? TBakCleanup call tbak#TBakCleanup(<q-args>, "<bang>")$/;"	c
TBakDiff	src/vimtlib/plugin/tbak.vim	/^command! -bar -bang -nargs=? TBakDiff call tbak#TBakView(<q-args>, "<bang>")$/;"	c
TBakRevert	src/vimtlib/plugin/tbak.vim	/^command! -bar -bang -nargs=? TBakRevert call tbak#TBakRevert(<q-args>, "<bang>")$/;"	c
TBakView	src/vimtlib/plugin/tbak.vim	/^command! -bar -bang -nargs=? TBakView call tbak#TBakView(<q-args>, "<bang>")$/;"	c
TBibList	src/vimtlib/plugin/tbibtools.vim	/^command! -nargs=? -bang -bar TBibList call s:TBibList("<bang>", <q-args>)$/;"	c
TBibList	src/vimtlib/plugin/tbibtools.vim	/^fun! s:TBibList(bang, args)$/;"	f
TBibTools	src/vimtlib/plugin/tbibtools.vim	/^command! -range=% -nargs=? -bar TBibTools ruby$/;"	c
TBibTools	src/vimtlib/ruby/tbibtools.rb	/^class TBibTools$/;"	c
TBrowseOutput	src/vimtlib/plugin/02tlib.vim	/^command! -nargs=1 -complete=command TBrowseOutput call tlib#cmd#BrowseOutput(<q-args>)$/;"	c
TCalc	src/vimtlib/plugin/tcalc.vim	/^command! -bang -nargs=* -bar TCalc call tcalc#Calculator(!empty('<bang>'), <q-args>)$/;"	c
TCalc	src/vimtlib/ruby/tcalc.rb	/^class TCalc::Base$/;"	c
TCalc	src/vimtlib/ruby/tcalc.rb	/^class TCalc::CommandLine < TCalc::Base$/;"	c
TCalc	src/vimtlib/ruby/tcalc.rb	/^class TCalc::Curses < TCalc::CommandLine$/;"	c
TCalc	src/vimtlib/ruby/tcalc.rb	/^class TCalc::VIM < TCalc::Base$/;"	c
TCalc	src/vimtlib/ruby/tcalc.rb	/^module TCalc$/;"	m
TComment	plugin/tComment.vim	/^command! -bang -range -nargs=* TComment keepjumps call tcomment#Comment(<line1>, <line2>, 'G', "<bang>", <f-args>)$/;"	c
TComment	src/vimtlib/plugin/tComment.vim	/^command! -bang -range -nargs=* TComment keepjumps call tcomment#Comment(<line1>, <line2>, 'G', "<bang>", <f-args>)$/;"	c
TCommentAs	plugin/tComment.vim	/^command! -bang -complete=customlist,tcomment#FileTypes -range -nargs=+ TCommentAs $/;"	c
TCommentAs	src/vimtlib/plugin/tComment.vim	/^command! -bang -complete=customlist,tcomment#FileTypes -range -nargs=+ TCommentAs $/;"	c
TCommentBlock	plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentBlock keepjumps call tcomment#Comment(<line1>, <line2>, 'B', "<bang>", <f-args>)$/;"	c
TCommentBlock	src/vimtlib/plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentBlock keepjumps call tcomment#Comment(<line1>, <line2>, 'B', "<bang>", <f-args>)$/;"	c
TCommentDefineType	plugin/tComment.vim	/^function! TCommentDefineType(name, commentstring)$/;"	f
TCommentDefineType	src/vimtlib/plugin/tComment.vim	/^function! TCommentDefineType(name, commentstring)$/;"	f
TCommentInline	plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentInline keepjumps call tcomment#Comment(<line1>, <line2>, 'I', "<bang>", <f-args>)$/;"	c
TCommentInline	src/vimtlib/plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentInline keepjumps call tcomment#Comment(<line1>, <line2>, 'I', "<bang>", <f-args>)$/;"	c
TCommentMaybeInline	plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentMaybeInline keepjumps call tcomment#Comment(<line1>, <line2>, 'i', "<bang>", <f-args>)$/;"	c
TCommentMaybeInline	src/vimtlib/plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentMaybeInline keepjumps call tcomment#Comment(<line1>, <line2>, 'i', "<bang>", <f-args>)$/;"	c
TCommentRight	plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentRight keepjumps call tcomment#Comment(<line1>, <line2>, 'R', "<bang>", <f-args>)$/;"	c
TCommentRight	src/vimtlib/plugin/tComment.vim	/^command! -bang -range -nargs=* TCommentRight keepjumps call tcomment#Comment(<line1>, <line2>, 'R', "<bang>", <f-args>)$/;"	c
TCommentTypeExists	plugin/tComment.vim	/^function! TCommentTypeExists(name)$/;"	f
TCommentTypeExists	src/vimtlib/plugin/tComment.vim	/^function! TCommentTypeExists(name)$/;"	f
TERMINATOR	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    TERMINATOR = None$/;"	v	class:ConqueSoleSharedMemory
TESTS	bundle/delimitMate/Makefile	/^TESTS=$(wildcard autoload\/*Tests.vim)$/;"	m
TEchoPair	src/vimtlib/plugin/tEchoPair.vim	/^augroup TEchoPair$/;"	a
TEchoPair	src/vimtlib/plugin/tEchoPair.vim	/^command! -nargs=+ -bar TEchoPair call tEchoPair#Echo(<args>)$/;"	c
TEchoPairInstallBuffer	src/vimtlib/plugin/tEchoPair.vim	/^command! TEchoPairInstallBuffer call tEchoPair#Install('')$/;"	c
TEchoSkip	src/vimtlib/plugin/tEchoPair.vim	/^fun! TEchoSkip()$/;"	f
TGpgRead	src/vimtlib/plugin/tGpg.vim	/^function! s:TGpgRead(parms, range) "{{{3$/;"	f
TGpgResetCache	src/vimtlib/plugin/tGpg.vim	/^command! TGpgResetCache let s:heights = {}$/;"	c
TGpgUserInput_B_OPTIONS	src/vimtlib/plugin/tGpg.vim	/^function! s:TGpgUserInput_B_OPTIONS(parms) "{{{3$/;"	f
TGpgUserInput_GPG	src/vimtlib/plugin/tGpg.vim	/^function! s:TGpgUserInput_GPG(parms) "{{{3$/;"	f
TGpgUserInput_G_OPTIONS	src/vimtlib/plugin/tGpg.vim	/^function! s:TGpgUserInput_G_OPTIONS(parms) "{{{3$/;"	f
TGpgUserInput_PASSPHRASE	src/vimtlib/plugin/tGpg.vim	/^function! s:TGpgUserInput_PASSPHRASE(parms) "{{{3$/;"	f
TGpgUserInput_RECIPIENTS	src/vimtlib/plugin/tGpg.vim	/^function! s:TGpgUserInput_RECIPIENTS(parms) "{{{3$/;"	f
TGpgWrite	src/vimtlib/plugin/tGpg.vim	/^function! s:TGpgWrite(parms) "{{{3$/;"	f
TGpgWrite_clearsign	src/vimtlib/plugin/tGpg.vim	/^function! s:TGpgWrite_clearsign(parms) "{{{3$/;"	f
TKeyArg	src/vimtlib/plugin/02tlib.vim	/^command! -nargs=+ TKeyArg exec tlib#arg#Key([<args>])$/;"	c
TLet	src/vimtlib/plugin/02tlib.vim	/^command! -nargs=+ TLet if !exists(matchstr(<q-args>, '^[^=[:space:]]\\+')) | exec 'let '. <q-args> | endif$/;"	c
TLib	src/vimtlib/autoload/tlib/autocmdgroup.vim	/^augroup TLib$/;"	a
TLog	src/vimtlib/plugin/05tlog.vim	/^command! -nargs=+ TLog call tlog#Log(<args>)$/;"	c
TLogBufferOff	src/vimtlib/plugin/05tlog.vim	/^command! -bar -nargs=? TLogBufferOff let b:TLOG = ''$/;"	c
TLogBufferOn	src/vimtlib/plugin/05tlog.vim	/^command! -bar -nargs=? TLogBufferOn let b:TLOG = empty(<q-args>) ? g:tlogDefault : <q-args>$/;"	c
TLogComment	src/vimtlib/plugin/05tlog.vim	/^command! -range=% -bar TLogComment call tlog#Comment(<line1>, <line2>)$/;"	c
TLogDBG	src/vimtlib/plugin/05tlog.vim	/^command! -nargs=1 TLogDBG call tlog#Debug(expand('<sfile>').': '. <args>)$/;"	c
TLogExec	src/vimtlib/plugin/05tlog.vim	/^command! -nargs=1 TLogExec exec <q-args>$/;"	c
TLogOff	src/vimtlib/plugin/05tlog.vim	/^command! -bar -nargs=? TLogOff let g:TLOG = ''$/;"	c
TLogOn	src/vimtlib/plugin/05tlog.vim	/^command! -bar -nargs=? TLogOn let g:TLOG = empty(<q-args>) ? g:tlogDefault : <q-args>$/;"	c
TLogStyle	src/vimtlib/plugin/05tlog.vim	/^command! -nargs=+ TLogStyle call tlog#Style(<args>)$/;"	c
TLogTODO	src/vimtlib/plugin/05tlog.vim	/^command! -nargs=* -bar TLogTODO call tlog#Debug(expand('<sfile>').': Not yet implemented '. <q-args>)$/;"	c
TLogUncomment	src/vimtlib/plugin/05tlog.vim	/^command! -range=% -bar TLogUncomment call tlog#Uncomment(<line1>, <line2>)$/;"	c
TLogVAR	src/vimtlib/plugin/05tlog.vim	/^command! -nargs=+ TLogVAR call tlog#Var(expand('<sfile>'), <q-args>, <args>)$/;"	c
TMBoxBrowser	src/vimtlib/plugin/tmboxbrowser.vim	/^command! -bang -bar -nargs=? -complete=file TMBoxBrowser call tmboxbrowser#TMBoxBrowse("<bang>", <q-args>)$/;"	c
TMBoxSelect	src/vimtlib/plugin/tmboxbrowser.vim	/^command! -bang -bar TMBoxSelect call tmboxbrowser#TMBoxSelect("<bang>")$/;"	c
TMarks	src/vimtlib/plugin/tmarks.vim	/^command! -bar TMarks call tmarks#List()$/;"	c
TMarksDelete	src/vimtlib/plugin/tmarks.vim	/^command! -range -nargs=? -bar TMarksDelete call tmarks#DeleteInRange(<line1>, <line2>)$/;"	c
TMarksDeleteAll	src/vimtlib/plugin/tmarks.vim	/^command! -bar TMarksDeleteAll call tmarks#DeleteAllMarks()$/;"	c
TMarksPlace	src/vimtlib/plugin/tmarks.vim	/^command! -range -nargs=? -bar TMarksPlace call tmarks#PlaceNextMarkAtLine(<line1>)$/;"	c
TOptionsSummary	src/vimtlib/macros/toptions.vim	/^fun! TOptionsSummary(...)$/;"	f
TRag	src/vimtlib/plugin/trag.vim	/^command! -nargs=1 -bang -bar TRag TRagsearch<bang> <args> | TRagcw$/;"	c
TRagDefFiletype	src/vimtlib/plugin/trag.vim	/^command! -nargs=+ TRagDefFiletype for e in [<f-args>][1:-1] | let g:trag_filenames[e] = [<f-args>][0] | endfor$/;"	c
TRagDefKind	src/vimtlib/plugin/trag.vim	/^command! -nargs=1 TRagDefKind call s:TRagDefKind(<q-args>)$/;"	c
TRagDefKind	src/vimtlib/plugin/trag.vim	/^function! s:TRagDefKind(args) "{{{3$/;"	f
TRagGitFiles	src/vimtlib/plugin/trag.vim	/^command! -nargs=1 -bar -complete=dir TRagGitFiles call trag#SetGitFiles(<q-args>)$/;"	c
TRagKeyword	src/vimtlib/plugin/trag.vim	/^command! -nargs=+ TRagKeyword if len([<f-args>]) == 2$/;"	c
TRagaddfiles	src/vimtlib/plugin/trag.vim	/^command! -nargs=1 -bar -complete=file TRagaddfiles call trag#AddFiles(<args>)$/;"	c
TRagclearfiles	src/vimtlib/plugin/trag.vim	/^command! TRagclearfiles call trag#ClearFiles()$/;"	c
TRagcw	src/vimtlib/plugin/trag.vim	/^command! -nargs=? TRagcw call trag#QuickList()$/;"	c
TRagfile	src/vimtlib/plugin/trag.vim	/^command! TRagfile call trag#Edit()$/;"	c
TRaggrep	src/vimtlib/plugin/trag.vim	/^command! -nargs=+ -bang -bar -complete=file TRaggrep$/;"	c
TRagsearch	src/vimtlib/plugin/trag.vim	/^command! -nargs=1 -bang -bar TRagsearch call trag#Grep(<q-args>, empty("<bang>"))$/;"	c
TRagsetfiles	src/vimtlib/plugin/trag.vim	/^command! -nargs=? -bar -complete=file TRagsetfiles call trag#SetFiles(<args>)$/;"	c
TRecentlyUsedFiles	src/vimtlib/plugin/tmru.vim	/^command! TRecentlyUsedFiles call s:SelectMRU()$/;"	c
TRecentlyUsedFilesEdit	src/vimtlib/plugin/tmru.vim	/^command! TRecentlyUsedFilesEdit call s:EditMRU()$/;"	c
TRegisters	src/vimtlib/plugin/tregisters.vim	/^command! TRegisters call TRegisters()$/;"	c
TRegisters	src/vimtlib/plugin/tregisters.vim	/^function! TRegisters() "{{{3$/;"	f
TRequire	src/vimtlib/plugin/02tlib.vim	/^command! -nargs=+ TRequire let s:require = [<f-args>]$/;"	c
TResetOptions	src/vimtlib/macros/toptions.vim	/^command! -nargs=* -bar TResetOptions :call TResetOptions([<f-args>])$/;"	c
TResetOptions	src/vimtlib/macros/toptions.vim	/^fun! TResetOptions(options)$/;"	f
TScratch	src/vimtlib/plugin/02tlib.vim	/^command! -bar -nargs=* -bang TScratch call tlib#scratch#UseScratch({'scratch_split': '<bang>' != '!', <args>})$/;"	c
TSelectBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^command! -count=0 -bang TSelectBuffer call TSelectBuffer(!empty("<bang>") || v:count)$/;"	c
TSelectBuffer	src/vimtlib/plugin/tselectbuffer.vim	/^function! TSelectBuffer(show_hidden)$/;"	f
TSelectFiles	src/vimtlib/plugin/tselectfiles.vim	/^command! -bang -nargs=* -complete=dir TSelectFiles call tselectfiles#SelectFiles("normal<bang>".v:count, <f-args>)$/;"	c
TSelectFilesInSubdirs	src/vimtlib/plugin/tselectfiles.vim	/^command! -bang -nargs=* -complete=dir TSelectFilesInSubdirs call tselectfiles#SelectFiles("recursive<bang>".v:count, <f-args>)$/;"	c
TSession	src/vimtlib/plugin/tsession.vim	/^command! -bang -bar TSession$/;"	c
TSessionLoad	src/vimtlib/plugin/tsession.vim	/^            \\ TSessionLoad call tsession#Load(<q-args>, {'swap': s:Swap('<bang>')})$/;"	c
TSessionSave	src/vimtlib/plugin/tsession.vim	/^            \\ TSessionSave call tsession#Save(<q-args>)$/;"	c
TSet	src/vimtlib/macros/toptions.vim	/^command! -nargs=+ TSet let s:tmlargs=[<f-args>] $/;"	c
TSkelMenuCachePostWriteHook	src/vimtlib/plugin/TortoiseSVN.vim	/^fun! TSkelMenuCachePostWriteHook()$/;"	f
TSkelNewScratchHook_viki	src/vimtlib/plugin/tSkeleton.vim	/^function! TSkelNewScratchHook_viki()$/;"	f
TSkeletonBit	src/vimtlib/plugin/tSkeleton.vim	/^command! -nargs=? -complete=custom,tskeleton#SelectBit TSkeletonBit$/;"	c
TSkeletonBitReset	src/vimtlib/plugin/tSkeleton.vim	/^command! -bar -nargs=? TSkeletonBitReset call tskeleton#ResetBits(<q-args>)$/;"	c
TSkeletonCB_DIRNAME	src/vimtlib/plugin/tSkeleton.vim	/^function! TSkeletonCB_DIRNAME() "{{{3$/;"	f
TSkeletonCB_FILENAME	src/vimtlib/plugin/tSkeleton.vim	/^function! TSkeletonCB_FILENAME() "{{{3$/;"	f
TSkeletonCleanUpBibEntry	src/vimtlib/plugin/tSkeleton.vim	/^command! TSkeletonCleanUpBibEntry call tskeleton#CleanUpBibEntry()$/;"	c
TSkeletonEdit	src/vimtlib/plugin/tSkeleton.vim	/^command! -nargs=? -complete=custom,tskeleton#SelectTemplate TSkeletonEdit $/;"	c
TSkeletonEditBit	src/vimtlib/plugin/tSkeleton.vim	/^command! -nargs=? -complete=customlist,tskeleton#EditBitCompletion TSkeletonEditBit $/;"	c
TSkeletonMapGoToNextTag	src/vimtlib/plugin/tSkeleton.vim	/^function! TSkeletonMapGoToNextTag() "{{{3$/;"	f
TSkeletonMapHyperComplete	src/vimtlib/plugin/tSkeleton.vim	/^function! TSkeletonMapHyperComplete(key, ...) "{{{3$/;"	f
TSkeletonNewFile	src/vimtlib/plugin/tSkeleton.vim	/^command! -nargs=* -complete=custom,tskeleton#SelectTemplate TSkeletonNewFile $/;"	c
TSkeletonSetup	src/vimtlib/plugin/tSkeleton.vim	/^command! -nargs=* -complete=custom,tskeleton#SelectTemplate TSkeletonSetup $/;"	c
TSkeletonTemplate	src/vimtlib/autoload/ttagcomplete.vim	/^function! s:TSkeletonTemplate(kinds, tag, restarg) "{{{3$/;"	f
TSkeleton_AUTHOR	src/vimtlib/plugin/tSkeleton.vim	/^    function! TSkeleton_AUTHOR() "{{{3$/;"	f
TSkeleton_DATE	src/vimtlib/plugin/tSkeleton.vim	/^    function! TSkeleton_DATE() "{{{3$/;"	f
TSkeleton_EMAIL	src/vimtlib/plugin/tSkeleton.vim	/^    function! TSkeleton_EMAIL() "{{{3$/;"	f
TSkeleton_FILE_DIRNAME	src/vimtlib/plugin/tSkeleton.vim	/^    function! TSkeleton_FILE_DIRNAME() "{{{3$/;"	f
TSkeleton_FILE_NAME	src/vimtlib/plugin/tSkeleton.vim	/^    function! TSkeleton_FILE_NAME() "{{{3$/;"	f
TSkeleton_FILE_NAME_ROOT	src/vimtlib/plugin/tSkeleton.vim	/^    function! TSkeleton_FILE_NAME_ROOT() "{{{3$/;"	f
TSkeleton_FILE_SUFFIX	src/vimtlib/plugin/tSkeleton.vim	/^    function! TSkeleton_FILE_SUFFIX() "{{{3$/;"	f
TSkeleton_LICENSE	src/vimtlib/plugin/tSkeleton.vim	/^    function! TSkeleton_LICENSE() "{{{3$/;"	f
TSkeleton_NOTE	src/vimtlib/plugin/tSkeleton.vim	/^    function! TSkeleton_NOTE() "{{{3$/;"	f
TSkeleton_TIME	src/vimtlib/plugin/tSkeleton.vim	/^    function! TSkeleton_TIME() "{{{3$/;"	f
TSkeleton_WEBSITE	src/vimtlib/plugin/tSkeleton.vim	/^    function! TSkeleton_WEBSITE() "{{{3$/;"	f
TStatus	src/vimtlib/plugin/tstatus.vim	/^command! -bang TStatus let statussel=empty("<bang>")$/;"	c
TTagCompleteOff	src/vimtlib/plugin/ttagcomplete.vim	/^command! -nargs=* TTagCompleteOff call ttagcomplete#Off(<f-args>)$/;"	c
TTagCompleteOn	src/vimtlib/plugin/ttagcomplete.vim	/^command! -nargs=* TTagCompleteOn  call ttagcomplete#On(<f-args>)$/;"	c
TTagecho	src/vimtlib/plugin/ttagecho.vim	/^augroup TTagecho$/;"	a
TTagecho	src/vimtlib/plugin/ttagecho.vim	/^command! -bang -nargs=1 -bar TTagecho call ttagecho#Echo(<q-args>, 0, !empty('<bang>'))$/;"	c
TTagechoAll	src/vimtlib/plugin/ttagecho.vim	/^command! -bang -nargs=1 -bar TTagechoAll call ttagecho#Echo(<q-args>, -1, !empty('<bang>'))$/;"	c
TTagechoWord	src/vimtlib/plugin/ttagecho.vim	/^command! -bang TTagechoWord call ttagecho#EchoWord(!empty('<bang>'))$/;"	c
TTagechoWords	src/vimtlib/plugin/ttagecho.vim	/^command! -bang TTagechoWords call ttagecho#EchoWords(!empty('<bang>'))$/;"	c
TTags	src/vimtlib/plugin/ttags.vim	/^command! -nargs=* -bang TTags call ttags#List(!empty('<bang>'), <f-args>)$/;"	c
TTagselect	src/vimtlib/plugin/ttags.vim	/^command! -nargs=* -bang TTagselect call ttags#Select(!empty('<bang>'), <q-args>)$/;"	c
TToC	src/vimtlib/plugin/ttoc.vim	/^augroup TToC$/;"	a
TToC	src/vimtlib/plugin/ttoc.vim	/^command! -nargs=? -bang -count TToC call ttoc#View(<q-args>, !empty("<bang>"), v:count, <count>)$/;"	c
TToC_GetLine_bib	src/vimtlib/plugin/ttoc.vim	/^function! TToC_GetLine_bib(lnum, acc) "{{{3$/;"	f
TToC_GetLine_viki	src/vimtlib/plugin/ttoc.vim	/^function! TToC_GetLine_viki(lnum, acc) "{{{3$/;"	f
TVarArg	src/vimtlib/plugin/02tlib.vim	/^command! -nargs=+ TVarArg exec tlib#arg#Let([<args>])$/;"	c
TVimTools	src/vimtlib/ruby/tvimtools.rb	/^class TVimTools$/;"	c
TabSpace	junk/NERD_commenter.vim	/^function s:TabSpace()$/;"	f
TabSpace	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabSpace()$/;"	f
TabbedCol	junk/NERD_commenter.vim	/^function s:TabbedCol(line, col)$/;"	f
TabbedCol	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabbedCol(line, col)$/;"	f
TableGet	src/vimtlib/plugin/cmdlinehelp.vim	/^function! s:TableGet(tag, default) "{{{3$/;"	f
Tabularize	plugin/Tabular.vim	/^   \\ Tabularize <line1>,<line2>call Tabularize(<q-args>)$/;"	c
Tabularize	plugin/Tabular.vim	/^function! Tabularize(command) range$/;"	f
Tabularize	src/tabular/plugin/Tabular.vim	/^   \\ Tabularize <line1>,<line2>call Tabularize(<q-args>)$/;"	c
Tabularize	src/tabular/plugin/Tabular.vim	/^function! Tabularize(command) range$/;"	f
TagExists	src/vimtlib/plugin/cmdlinehelp.vim	/^function! s:TagExists(tag) "{{{3$/;"	f
TagList_IsValid	junk/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	junk/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	junk/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	junk/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagSelect	src/vimtlib/autoload/tskeleton.vim	/^function! s:TagSelect(chars, mode) "{{{3$/;"	f
TakeTime	src/vimtlib/spec/spec/should_finish.vim	/^function! TakeTime(n) "{{{3$/;"	f
TassertTest	src/vimtlib/autoload/should/test.vim	/^fun! s:TassertTest(a)$/;"	f
TemplateValue	src/vimtlib/plugin/tGpg.vim	/^function! s:TemplateValue(label) "{{{3$/;"	f
TemporaryLet	src/vimtlib/autoload/tskeleton.vim	/^function! s:TemporaryLet(var, val) "{{{3$/;"	f
TestArgs	src/vimtlib/test/tlib.vim	/^function! TestArgs(...) "{{{3$/;"	f
TestArgs1	src/vimtlib/test/tlib.vim	/^function! TestArgs1(...) "{{{3$/;"	f
TestArgs2	src/vimtlib/test/tlib.vim	/^function! TestArgs2(...) "{{{3$/;"	f
TestArgs3	src/vimtlib/test/tlib.vim	/^function! TestArgs3(...)$/;"	f
TestGetArg	src/vimtlib/test/tlib.vim	/^function! TestGetArg(...) "{{{3$/;"	f
TestGetArg1	src/vimtlib/test/tlib.vim	/^function! TestGetArg1(...) "{{{3$/;"	f
TestMappings	junk/delimitMate.vim	/^function! s:TestMappings() "{{{1$/;"	f
TestMappingsDo	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:TestMappingsDo() "{{{$/;"	f
TestMappingsDo	junk/delimitMate.vim	/^function! s:TestMappingsDo() "{{{1$/;"	f
TheCWord	bundle/vim-rails/autoload/rails.vim	/^function! s:TheCWord()$/;"	f
TheCWord	junk/rails.vim	/^function! s:TheCWord()$/;"	f
Tlist	junk/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	junk/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	junk/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	junk/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	junk/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	junk/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	junk/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	junk/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	junk/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	junk/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	junk/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	junk/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	junk/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	junk/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	junk/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	junk/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	junk/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	junk/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	junk/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	junk/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	junk/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	junk/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	junk/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	junk/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	junk/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	junk/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	junk/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	junk/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	junk/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	junk/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	junk/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	junk/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	junk/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	junk/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	junk/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	junk/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	junk/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	junk/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	junk/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	junk/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	junk/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	junk/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	junk/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	junk/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	junk/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	junk/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	junk/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	junk/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	junk/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	junk/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	junk/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	junk/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Tag_Linenum	junk/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	junk/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	junk/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_SearchPat	junk/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	junk/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	junk/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	junk/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	junk/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	junk/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	junk/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	junk/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	junk/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	junk/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	junk/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	junk/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	junk/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	junk/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	junk/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	junk/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	junk/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	junk/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	junk/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	junk/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	junk/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	junk/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	junk/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	junk/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	junk/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	junk/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	junk/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	junk/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	junk/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	junk/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	junk/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	junk/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	junk/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	junk/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	junk/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	junk/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	junk/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	junk/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	junk/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	junk/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	junk/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	junk/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	junk/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	junk/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	junk/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	junk/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	junk/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	junk/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	junk/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	junk/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	junk/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	junk/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	junk/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	junk/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	junk/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	junk/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	junk/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	junk/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	junk/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	junk/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	junk/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	junk/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	junk/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	junk/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	junk/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	junk/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	junk/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	junk/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	junk/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	junk/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	junk/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	junk/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	junk/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
ToBeInitialized	src/vimtlib/autoload/tskeleton.vim	/^function! s:ToBeInitialized(list, filetype) "{{{3$/;"	f
TogBG	bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! s:TogBG()$/;"	f
ToggleBG	bundle/vim-colors-solarized/autoload/togglebg.vim	/^    command ToggleBG :call s:TogBG()$/;"	c
ToggleBackground	bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! ToggleBackground()$/;"	f
ToggleDone	ftplugin/taskpaper.vim	/^function! s:ToggleDone()$/;"	f
TooManyEntries	ruby/fuzzy_file_finder.rb	/^  class TooManyEntries < RuntimeError; end$/;"	c	class:FuzzyFileFinder
ToolBar.togglebg	bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>a$/;"	m
ToolBar.togglebg	bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> ToolBar.togglebg <SID>TogBG$/;"	m
ToolBar.togglebg	bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>gv$/;"	m
TortoiseExec	src/vimtlib/plugin/TortoiseSVN.vim	/^fun! TortoiseExec(command, ...)$/;"	f
TortoiseSvnBrowser	src/vimtlib/plugin/TortoiseSVN.vim	/^command! TortoiseSvnBrowser       :call TortoiseExec('repobrowser')$/;"	c
TortoiseSvnCheckout	src/vimtlib/plugin/TortoiseSVN.vim	/^command! TortoiseSvnCheckout      :call TortoiseExec('checkout')$/;"	c
TortoiseSvnCommit	src/vimtlib/plugin/TortoiseSVN.vim	/^command! TortoiseSvnCommit        :call TortoiseExec('commit')$/;"	c
TortoiseSvnLog	src/vimtlib/plugin/TortoiseSVN.vim	/^command! TortoiseSvnLog           :call TortoiseExec('log')$/;"	c
TortoiseSvnMaybeCommitBuffers	src/vimtlib/plugin/TortoiseSVN.vim	/^fun! TortoiseSvnMaybeCommitBuffers()$/;"	f
TortoiseSvnMaybeCommitThisBuffer	src/vimtlib/plugin/TortoiseSVN.vim	/^fun! TortoiseSvnMaybeCommitThisBuffer(...)$/;"	f
TortoiseSvnRevisionGraph	src/vimtlib/plugin/TortoiseSVN.vim	/^command! TortoiseSvnRevisionGraph :call TortoiseExec('revisiongraph')$/;"	c
TortoiseSvnUpdate	src/vimtlib/plugin/TortoiseSVN.vim	/^command! TortoiseSvnUpdate        :call TortoiseExec('update', '\/rev')$/;"	c
Trag	src/vimtlib/plugin/trag.vim	/^command! -nargs=1 -bang -bar Trag TRag<bang> <args>$/;"	c
Tragcw	src/vimtlib/plugin/trag.vim	/^command! -nargs=? Tragcw call trag#QuickList()$/;"	c
Tragfile	src/vimtlib/plugin/trag.vim	/^command! Tragfile call trag#Edit()$/;"	c
Traggrep	src/vimtlib/plugin/trag.vim	/^command! -nargs=+ -bang -bar -complete=file Traggrep TRaggrep<bang> <args>$/;"	c
Traglw	src/vimtlib/plugin/trag.vim	/^command! -nargs=? Traglw call trag#LocList()$/;"	c
Tragsearch	src/vimtlib/plugin/trag.vim	/^command! -nargs=1 -bang -bar Tragsearch TRagsearch<bang> <args>$/;"	c
TreeDirNode.AbsoluteTreeRoot	plugin/NERD_tree.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.AbsoluteTreeRoot	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	plugin/NERD_tree.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.GetSelected	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	plugin/NERD_tree.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode.New	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	plugin/NERD_tree.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._initChildren	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openRecursively2	plugin/NERD_tree.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode._openRecursively2	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	plugin/NERD_tree.vim	/^function! s:TreeDirNode.activate(forceKeepWinOpen)$/;"	f
TreeDirNode.activate	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.activate(forceKeepWinOpen)$/;"	f
TreeDirNode.addChild	plugin/NERD_tree.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.addChild	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	plugin/NERD_tree.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.close	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	plugin/NERD_tree.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.closeChildren	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	plugin/NERD_tree.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.createChild	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	plugin/NERD_tree.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.findNode	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChild	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildByIndex	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildCount	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getChildIndex	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildCount	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.getVisibleChildren	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	plugin/NERD_tree.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	plugin/NERD_tree.vim	/^function! s:TreeDirNode.open()$/;"	f
TreeDirNode.open	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.open()$/;"	f
TreeDirNode.openExplorer	plugin/NERD_tree.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openExplorer	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	plugin/NERD_tree.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openInNewTab	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	plugin/NERD_tree.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.openRecursively	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	plugin/NERD_tree.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refresh	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	plugin/NERD_tree.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.removeChild	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	plugin/NERD_tree.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.reveal	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	plugin/NERD_tree.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.sortChildren	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	plugin/NERD_tree.vim	/^function! s:TreeDirNode.toggleOpen()$/;"	f
TreeDirNode.toggleOpen	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.toggleOpen()$/;"	f
TreeDirNode.transplantChild	plugin/NERD_tree.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeDirNode.transplantChild	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootForTab	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetRootLineNum	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.GetSelected	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	plugin/NERD_tree.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode.New	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	plugin/NERD_tree.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode._renderToString	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	plugin/NERD_tree.vim	/^function! s:TreeFileNode.activate(forceKeepWinOpen)$/;"	f
TreeFileNode.activate	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.activate(forceKeepWinOpen)$/;"	f
TreeFileNode.bookmark	plugin/NERD_tree.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.bookmark	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	plugin/NERD_tree.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.cacheParent	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBoomarks	plugin/NERD_tree.vim	/^function! s:TreeFileNode.clearBoomarks()$/;"	f
TreeFileNode.clearBoomarks	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.clearBoomarks()$/;"	f
TreeFileNode.copy	plugin/NERD_tree.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.copy	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	plugin/NERD_tree.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.delete	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	plugin/NERD_tree.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.displayString	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	plugin/NERD_tree.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.equals	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	plugin/NERD_tree.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findNode	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	plugin/NERD_tree.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	plugin/NERD_tree.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.findSibling	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	plugin/NERD_tree.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.getLineNum	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	plugin/NERD_tree.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isRoot	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	plugin/NERD_tree.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.isVisible	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	plugin/NERD_tree.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.makeRoot	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	plugin/NERD_tree.vim	/^function! s:TreeFileNode.open()$/;"	f
TreeFileNode.open	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.open()$/;"	f
TreeFileNode.openInNewTab	plugin/NERD_tree.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openInNewTab	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	plugin/NERD_tree.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openSplit	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	plugin/NERD_tree.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.openVSplit	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	plugin/NERD_tree.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.putCursorHere	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	plugin/NERD_tree.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refresh	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	plugin/NERD_tree.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.rename	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	plugin/NERD_tree.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TreeFileNode.renderToString	src/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TriggerSnippet	plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	f
TriggerSnippet	src/snipmate.vim/plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	f
Trim	src/vimtlib/autoload/tEchoPair.vim	/^function! s:Trim(text) "{{{3$/;"	f
TruncateHead	plugin/fuzzyfinder.vim	/^function! s:TruncateHead(str, len)$/;"	f
TruncateMid	plugin/fuzzyfinder.vim	/^function! s:TruncateMid(str, len)$/;"	f
TruncateTail	plugin/fuzzyfinder.vim	/^function! s:TruncateTail(str, len)$/;"	f
Ttoc	src/vimtlib/plugin/ttoc.vim	/^command! -nargs=? -bang -count Ttoc call ttoc#View(<q-args>, !empty("<bang>"), v:count, <count>)$/;"	c
Ttocbg	src/vimtlib/plugin/ttoc.vim	/^command! -nargs=? -bang -count Ttocbg call ttoc#View(<q-args>, !empty("<bang>"), v:count, <count>, 1)$/;"	c
Type	bundle/delimitMate/autoload/delimitMateTests.vim	/^	function! Type(name, input, output, options, ...) " {{{$/;"	f
UnEsc	junk/NERD_commenter.vim	/^function s:UnEsc(str, escChar)$/;"	f
UnEsc	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UnEsc(str, escChar)$/;"	f
UnMap	junk/delimitMate.vim	/^function! s:UnMap() " {{{$/;"	f
UncommentLineNormal	junk/NERD_commenter.vim	/^function s:UncommentLineNormal(line)$/;"	f
UncommentLineNormal	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLineNormal(line)$/;"	f
UncommentLines	junk/NERD_commenter.vim	/^function s:UncommentLines(topLine, bottomLine)$/;"	f
UncommentLines	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLines(topLine, bottomLine)$/;"	f
UncommentLinesNormal	junk/NERD_commenter.vim	/^function s:UncommentLinesNormal(topline, bottomline)$/;"	f
UncommentLinesNormal	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesNormal(topline, bottomline)$/;"	f
UncommentLinesSexy	junk/NERD_commenter.vim	/^function s:UncommentLinesSexy(topline, bottomline)$/;"	f
UncommentLinesSexy	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesSexy(topline, bottomline)$/;"	f
UninstallAutocmd	src/vimtlib/plugin/shymenu.vim	/^function! s:UninstallAutocmd() "{{{3$/;"	f
UniqValue	src/vimtlib/autoload/tlib/list.vim	/^function! s:UniqValue(value) "{{{3$/;"	f
Unique	plugin/fuzzyfinder.vim	/^function! s:Unique(in)$/;"	f
Unmap	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Unmap() " {{{$/;"	f
UnsetCacheVar	src/vimtlib/plugin/tGpg.vim	/^function! s:UnsetCacheVar(ids, params) "{{{3$/;"	f
UnsetLine	src/vimtlib/autoload/tskeleton.vim	/^function! s:UnsetLine() "{{{3$/;"	f
UntabbedCol	junk/NERD_commenter.vim	/^function s:UntabbedCol(line, col)$/;"	f
UntabbedCol	src/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UntabbedCol(line, col)$/;"	f
UpdateChangedSnip	autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdateChangedSnip	src/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdateMruList	plugin/fuzzyfinder.vim	/^function! s:UpdateMruList(mrulist, new_item, max_item, excluded)$/;"	f
UpdatePlaceholderTabStops	autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdatePlaceholderTabStops	src/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdateTabStops	autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateTabStops	src/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateVars	autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	f
UpdateVars	src/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	f
UpperCharacters	src/vimtlib/autoload/viki.vim	/^function! s:UpperCharacters() "{{{3$/;"	f
UseCache	src/vimtlib/autoload/tselectfiles.vim	/^function! s:UseCache() "{{{3$/;"	f
UseF1ForNormal	junk/vimacs-0.93.vim	/^command! UseF1ForNormal echoerr "Use F1 or <C-z> to return to Normal mode.  :help vimacs-unix-esc-key"$/;"	c
UseGlobal	src/vimtlib/autoload/tbak.vim	/^fun! s:UseGlobal(global) "{{{3$/;"	f
UseVimball	plugin/vimballPlugin.vim	/^com! -na=? -complete=dir  UseVimball  call vimball#Vimball(1,<f-args>)$/;"	c
VERSION	bundle/delimitMate/Makefile	/^VERSION=$(shell perl -ne 'if (\/\\*\\sCurrent\\srelease:\/) {s\/^\\s+(\\d+\\.\\S+)\\s.*$$\/\\1\/;print}' $(DOC))$/;"	m
VIKI	src/vimtlib/plugin/viki.vim	/^command! VIKI :call viki#Edit('*', '!')$/;"	c
VIM	bundle/delimitMate/Makefile	/^VIM=\/usr\/bin\/vim$/;"	m
VIM	ruby/command-t/vim.rb	/^  module VIM$/;"	m	class:CommandT
VIM	ruby/command-t/vim/path_utilities.rb	/^  module VIM$/;"	m	class:CommandT
VIM	ruby/command-t/vim/screen.rb	/^  module VIM$/;"	m	class:CommandT
VIM	ruby/command-t/vim/window.rb	/^  module VIM$/;"	m	class:CommandT
VIM	ruby/vim.rb	/^module VIM$/;"	m
VIM	ruby/vim/screen.rb	/^module VIM$/;"	m
VIM	ruby/vim/window.rb	/^module VIM$/;"	m
VIMFOLDER	bundle/delimitMate/Makefile	/^VIMFOLDER=~\/.vim\/$/;"	m
VPATH	ruby/command-t/Makefile	/^VPATH = $(srcdir):$(topdir):$(hdrdir)$/;"	m
ValidMatchpairs	junk/delimitMate.vim	/^function! s:ValidMatchpairs(str) "{{{1$/;"	f
Var	src/vimtlib/autoload/tskeleton.vim	/^function! s:Var(arg) "{{{3$/;"	f
Var	src/vimtlib/plugin/glark.vim	/^function! s:Var(var) "{{{3$/;"	f
VarName	src/vimtlib/autoload/tskeleton.vim	/^function! s:VarName(var) "{{{3$/;"	f
Ve	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>)$/;"	c
Ve	src/vim-pathogen/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>)$/;"	c
Vedit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>)$/;"	c
Vedit	src/vim-pathogen/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>)$/;"	c
Version	ruby/fuzzy_file_finder.rb	/^  module Version$/;"	m	class:FuzzyFileFinder
ViewMail	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! s:ViewMail(id, winnr)$/;"	f
ViewSession	bundle/session.vim/plugin/session.vim	/^command! -bar -nargs=? -complete=customlist,xolox#session#complete_names ViewSession call xolox#session#view_cmd(<q-args>)$/;"	c
VikiAnchor_l	src/vimtlib/autoload/viki.vim	/^    function! VikiAnchor_l(arg) "{{{3$/;"	f
VikiAnchor_line	src/vimtlib/autoload/viki.vim	/^    function! VikiAnchor_line(arg) "{{{3$/;"	f
VikiAnchor_rx	src/vimtlib/autoload/viki.vim	/^    function! VikiAnchor_rx(arg) "{{{3$/;"	f
VikiAnchor_vim	src/vimtlib/autoload/viki.vim	/^    function! VikiAnchor_vim(arg) "{{{3$/;"	f
VikiBrowse	src/vimtlib/plugin/viki.vim	/^command! -nargs=1 -complete=customlist,viki#BrowseComplete VikiBrowse :call viki#Browse(<q-args>)$/;"	c
VikiDefine	src/vimtlib/plugin/viki.vim	/^command! -nargs=+ VikiDefine call viki#Define(<f-args>)$/;"	c
VikiEdit	src/vimtlib/plugin/viki.vim	/^command! -nargs=1 -bang -complete=customlist,viki#EditComplete VikiEdit :call viki#Edit(<q-args>, "<bang>")$/;"	c
VikiEditInVim	src/vimtlib/plugin/viki.vim	/^command! -nargs=1 -bang -complete=customlist,viki#EditComplete VikiEditInVim :call viki#Edit(<q-args>, "<bang>", 0, 1)$/;"	c
VikiEditInWin1	src/vimtlib/plugin/viki.vim	/^command! -nargs=1 -bang -complete=customlist,viki#EditComplete VikiEditInWin1 :call viki#Edit(<q-args>, "<bang>", 1)$/;"	c
VikiEditInWin2	src/vimtlib/plugin/viki.vim	/^command! -nargs=1 -bang -complete=customlist,viki#EditComplete VikiEditInWin2 :call viki#Edit(<q-args>, "<bang>", 2)$/;"	c
VikiEditInWin3	src/vimtlib/plugin/viki.vim	/^command! -nargs=1 -bang -complete=customlist,viki#EditComplete VikiEditInWin3 :call viki#Edit(<q-args>, "<bang>", 3)$/;"	c
VikiEditInWin4	src/vimtlib/plugin/viki.vim	/^command! -nargs=1 -bang -complete=customlist,viki#EditComplete VikiEditInWin4 :call viki#Edit(<q-args>, "<bang>", 4)$/;"	c
VikiEditTab	src/vimtlib/plugin/viki.vim	/^command! -nargs=1 -bang -complete=customlist,viki#EditComplete VikiEditTab :call viki#Edit(<q-args>, "<bang>", 'tab')$/;"	c
VikiFileExec	src/vimtlib/plugin/viki.vim	/^command! -nargs=* -bang -complete=command VikiFileExec call viki#FilesExec(<q-args>, '<bang>', 1)$/;"	c
VikiFilesCall	src/vimtlib/plugin/viki.vim	/^command! -nargs=* -bang VikiFilesCall call viki#FilesCall(<q-args>, '<bang>')$/;"	c
VikiFilesCmd	src/vimtlib/plugin/viki.vim	/^command! -nargs=* -bang VikiFilesCmd call viki#FilesCmd(<q-args>, '<bang>')$/;"	c
VikiFilesExec	src/vimtlib/plugin/viki.vim	/^command! -nargs=* -bang -complete=command VikiFilesExec call viki#FilesExec(<q-args>, '<bang>')$/;"	c
VikiFilesUpdate	src/vimtlib/plugin/viki.vim	/^command! VikiFilesUpdate call viki#FilesUpdate()$/;"	c
VikiFilesUpdateAll	src/vimtlib/plugin/viki.vim	/^command! VikiFilesUpdateAll call viki#FilesUpdateAll()$/;"	c
VikiFindNext	src/vimtlib/plugin/viki.vim	/^command! -count VikiFindNext call viki#DispatchOnFamily('Find', '', '',  <count>)$/;"	c
VikiFindPrev	src/vimtlib/plugin/viki.vim	/^command! -count VikiFindPrev call viki#DispatchOnFamily('Find', '', 'b', <count>)$/;"	c
VikiFoldLevel	src/vimtlib/ftplugin/viki.vim	/^    function! VikiFoldLevel(lnum) "{{{3$/;"	f
VikiFoldText	src/vimtlib/ftplugin/viki.vim	/^function! VikiFoldText() "{{{3$/;"	f
VikiFolds	src/vimtlib/ftplugin/viki.vim	/^function! s:VikiFolds() "{{{3$/;"	f
VikiGoBack	src/vimtlib/plugin/viki.vim	/^command! -narg=? VikiGoBack call viki#GoBack(<f-args>)$/;"	c
VikiHome	src/vimtlib/plugin/viki.vim	/^command! VikiHome :call viki#Edit('*', '!')$/;"	c
VikiIndex	src/vimtlib/plugin/viki.vim	/^command! VikiIndex :call viki#Index()$/;"	c
VikiJump	src/vimtlib/plugin/viki.vim	/^command! VikiJump call viki#MaybeFollowLink(0,1)$/;"	c
VikiMarkInexistent	src/vimtlib/plugin/viki.vim	/^command! -nargs=* -range=% VikiMarkInexistent call viki#MarkInexistentInRange(<line1>, <line2>)$/;"	c
VikiMinorMode	src/vimtlib/plugin/viki.vim	/^command! -nargs=? -bar VikiMinorMode call viki#DispatchOnFamily('MinorMode', empty(<q-args>) && exists('b:vikiFamily') ? b:vikiFamily : <q-args>, 1)$/;"	c
VikiMinorModeAnyWord	src/vimtlib/plugin/viki.vim	/^command! VikiMinorModeAnyWord call viki_anyword#MinorMode(1)$/;"	c
VikiMinorModeLaTeX	src/vimtlib/plugin/viki.vim	/^command! VikiMinorModeLaTeX call viki_latex#MinorMode(1)$/;"	c
VikiMinorModeMaybe	src/vimtlib/plugin/viki.vim	/^command! -nargs=? -bar VikiMinorModeMaybe echom "Deprecated command: VikiMinorModeMaybe" | VikiMinorMode <q-args>$/;"	c
VikiMinorModeViki	src/vimtlib/plugin/viki.vim	/^command! VikiMinorModeViki call viki_viki#MinorMode(1)$/;"	c
VikiMode	src/vimtlib/plugin/viki.vim	/^command! -nargs=? -bar VikiMode call VikiMode(<q-args>)$/;"	c
VikiMode	src/vimtlib/plugin/viki.vim	/^function! VikiMode(...) "{{{3$/;"	f
VikiModeMaybe	src/vimtlib/plugin/viki.vim	/^command! -nargs=? -bar VikiModeMaybe echom "Deprecated command: VikiModeMaybe: Please use 'set ft=viki' instead" | call VikiMode(<q-args>)$/;"	c
VikiOpenAsWorkspace	src/vimtlib/plugin/viki.vim	/^    function! VikiOpenAsWorkspace(file)$/;"	f
VikiOpenFileUrl	src/vimtlib/plugin/viki.vim	/^    function! VikiOpenFileUrl(url) "{{{3$/;"	f
VikiOpenMailbox	src/vimtlib/plugin/viki.vim	/^    function! VikiOpenMailbox(url) "{{{3$/;"	f
VikiOpenSpecialFile	src/vimtlib/plugin/viki.vim	/^    function! VikiOpenSpecialFile(file) "{{{3$/;"	f
VikiOpenSpecialProtocol	src/vimtlib/plugin/viki.vim	/^    function! VikiOpenSpecialProtocol(url) "{{{3$/;"	f
VikiQuote	src/vimtlib/plugin/viki.vim	/^command! -range VikiQuote :call VEnclose("[-", "-]", "[-", "-]")$/;"	c
Vimball	src/vimtlib/ruby/vimball.rb	/^class Vimball$/;"	c
VimballHome	autoload/vimball.vim	/^fun! s:VimballHome()$/;"	f
VimballList	plugin/vimballPlugin.vim	/^com! -na=0                VimballList call vimball#Vimball(0)$/;"	c
Vimtips2Help	src/vimtlib/ruby/vimtips2help.rb	/^class Vimtips2Help$/;"	c
VisualMaps	junk/delimitMate.vim	/^function! s:VisualMaps() " {{{1$/;"	f
Vopen	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,'lcd')$/;"	c
Vopen	src/vim-pathogen/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,'lcd')$/;"	c
Vpedit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit<bang>',<q-args>)$/;"	c
Vpedit	src/vim-pathogen/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit<bang>',<q-args>)$/;"	c
Vread	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read<bang>',<q-args>)$/;"	c
Vread	src/vim-pathogen/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read<bang>',<q-args>)$/;"	c
Vsplit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split<bang>',<q-args>)$/;"	c
Vsplit	src/vim-pathogen/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split<bang>',<q-args>)$/;"	c
Vtabedit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit<bang>',<q-args>)$/;"	c
Vtabedit	src/vim-pathogen/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit<bang>',<q-args>)$/;"	c
Vvsplit	autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit<bang>',<q-args>)$/;"	c
Vvsplit	src/vim-pathogen/autoload/pathogen.vim	/^command! -bar -bang -count=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit<bang>',<q-args>)$/;"	c
WINDOW_BUFFER_SIZE_EVENT	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^WINDOW_BUFFER_SIZE_EVENT = 0x0004$/;"	v
WINDOW_BUFFER_SIZE_RECORD	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^class WINDOW_BUFFER_SIZE_RECORD(Structure):$/;"	c
WillComplete	plugin/supertab.vim	/^function! s:WillComplete()$/;"	f
WinExec	src/vimtlib/plugin/scalefont.vim	/^function! s:WinExec(exec) "{{{3$/;"	f
WinHeight	src/vimtlib/plugin/glark.vim	/^function! s:WinHeight() "{{{3$/;"	f
Window	ruby/command-t/vim/window.rb	/^    class Window$/;"	c	class:CommandT.VIM
Window	ruby/vim/window.rb	/^  class Window$/;"	c	class:VIM
Window.Toggle\	bundle/vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>a$/;"	m
Window.Toggle\	bundle/vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> Window.Toggle\\ Background <SID>TogBG$/;"	m
Window.Toggle\	bundle/vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>gv$/;"	m
WindowManager.activate	plugin/fuzzyfinder.vim	/^function! s:WindowManager.activate(complete_func)$/;"	f
WindowManager.deactivate	plugin/fuzzyfinder.vim	/^function! s:WindowManager.deactivate()$/;"	f
WithinEmptyPair	junk/delimitMate.vim	/^function! s:WithinEmptyPair() "{{{1$/;"	f
WordRx	src/vimtlib/autoload/ttagecho.vim	/^function! s:WordRx(word) "{{{3$/;"	f
WrapMarker	src/vimtlib/autoload/loremipsum.vim	/^function! s:WrapMarker(marker, text) "{{{3$/;"	f
Write	plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
X	colors/github256.vim	/^	fun <SID>X(group, fg, bg, attr)$/;"	f
X	colors/inkpot.vim	/^fun! <SID>X(a)$/;"	f
X	colors/vividchalk.vim	/^fun! s:X(a)$/;"	f
X	src/inkpot/colors/inkpot.vim	/^fun! <SID>X(a)$/;"	f
YRClear	plugin/yankring.vim	/^command!                           YRClear        call s:YRClear()$/;"	c
YRClear	plugin/yankring.vim	/^function! s:YRClear()$/;"	f
YRDeleteRange	plugin/yankring.vim	/^command! -range -bang     -nargs=? YRDeleteRange  <line1>,<line2>call s:YRYankRange(<bang>1, <args>)$/;"	c
YRDisplayElem	plugin/yankring.vim	/^function! s:YRDisplayElem(disp_nbr, script_var) $/;"	f
YRDoRepeat	plugin/yankring.vim	/^function! s:YRDoRepeat() $/;"	f
YRErrorMsg	plugin/yankring.vim	/^function! s:YRErrorMsg(msg)$/;"	f
YRFocusGained	plugin/yankring.vim	/^function! s:YRFocusGained()$/;"	f
YRGetChar	plugin/yankring.vim	/^function! s:YRGetChar()$/;"	f
YRGetElem	plugin/yankring.vim	/^command!                  -nargs=* YRGetElem      call s:YRGetElem(<args>)$/;"	c
YRGetElem	plugin/yankring.vim	/^function! s:YRGetElem(...) $/;"	f
YRGetMultiple	plugin/yankring.vim	/^command!        -bang     -nargs=? YRGetMultiple  call s:YRGetMultiple(<bang>0, <args>)$/;"	c
YRGetMultiple	plugin/yankring.vim	/^function! s:YRGetMultiple(reverse_order, ...) $/;"	f
YRGetNextElem	plugin/yankring.vim	/^function! s:YRGetNextElem(start, iter) $/;"	f
YRGetValElemNbr	plugin/yankring.vim	/^function! s:YRGetValElemNbr( position, type )$/;"	f
YRHistoryRead	plugin/yankring.vim	/^function! s:YRHistoryRead()$/;"	f
YRHistorySave	plugin/yankring.vim	/^function! s:YRHistorySave()$/;"	f
YRHistoryUpgrade	plugin/yankring.vim	/^function! s:YRHistoryUpgrade(version)$/;"	f
YRInit	plugin/yankring.vim	/^function! s:YRInit(...)$/;"	f
YRInsertLeave	plugin/yankring.vim	/^function! s:YRInsertLeave()$/;"	f
YRMRUAdd	plugin/yankring.vim	/^function! s:YRMRUAdd( mru_list, element, element_type )$/;"	f
YRMRUDel	plugin/yankring.vim	/^function! s:YRMRUDel( mru_list, elem_nbr )$/;"	f
YRMRUElemFormat	plugin/yankring.vim	/^function! s:YRMRUElemFormat( element, element_type )$/;"	f
YRMRUGet	plugin/yankring.vim	/^function! s:YRMRUGet( mru_list, position )$/;"	f
YRMRUHas	plugin/yankring.vim	/^function! s:YRMRUHas( mru_list, find_str )$/;"	f
YRMRUReset	plugin/yankring.vim	/^function! s:YRMRUReset( mru_list )$/;"	f
YRMRUSize	plugin/yankring.vim	/^function! s:YRMRUSize( mru_list )$/;"	f
YRMapsCreate	plugin/yankring.vim	/^command!                  -nargs=0 YRMapsCreate   call s:YRMapsCreate()$/;"	c
YRMapsCreate	plugin/yankring.vim	/^function! s:YRMapsCreate(...)$/;"	f
YRMapsDelete	plugin/yankring.vim	/^command!                  -nargs=0 YRMapsDelete   call s:YRMapsDelete()$/;"	c
YRMapsDelete	plugin/yankring.vim	/^function! s:YRMapsDelete(...)$/;"	f
YRMapsExpression	plugin/yankring.vim	/^function! YRMapsExpression(sid, motion, ...)$/;"	f
YRMapsMacro	plugin/yankring.vim	/^function! s:YRMapsMacro(bang, ...) range$/;"	f
YRPaste	plugin/yankring.vim	/^command! -count -register -nargs=* YRPaste        call s:YRPaste(0,1,<args>)$/;"	c
YRPaste	plugin/yankring.vim	/^function! s:YRPaste(replace_last_paste_selection, nextvalue, direction, ...) $/;"	f
YRPop	plugin/yankring.vim	/^command!                  -nargs=? YRPop          <line1>,<line2>call s:YRPop(<args>)$/;"	c
YRPop	plugin/yankring.vim	/^function! s:YRPop(...)$/;"	f
YRPush	plugin/yankring.vim	/^command!        -register -nargs=? YRPush         call s:YRPush(<args>)$/;"	c
YRPush	plugin/yankring.vim	/^function! s:YRPush(...) $/;"	f
YRRecord	plugin/yankring.vim	/^function! YRRecord(...) $/;"	f
YRRecord3	plugin/yankring.vim	/^function! YRRecord3() $/;"	f
YRRegister	plugin/yankring.vim	/^function! s:YRRegister()$/;"	f
YRReplace	plugin/yankring.vim	/^command! -count -register -nargs=* YRReplace      call s:YRPaste(1,<args>)$/;"	c
YRReset	plugin/yankring.vim	/^function! s:YRReset()$/;"	f
YRSearch	plugin/yankring.vim	/^command!                  -nargs=? YRSearch       call s:YRSearch(<q-args>)$/;"	c
YRSearch	plugin/yankring.vim	/^function! s:YRSearch(...) $/;"	f
YRSetNumberedReg	plugin/yankring.vim	/^function! s:YRSetNumberedReg() $/;"	f
YRSetPrevOP	plugin/yankring.vim	/^function! s:YRSetPrevOP(op_code, count, reg, mode) $/;"	f
YRShow	plugin/yankring.vim	/^command!                  -nargs=? YRShow         call s:YRShow(<args>)$/;"	c
YRShow	plugin/yankring.vim	/^function! s:YRShow(...) $/;"	f
YRToggle	plugin/yankring.vim	/^command!                  -nargs=? YRToggle       call s:YRToggle(<args>)$/;"	c
YRToggle	plugin/yankring.vim	/^function! s:YRToggle(...)$/;"	f
YRWarningMsg	plugin/yankring.vim	/^function! s:YRWarningMsg(msg)$/;"	f
YRWinLeave	plugin/yankring.vim	/^function! s:YRWinLeave()$/;"	f
YRWindowAction	plugin/yankring.vim	/^function! s:YRWindowAction(op, cmd_mode) range$/;"	f
YRWindowActionN	plugin/yankring.vim	/^function! s:YRWindowActionN(op, cmd_mode) $/;"	f
YRWindowOpen	plugin/yankring.vim	/^function! s:YRWindowOpen(results)$/;"	f
YRWindowStatus	plugin/yankring.vim	/^function! s:YRWindowStatus(show_help)$/;"	f
YRWindowUpdate	plugin/yankring.vim	/^function! s:YRWindowUpdate()$/;"	f
YRYankCount	plugin/yankring.vim	/^command! -count -register -nargs=* YRYankCount    call s:YRYankCount(<args>)$/;"	c
YRYankCount	plugin/yankring.vim	/^function! s:YRYankCount(...) range$/;"	f
YRYankRange	plugin/yankring.vim	/^command! -range -bang     -nargs=? YRYankRange    <line1>,<line2>call s:YRYankRange(<bang>0, <args>)$/;"	c
YRYankRange	plugin/yankring.vim	/^function! s:YRYankRange(do_delete_selection, ...) range$/;"	f
YankPop	junk/vimacs-0.93.vim	/^function! <SID>YankPop()$/;"	f
YankRing	plugin/yankring.vim	/^augroup YankRing$/;"	a
[(	plugin/space.vim	/^    noremap <expr> <silent> [( <SID>setup_space("paren", "[(")$/;"	m
[(	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> [( <SID>setup_space("paren", "[(")$/;"	m
[M	plugin/space.vim	/^    noremap <expr> <silent> [M <SID>setup_space("method_end", "[M")$/;"	m
[M	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> [M <SID>setup_space("method_end", "[M")$/;"	m
[[	plugin/space.vim	/^    noremap <expr> <silent> [[ <SID>setup_space("section_start", "[[")$/;"	m
[[	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> [[ <SID>setup_space("section_start", "[[")$/;"	m
[[	src/vimtlib/ftplugin/viki.vim	/^map <buffer> <silent> [[ :call viki#FindPrevHeading()<cr>$/;"	m
[]	plugin/space.vim	/^    noremap <expr> <silent> [] <SID>setup_space("section_end", "[]")$/;"	m
[]	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> [] <SID>setup_space("section_end", "[]")$/;"	m
[]	src/vimtlib/ftplugin/viki.vim	/^map <buffer> <silent> [] [[$/;"	m
[c	plugin/space.vim	/^    noremap <expr> <silent> [c <SID>setup_space("diff", "[c")$/;"	m
[c	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> [c <SID>setup_space("diff", "[c")$/;"	m
[m	plugin/space.vim	/^    noremap <expr> <silent> [m <SID>setup_space("method_start", "[m")$/;"	m
[m	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> [m <SID>setup_space("method_start", "[m")$/;"	m
[z	plugin/space.vim	/^    noremap <expr> <silent> [z <SID>setup_space("fold_start", "[z")$/;"	m
[z	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> [z <SID>setup_space("fold_start", "[z")$/;"	m
[{	plugin/space.vim	/^    noremap <expr> <silent> [{ <SID>setup_space("curly", "[{")$/;"	m
[{	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> [{ <SID>setup_space("curly", "[{")$/;"	m
\c	plugin/scrollcolor.vim	/^map \\c :echo g:colors_name<cr>$/;"	m
\n	plugin/scrollcolor.vim	/^map \\n :CN<cr>$/;"	m
\p	plugin/scrollcolor.vim	/^map \\p :CP<cr>$/;"	m
])	plugin/space.vim	/^    noremap <expr> <silent> ]) <SID>setup_space("paren", "])")$/;"	m
])	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> ]) <SID>setup_space("paren", "])")$/;"	m
]M	plugin/space.vim	/^    noremap <expr> <silent> ]M <SID>setup_space("method_end", "]M")$/;"	m
]M	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> ]M <SID>setup_space("method_end", "]M")$/;"	m
][	plugin/space.vim	/^    noremap <expr> <silent> ][ <SID>setup_space("section_end", "][")$/;"	m
][	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> ][ <SID>setup_space("section_end", "][")$/;"	m
][	src/vimtlib/ftplugin/viki.vim	/^map <buffer> <silent> ][ :call viki#FindNextHeading()<cr>$/;"	m
]]	plugin/space.vim	/^    noremap <expr> <silent> ]] <SID>setup_space("section_start", "]]")$/;"	m
]]	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> ]] <SID>setup_space("section_start", "]]")$/;"	m
]]	src/vimtlib/ftplugin/viki.vim	/^map <buffer> <silent> ]] ][$/;"	m
]c	plugin/space.vim	/^    noremap <expr> <silent> ]c <SID>setup_space("diff", "]c")$/;"	m
]c	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> ]c <SID>setup_space("diff", "]c")$/;"	m
]m	plugin/space.vim	/^    noremap <expr> <silent> ]m <SID>setup_space("method_start", "]m")$/;"	m
]m	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> ]m <SID>setup_space("method_start", "]m")$/;"	m
]z	plugin/space.vim	/^    noremap <expr> <silent> ]z <SID>setup_space("fold_start", "]z")$/;"	m
]z	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> ]z <SID>setup_space("fold_start", "]z")$/;"	m
]}	plugin/space.vim	/^    noremap <expr> <silent> ]} <SID>setup_space("curly", "]}")$/;"	m
]}	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> ]} <SID>setup_space("curly", "]}")$/;"	m
__delitem__	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def __delitem__(self, key):$/;"	m	class:ConqueScreen	file:
__getitem__	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def __getitem__(self, key):$/;"	m	class:ConqueScreen	file:
__init__	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def __init__(self):$/;"	m	class:ConqueScreen
__init__	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    def __init__(self, mem_size, mem_type, mem_key, fixed_length=False, fill_char=' ', serialize=False, encoding='utf-8'):$/;"	m	class:ConqueSoleSharedMemory
__len__	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def __len__(self):$/;"	m	class:ConqueScreen	file:
__setitem__	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def __setitem__(self, key, value):$/;"	m	class:ConqueScreen	file:
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("BaseAddress",       c_void_p),$/;"	v	class:MEMORY_BASIC_INFORMATION
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Char", CHAR_UNION),$/;"	v	class:CHAR_INFO
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("EventType", c_short),$/;"	v	class:INPUT_RECORD
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("KeyEvent", KEY_EVENT_RECORD),$/;"	v	class:INPUT_UNION
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Left", c_short),$/;"	v	class:SMALL_RECT
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Length", c_ulong),$/;"	v	class:SECURITY_ATTRIBUTES
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("UnicodeChar", c_wchar),$/;"	v	class:CHAR_UNION
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("X", c_short),$/;"	v	class:COORD
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("bKeyDown", c_byte),$/;"	v	class:KEY_EVENT_RECORD
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("bSetFocus", c_byte)]$/;"	v	class:FOCUS_EVENT_RECORD
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("cb",            c_ulong),$/;"	v	class:STARTUPINFO
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwCommandId", c_uint)]$/;"	v	class:MENU_EVENT_RECORD
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwMousePosition", COORD),$/;"	v	class:MOUSE_EVENT_RECORD
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwSize", COORD),$/;"	v	class:CONSOLE_SCREEN_BUFFER_INFO
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwSize", COORD)]$/;"	v	class:WINDOW_BUFFER_SIZE_RECORD
_fields_	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("hProcess",    c_void_p),$/;"	v	class:PROCESS_INFORMATION
a	junk/colorize.vim	/^noremap a :highlight Normal guibg=lightyellow<cr>a$/;"	m
abbrev_len	ruby/command-t/match.c	/^    long    abbrev_len;             \/\/ length of same$/;"	m	struct:__anon1	file:
abbrev_p	ruby/command-t/match.c	/^    char    *abbrev_p;              \/\/ pointer to search string (abbreviation)$/;"	m	struct:__anon1	file:
abbrev_segments	ruby/command-t/prompt.rb	/^    def abbrev_segments$/;"	f	class:CommandT.Prompt
abolish_l	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_l(word)$/;"	f
abolish_setup	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_setup()$/;"	f
abolish_t	bundle/vim-rails/plugin/rails.vim	/^function! s:abolish_t(word)$/;"	f
abort	bundle/conque-term/autoload/conque_term/conque.py	/^    def abort(self):$/;"	m	class:Conque
abort	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def abort(self):$/;"	m	class:ConqueSole
absolute_coords	bundle/conque-term/autoload/conque_term/conque.py	/^    absolute_coords = True$/;"	v	class:Conque
accept_selection	ruby/command-t/controller.rb	/^    def accept_selection options = {}$/;"	f	class:CommandT.Controller
activateNode	plugin/NERD_tree.vim	/^function! s:activateNode(forceKeepWindowOpen)$/;"	f
activateNode	src/nerdtree/plugin/NERD_tree.vim	/^function! s:activateNode(forceKeepWindowOpen)$/;"	f
add!	ruby/command-t/match_window.rb	/^    def add! char$/;"	f	class:CommandT.MatchWindow
add!	ruby/command-t/prompt.rb	/^    def add! char$/;"	f	class:CommandT.Prompt
add_conceal_color	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def add_conceal_color(self, text, attributes, stats, line_nr):$/;"	m	class:ConqueSole
add_methods	bundle/vim-rails/autoload/rails.vim	/^function! s:add_methods(namespace, method_names)$/;"	f
add_methods	junk/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	junk/rails.vim	/^function! s:add_methods(namespace, method_names)$/;"	f
add_methods	plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	src/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_paths_for_directory	ruby/command-t/scanner/file_scanner.rb	/^    def add_paths_for_directory dir, accumulator$/;"	f	class:CommandT.FileScanner
addfilecmds	bundle/vim-rails/autoload/rails.vim	/^function! s:addfilecmds(type)$/;"	f
addfilecmds	junk/rails.vim	/^function! s:addfilecmds(type)$/;"	f
addprojectdir	junk/rails.vim	/^function! s:addprojectdir(rr,parentdir,dir)$/;"	f
addtostatus	bundle/vim-rails/autoload/rails.vim	/^function! s:addtostatus(letter,status)$/;"	f
addtostatus	junk/rails.vim	/^function! s:addtostatus(letter,status)$/;"	f
align	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def align(self):$/;"	m	class:ConqueScreen
allsteps	ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
allsteps	src/vim-cucumber/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
always_show_dot_files	ruby/command-t/match.c	/^    int     always_show_dot_files;  \/\/ boolean$/;"	m	struct:__anon1	file:
app_background_script_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_background_script_command(cmd) dict abort$/;"	f
app_background_script_command	junk/rails.vim	/^function! s:app_background_script_command(cmd) dict abort$/;"	f
app_dbext_settings	bundle/vim-rails/autoload/rails.vim	/^function! s:app_dbext_settings(environment) dict$/;"	f
app_dbext_settings	junk/rails.vim	/^function! s:app_dbext_settings(environment) dict$/;"	f
app_default_locale	bundle/vim-rails/autoload/rails.vim	/^function! s:app_default_locale() dict abort$/;"	f
app_default_locale	junk/rails.vim	/^function! s:app_default_locale() dict abort$/;"	f
app_destroy_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_destroy_command(bang,...) dict$/;"	f
app_destroy_command	junk/rails.vim	/^function! s:app_destroy_command(bang,...) dict$/;"	f
app_environments	bundle/vim-rails/autoload/rails.vim	/^function! s:app_environments() dict$/;"	f
app_environments	junk/rails.vim	/^function! s:app_environments() dict$/;"	f
app_eval	bundle/vim-rails/autoload/rails.vim	/^function! s:app_eval(ruby,...) dict abort$/;"	f
app_eval	junk/rails.vim	/^function! s:app_eval(ruby,...) dict abort$/;"	f
app_execute_script_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_execute_script_command(cmd) dict abort$/;"	f
app_execute_script_command	junk/rails.vim	/^function! s:app_execute_script_command(cmd) dict abort$/;"	f
app_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_file(name)$/;"	f
app_file	junk/rails.vim	/^function! s:app_file(name)$/;"	f
app_find_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_find_file(name, ...) dict abort$/;"	f
app_find_file	junk/rails.vim	/^function! s:app_find_file(name, ...) dict abort$/;"	f
app_generate_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_generate_command(bang,...) dict$/;"	f
app_generate_command	junk/rails.vim	/^function! s:app_generate_command(bang,...) dict$/;"	f
app_generators	bundle/vim-rails/autoload/rails.vim	/^function! s:app_generators() dict$/;"	f
app_generators	junk/rails.vim	/^function! s:app_generators() dict$/;"	f
app_has	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has(feature) dict$/;"	f
app_has	junk/rails.vim	/^function! s:app_has(feature) dict$/;"	f
app_has_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_has_file(file) dict$/;"	f
app_has_file	junk/rails.vim	/^function! s:app_has_file(file) dict$/;"	f
app_lightweight_ruby_eval	bundle/vim-rails/autoload/rails.vim	/^function! s:app_lightweight_ruby_eval(ruby,...) dict abort$/;"	f
app_lightweight_ruby_eval	junk/rails.vim	/^function! s:app_lightweight_ruby_eval(ruby,...) dict abort$/;"	f
app_migration	bundle/vim-rails/autoload/rails.vim	/^function! s:app_migration(file) dict$/;"	f
app_migration	junk/rails.vim	/^function! s:app_migration(file) dict$/;"	f
app_named_route_file	bundle/vim-rails/autoload/rails.vim	/^function! s:app_named_route_file(route) dict$/;"	f
app_named_route_file	junk/rails.vim	/^function! s:app_named_route_file(route) dict$/;"	f
app_path	bundle/vim-rails/autoload/rails.vim	/^function! s:app_path(...) dict$/;"	f
app_path	junk/rails.vim	/^function! s:app_path(...) dict$/;"	f
app_rake_tasks	bundle/vim-rails/autoload/rails.vim	/^function! s:app_rake_tasks() dict$/;"	f
app_rake_tasks	junk/rails.vim	/^function! s:app_rake_tasks() dict$/;"	f
app_relglob	bundle/vim-rails/autoload/rails.vim	/^function! s:app_relglob(path,glob,...) dict$/;"	f
app_relglob	junk/rails.vim	/^function! s:app_relglob(path,glob,...) dict$/;"	f
app_route_names	bundle/vim-rails/autoload/rails.vim	/^function! s:app_route_names() dict$/;"	f
app_route_names	junk/rails.vim	/^function! s:app_route_names() dict$/;"	f
app_ruby_shell_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_ruby_shell_command(cmd) dict abort$/;"	f
app_ruby_shell_command	junk/rails.vim	/^function! s:app_ruby_shell_command(cmd) dict abort$/;"	f
app_runner_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_runner_command(count,args) dict$/;"	f
app_runner_command	junk/rails.vim	/^function! s:app_runner_command(count,args) dict$/;"	f
app_script_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_script_command(bang,...) dict$/;"	f
app_script_command	junk/rails.vim	/^function! s:app_script_command(bang,...) dict$/;"	f
app_script_shell_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_script_shell_command(cmd) dict abort$/;"	f
app_script_shell_command	junk/rails.vim	/^function! s:app_script_shell_command(cmd) dict abort$/;"	f
app_server_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_server_command(bang,arg) dict$/;"	f
app_server_command	junk/rails.vim	/^function! s:app_server_command(bang,arg) dict$/;"	f
app_source_callback	bundle/vim-rails/autoload/rails.vim	/^function! s:app_source_callback(file) dict$/;"	f
app_source_callback	junk/rails.vim	/^function! s:app_source_callback(file) dict$/;"	f
app_tags_command	bundle/vim-rails/autoload/rails.vim	/^function! s:app_tags_command() dict$/;"	f
app_tags_command	junk/rails.vim	/^function! s:app_tags_command() dict$/;"	f
app_test_suites	bundle/vim-rails/autoload/rails.vim	/^function! s:app_test_suites() dict$/;"	f
app_test_suites	junk/rails.vim	/^function! s:app_test_suites() dict$/;"	f
app_user_assertions	bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_assertions() dict$/;"	f
app_user_assertions	junk/rails.vim	/^function! s:app_user_assertions() dict$/;"	f
app_user_classes	bundle/vim-rails/autoload/rails.vim	/^function! s:app_user_classes() dict$/;"	f
app_user_classes	junk/rails.vim	/^function! s:app_user_classes() dict$/;"	f
append	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def append(self, value):$/;"	m	class:ConqueScreen
append_colour	plugin/colorx.vim	/^function! s:append_colour(col)$/;"	f
apply_color	bundle/conque-term/autoload/conque_term/conque.py	/^    def apply_color(self, start, end, line=0):$/;"	m	class:Conque
arch	ruby/command-t/Makefile	/^arch = universal-darwin10.0$/;"	m
archdir	ruby/command-t/Makefile	/^archdir = $(rubylibdir)\/$(arch)$/;"	m
archflag	ruby/command-t/Makefile	/^archflag = $/;"	m
attribute_cache	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    attribute_cache = {}$/;"	v	class:ConqueSole
attribute_cache	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    attribute_cache = {}$/;"	v	class:ConqueSoleSubprocess
attributes	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    attributes = []$/;"	v	class:ConqueSoleSubprocess
auto_read	bundle/conque-term/autoload/conque_term/conque.py	/^    def auto_read(self):$/;"	m	class:Conque
autocamelize	bundle/vim-rails/autoload/rails.vim	/^function! s:autocamelize(files,test)$/;"	f
autocamelize	junk/rails.vim	/^function! s:autocamelize(files,test)$/;"	f
autoload	bundle/vim-rails/plugin/rails.vim	/^function! s:autoload(...)$/;"	f
autowrap	bundle/conque-term/autoload/conque_term/conque.py	/^    autowrap = True$/;"	v	class:Conque
b:bar	src/vimtlib/test/tlib.vim	/^let b:bar = 3$/;"	v
b:browsefilter	ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:browsefilter	src/vim-haml/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:cucumber_root	ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:cucumber_root	src/vim-cucumber/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:current_syntax	bundle/vim-coffee-script/syntax/coffee.vim	/^let b:current_syntax = "coffee"$/;"	v
b:current_syntax	bundle/vim-coffee-script/syntax/eco.vim	/^  let b:current_syntax = "eco"$/;"	v
b:current_syntax	bundle/vim-coffee-script/syntax/eco.vim	/^let b:current_syntax = 'eco'$/;"	v
b:current_syntax	src/vim-cucumber/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	src/vim-haml/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	src/vim-haml/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	src/vim-markdown/syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	src/vimtlib/syntax/bbcode.vim	/^let b:current_syntax = 'bbcode'$/;"	v
b:current_syntax	src/vimtlib/syntax/glark.vim	/^let b:current_syntax = 'glark'$/;"	v
b:current_syntax	src/vimtlib/syntax/tcalc.vim	/^let b:current_syntax = 'tcalc'$/;"	v
b:current_syntax	src/vimtlib/syntax/viki.vim	/^let b:current_syntax = 'viki'$/;"	v
b:current_syntax	syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	syntax/jquery.vim	/^let b:current_syntax = 'jquery'$/;"	v
b:current_syntax	syntax/markdown.vim	/^let b:current_syntax = "markdown"$/;"	v
b:current_syntax	syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	syntax/taskpaper.vim	/^let b:current_syntax = "taskpaper"$/;"	v
b:did_ftplugin	bundle/vim-coffee-script/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	src/vim-cucumber/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	src/vim-haml/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	src/vim-haml/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	src/vimtlib/ftplugin/tcalc.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	src/vimtlib/ftplugin/viki.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin_bibFindIndex	src/vimtlib/ftplugin/bib/bibFindIndex.vim	/^let b:did_ftplugin_bibFindIndex = 1$/;"	v
b:did_indent	bundle/vim-coffee-script/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	src/vim-cucumber/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	src/vim-haml/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	src/vim-haml/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	src/vimtlib/indent/viki.vim	/^let b:did_indent = 1$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^      let b:eco_subtype = b:current_syntax$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^      let b:eco_subtype = g:eco_default_subtype$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = 'html'$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = 'javascript'$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = 'ruby'$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = 'text'$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = 'yaml'$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^    let b:eco_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eco\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eco_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^  let b:eco_subtype = matchstr(s:lines,'eco_subtype=\\zs\\w\\+')$/;"	v
b:match_words	ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	src/vim-haml/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:ruby_no_expensive	src/vim-haml/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:undo_ftplugin	ftplugin/cucumber.vim	/^  let b:undo_ftplugin .= "| sil! iunmap! <C-]>| sil! iunmap! <C-W>]| sil! iunmap! <C-W><C-]>| sil! iunmap! <C-W>}"$/;"	v
b:undo_ftplugin	ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	ftplugin/haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	ftplugin/markdown.vim	/^let b:undo_ftplugin .= "|setl cms< com< fo<"$/;"	v
b:undo_ftplugin	ftplugin/sass.vim	/^let b:undo_ftplugin = "setl cms< inc< ofu<"$/;"	v
b:undo_ftplugin	src/vim-cucumber/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .= "| sil! iunmap! <C-]>| sil! iunmap! <C-W>]| sil! iunmap! <C-W><C-]>| sil! iunmap! <C-W>}"$/;"	v
b:undo_ftplugin	src/vim-cucumber/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	src/vim-haml/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	src/vim-haml/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl cms< inc< ofu<"$/;"	v
b:undo_ftplugin	src/vim-markdown/ftplugin/markdown.vim	/^let b:undo_ftplugin .= "|setl cms< com< fo<"$/;"	v
b:undo_ftplugin	src/vimtlib/ftplugin/viki.vim	/^let b:undo_ftplugin = 'setlocal iskeyword< expandtab< foldtext< foldexpr< foldmethod< comments< commentstring< '$/;"	v
b:vikiAnchorRx	src/vimtlib/ftplugin/bib/viki.vim	/^let b:vikiAnchorRx = '\\^\\c\\s\\*@\\[a-z]\\+\\s\\*{\\s\\*%{ANCHOR}\\s\\*,\\.\\*\\$'$/;"	v
b:vikiCommentEnd	src/vimtlib/ftplugin/viki.vim	/^let b:vikiCommentEnd   = ""$/;"	v
b:vikiCommentStart	src/vimtlib/ftplugin/viki.vim	/^let b:vikiCommentStart = "%"$/;"	v
b:vikiEnabled	src/vimtlib/ftplugin/viki.vim	/^let b:vikiEnabled = 2$/;"	v
b:vikiEnabled	src/vimtlib/syntax/viki.vim	/^let b:vikiEnabled = 0$/;"	v
b:vikiEnabled	src/vimtlib/syntax/viki.vim	/^let b:vikiEnabled = 2$/;"	v
b:vikiHeadingMaxLevel	src/vimtlib/ftplugin/viki.vim	/^let b:vikiHeadingMaxLevel = -1$/;"	v
b:vikiHeadingStart	src/vimtlib/syntax/viki.vim	/^let b:vikiHeadingStart = '*'$/;"	v
backspace	ruby/command-t/controller.rb	/^    def backspace$/;"	f	class:CommandT.Controller
backspace!	ruby/command-t/match_window.rb	/^    def backspace!$/;"	f	class:CommandT.MatchWindow
backspace!	ruby/command-t/prompt.rb	/^    def backspace!$/;"	f	class:CommandT.Prompt
beep	bundle/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
beep	junk/surround.vim	/^function! s:beep()$/;"	f
bibtex_sort_by	src/vimtlib/ruby/tbibtools.rb	/^    def bibtex_sort_by(field, text)$/;"	f
bindMappings	plugin/NERD_tree.vim	/^function! s:bindMappings()$/;"	f
bindMappings	src/nerdtree/plugin/NERD_tree.vim	/^function! s:bindMappings()$/;"	f
bindir	ruby/command-t/Makefile	/^bindir = $(exec_prefix)\/bin$/;"	m
body_default	src/vimtlib/ruby/tbibtools.rb	/^        def body_default(e, k, v)$/;"	f	class:TBibTools
bookmarkNode	plugin/NERD_tree.vim	/^function! s:bookmarkNode(name)$/;"	f
bookmarkNode	src/nerdtree/plugin/NERD_tree.vim	/^function! s:bookmarkNode(name)$/;"	f
bottom	bundle/conque-term/autoload/conque_term/conque.py	/^    bottom = 24 # relative to top of screen$/;"	v	class:Conque
bound	bundle/conque-term/autoload/conque_term/conque.py	/^    def bound(self, val, min, max):$/;"	m	class:Conque
bsub	ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
bsub	src/vim-cucumber/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
bucket	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    bucket = None$/;"	v	class:ConqueSoleWrapper
bufInWindows	plugin/NERD_tree.vim	/^function! s:bufInWindows(bnum)$/;"	f
bufInWindows	src/nerdtree/plugin/NERD_tree.vim	/^function! s:bufInWindows(bnum)$/;"	f
buffer	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    buffer = None$/;"	v	class:ConqueScreen
buffer	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    buffer = None$/;"	v	class:ConqueSole
buffer	junk/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer	plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_app	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_app() dict abort$/;"	f
buffer_app	junk/rails.vim	/^function! s:buffer_app() dict abort$/;"	f
buffer_append_text	src/vimtlib/ruby/tvimtools.rb	/^    def buffer_append_text(line, text)$/;"	f	class:TVimTools
buffer_commit	junk/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_commit	plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_commit	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	junk/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_containing_commit	plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_containing_commit	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_delete_range	src/vimtlib/ruby/tvimtools.rb	/^    def buffer_delete_range(from, to)$/;"	f	class:TVimTools
buffer_expand	junk/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_expand	plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_expand	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_get_range	src/vimtlib/ruby/tvimtools.rb	/^    def buffer_get_range(from, to)$/;"	f	class:TVimTools
buffer_getline	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getline(...) dict abort$/;"	f
buffer_getline	junk/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getline	junk/rails.vim	/^function! s:buffer_getline(...) dict abort$/;"	f
buffer_getline	plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getline	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_getvar(varname) dict abort$/;"	f
buffer_getvar	junk/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	junk/rails.vim	/^function! s:buffer_getvar(varname) dict abort$/;"	f
buffer_getvar	plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_height	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    buffer_height = 100$/;"	v	class:ConqueSoleSubprocess
buffer_lines	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_lines() dict abort$/;"	f
buffer_lines	junk/rails.vim	/^function! s:buffer_lines() dict abort$/;"	f
buffer_name	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	junk/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	junk/rails.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_number	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_number() dict abort$/;"	f
buffer_number	junk/rails.vim	/^function! s:buffer_number() dict abort$/;"	f
buffer_path	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_path	junk/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_path	junk/rails.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_path	plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_path	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_redraw_ct	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    buffer_redraw_ct = 1$/;"	v	class:ConqueSole
buffer_replace_range	src/vimtlib/ruby/tvimtools.rb	/^    def buffer_replace_range(from, to, text)$/;"	f	class:TVimTools
buffer_repo	junk/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_repo	plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_repo	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	junk/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_rev	plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_rev	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_setvar(varname, val) dict abort$/;"	f
buffer_setvar	junk/rails.vim	/^function! s:buffer_setvar(varname, val) dict abort$/;"	f
buffer_setvar	plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	junk/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_sha1	plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_sha1	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_type	junk/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_type	plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_type	src/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_type_name	bundle/vim-rails/autoload/rails.vim	/^function! s:buffer_type_name(...) dict abort$/;"	f
buffer_type_name	junk/rails.vim	/^function! s:buffer_type_name(...) dict abort$/;"	f
buffer_width	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    buffer_width = 160$/;"	v	class:ConqueSoleSubprocess
build_match_result	ruby/fuzzy_file_finder.rb	/^    def build_match_result(match, inside_segments)$/;"	f
build_menu	src/vimtlib/ruby/EvalSelection.rb	/^    def build_menu(id)$/;"	f	class:EvalSelection
build_menu	src/vimtlib/ruby/EvalSelection.rb	/^    def build_menu(initial=false)$/;"	f	class:EvalSelectionAbstractInterpreter
build_vim_menu	src/vimtlib/ruby/EvalSelection.rb	/^    def build_vim_menu(menu_name, list, menu_function, keys={})$/;"	f	class:EvalSelectionAbstractInterpreter
c	bundle/conque-term/autoload/conque_term/conque.py	/^    c = 1 # current cursor column$/;"	v	class:Conque
cCommandTMatch	ruby/command-t/ext.c	/^VALUE cCommandTMatch    = 0; \/\/ class CommandT::Match$/;"	v
cCommandTMatcher	ruby/command-t/ext.c	/^VALUE cCommandTMatcher  = 0; \/\/ class CommandT::Matcher$/;"	v
cProfile	bundle/conque-term/tests/profile.py	/^import cProfile$/;"	i
cache_clear	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_clear(...) dict$/;"	f
cache_clear	junk/rails.vim	/^function! s:cache_clear(...) dict$/;"	f
cache_get	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_get(...) dict$/;"	f
cache_get	junk/rails.vim	/^function! s:cache_get(...) dict$/;"	f
cache_has	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_has(key) dict$/;"	f
cache_has	junk/rails.vim	/^function! s:cache_has(key) dict$/;"	f
cache_needs	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_needs(key) dict$/;"	f
cache_needs	junk/rails.vim	/^function! s:cache_needs(key) dict$/;"	f
cache_set	bundle/vim-rails/autoload/rails.vim	/^function! s:cache_set(key,value) dict$/;"	f
cache_set	junk/rails.vim	/^function! s:cache_set(key,value) dict$/;"	f
cancel	ruby/command-t/controller.rb	/^    def cancel$/;"	f	class:CommandT.Controller
centerView	plugin/NERD_tree.vim	/^function! s:centerView()$/;"	f
centerView	src/nerdtree/plugin/NERD_tree.vim	/^function! s:centerView()$/;"	f
chCwd	plugin/NERD_tree.vim	/^function! s:chCwd()$/;"	f
chCwd	src/nerdtree/plugin/NERD_tree.vim	/^function! s:chCwd()$/;"	f
chRoot	plugin/NERD_tree.vim	/^function! s:chRoot()$/;"	f
chRoot	src/nerdtree/plugin/NERD_tree.vim	/^function! s:chRoot()$/;"	f
change_title	bundle/conque-term/autoload/conque_term/conque.py	/^    def change_title(self, key, val):$/;"	m	class:Conque
changesurround	bundle/vim-surround/plugin/surround.vim	/^function! s:changesurround() " {{{1$/;"	f
changesurround	junk/surround.vim	/^function! s:changesurround() " {{{1$/;"	f
char_width	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    char_width = 1$/;"	v	class:ConqueSoleSharedMemory
character_set	bundle/conque-term/autoload/conque_term/conque.py	/^    character_set = 'ascii'$/;"	v	class:Conque
charset_graphics	bundle/conque-term/autoload/conque_term/conque.py	/^    def charset_graphics(self):$/;"	m	class:Conque
charset_uk	bundle/conque-term/autoload/conque_term/conque.py	/^    def charset_uk(self):$/;"	m	class:Conque
charset_us	bundle/conque-term/autoload/conque_term/conque.py	/^    def charset_us(self):$/;"	m	class:Conque
checkForActivate	plugin/NERD_tree.vim	/^function! s:checkForActivate()$/;"	f
checkForActivate	src/nerdtree/plugin/NERD_tree.vim	/^function! s:checkForActivate()$/;"	f
checkForBrowse	plugin/NERD_tree.vim	/^function! s:checkForBrowse(dir)$/;"	f
checkForBrowse	src/nerdtree/plugin/NERD_tree.vim	/^function! s:checkForBrowse(dir)$/;"	f
check_assertion	src/vimtlib/ruby/tcalc.rb	/^    def check_assertion(assertion, cmd, quiet=false)$/;"	f
check_commands	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def check_commands(self):$/;"	m	class:ConqueSoleSubprocess
check_item	src/vimtlib/ruby/tcalc.rb	/^    def check_item(expected, observed, cmd, quiet=false)$/;"	f
check_special_tabpage	bundle/session.vim/autoload/xolox/session.vim	/^function! s:check_special_tabpage(session)$/;"	f
check_special_window	bundle/session.vim/autoload/xolox/session.vim	/^function! s:check_special_window(session)$/;"	f
check_this	src/vimtlib/ruby/tcalc.rb	/^    def check_this(expected, observed, cmd, prefix=nil, quiet=false)$/;"	f
choose	colors/vividchalk.vim	/^function! s:choose(good,mediocre)$/;"	f
clean_markup	src/vimtlib/ruby/vimtips2help.rb	/^    def clean_markup(text)$/;"	f	class:output_pages
cleanup	src/vimtlib/ruby/tcalc.rb	/^    def cleanup$/;"	f
cleanup	src/vimtlib/ruby/tcalc.rb	/^    def cleanup$/;"	f	class:TCalc
clear	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def clear(self):$/;"	m	class:ConqueScreen
clear	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    def clear(self, start=0):$/;"	m	class:ConqueSoleSharedMemory
clear	ruby/command-t/controller.rb	/^    def clear$/;"	f	class:CommandT.Controller
clear	ruby/command-t/match_window.rb	/^    def clear$/;"	f	class:CommandT.MatchWindow
clear!	ruby/command-t/prompt.rb	/^    def clear!$/;"	f	class:CommandT.Prompt
clearBookmarks	plugin/NERD_tree.vim	/^function! s:clearBookmarks(bookmarks)$/;"	f
clearBookmarks	src/nerdtree/plugin/NERD_tree.vim	/^function! s:clearBookmarks(bookmarks)$/;"	f
clear_message	bundle/session.vim/autoload/xolox/misc/msg.vim	/^function! s:clear_message()$/;"	f
close	bundle/conque-term/autoload/conque_term/conque.py	/^    def close(self):$/;"	m	class:Conque
close	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def close(self):$/;"	m	class:ConqueSole
close	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    def close(self):$/;"	m	class:ConqueSoleSharedMemory
close	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def close(self):$/;"	m	class:ConqueSoleSubprocess
close	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    def close(self):$/;"	m	class:ConqueSoleWrapper
close	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^    def close(self):$/;"	m	class:ConqueSubprocess
close	ruby/command-t/match_window.rb	/^    def close$/;"	f	class:CommandT.MatchWindow
closeChildren	plugin/NERD_tree.vim	/^function! s:closeChildren()$/;"	f
closeChildren	src/nerdtree/plugin/NERD_tree.vim	/^function! s:closeChildren()$/;"	f
closeCurrentDir	plugin/NERD_tree.vim	/^function! s:closeCurrentDir()$/;"	f
closeCurrentDir	src/nerdtree/plugin/NERD_tree.vim	/^function! s:closeCurrentDir()$/;"	f
closeTree	plugin/NERD_tree.vim	/^function! s:closeTree()$/;"	f
closeTree	src/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTree()$/;"	f
closeTreeIfOpen	plugin/NERD_tree.vim	/^function! s:closeTreeIfOpen()$/;"	f
closeTreeIfOpen	src/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeIfOpen()$/;"	f
closeTreeIfQuitOnOpen	plugin/NERD_tree.vim	/^function! s:closeTreeIfQuitOnOpen()$/;"	f
closeTreeIfQuitOnOpen	src/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeIfQuitOnOpen()$/;"	f
closeTreeWindow	plugin/NERD_tree.vim	/^function! s:closeTreeWindow()$/;"	f
closeTreeWindow	src/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeWindow()$/;"	f
close_pid	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def close_pid(self, pid):$/;"	m	class:ConqueSoleSubprocess
closematch	bundle/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
closematch	junk/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
cmd	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^                cmd = shm_command.read()$/;"	v
cmd	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        cmd = shm_command.read()$/;"	v
cmd_line	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        cmd_line = " ".join(sys.argv[6:])$/;"	v
code_page	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        code_page = int(sys.argv[4])$/;"	v
collect_pages	src/vimtlib/ruby/vimtips2help.rb	/^    def collect_pages$/;"	f
color	colors/github256.vim	/^	fun <SID>color(r, g, b)$/;"	f
color_cache	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    color_cache = {}$/;"	v	class:ConqueSole
color_changes	bundle/conque-term/autoload/conque_term/conque.py	/^    color_changes = {}$/;"	v	class:Conque
color_conceals	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    color_conceals = {}$/;"	v	class:ConqueSole
color_history	bundle/conque-term/autoload/conque_term/conque.py	/^    color_history = {}$/;"	v	class:Conque
color_mode	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    color_mode = None$/;"	v	class:ConqueSole
color_pruning	bundle/conque-term/autoload/conque_term/conque.py	/^    color_pruning = True$/;"	v	class:Conque
colors_name	bundle/vim-colors-solarized/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
colors_name	colors/blacklight.vim	/^let colors_name="blacklight"$/;"	v
colors_name	colors/bread.vim	/^let colors_name = "bread"$/;"	v
colors_name	colors/inkpot.vim	/^let colors_name = "inkpot"$/;"	v
colors_name	colors/ir_black.vim	/^let colors_name = "ir_black"$/;"	v
colors_name	colors/lodestone.vim	/^let colors_name="lodestone"$/;"	v
colors_name	colors/lucius.vim	/^let colors_name="lucius"$/;"	v
colors_name	colors/mayansmoke.vim	/^let colors_name = "mayansmoke"$/;"	v
colors_name	colors/moria.vim	/^let colors_name = "moria"$/;"	v
colors_name	colors/pyte.vim	/^let colors_name = "pyte"$/;"	v
colors_name	colors/slate.vim	/^let colors_name="slate"$/;"	v
colors_name	colors/spicycode.vim	/^let colors_name = "spicycode"$/;"	v
colors_name	colors/spicycodegui.vim	/^  let colors_name = "spicycodegui"$/;"	v
colors_name	colors/tango.vim	/^let colors_name = "tango"$/;"	v
colors_name	colors/tetragrammaton.vim	/^let colors_name = "tetragrammaton"$/;"	v
colors_name	colors/vibrantink.vim	/^let colors_name = "vibrantink"$/;"	v
colors_name	colors/vividchalk.vim	/^let colors_name = "vividchalk"$/;"	v
colors_name	colors/wombat.vim	/^let colors_name = "wombat"$/;"	v
colors_name	src/inkpot/colors/inkpot.vim	/^let colors_name = "inkpot"$/;"	v
colour_hex	plugin/colorx.vim	/^function! s:colour_hex()$/;"	f
colour_rgb	plugin/colorx.vim	/^function! s:colour_rgb()$/;"	f
columns	bundle/conque-term/autoload/conque_term/conque.py	/^    columns = 80 # same as $COLUMNS$/;"	v	class:Conque
columns	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    columns = 80$/;"	v	class:ConqueSoleWrapper
columns	ruby/vim/screen.rb	/^    def self.columns$/;"	F	class:VIM.Screen
command	junk/fugitive.vim	/^function! s:command(definition) abort$/;"	f
command	plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
command	src/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
commentEnablers	junk/NERD_commenter.vim	/^augroup commentEnablers$/;"	a
commentEnablers	src/nerdcommenter/plugin/NERD_commenter.vim	/^augroup commentEnablers$/;"	a
comp_alpha	ruby/command-t/matcher.c	/^int comp_alpha(const void *a, const void *b)$/;"	f
comp_score	ruby/command-t/matcher.c	/^int comp_score(const void *a, const void *b)$/;"	f
compact	bundle/vim-rails/autoload/rails.vim	/^function! s:compact(ary)$/;"	f
compact	junk/rails.vim	/^function! s:compact(ary)$/;"	f
compareBookmarks	plugin/NERD_tree.vim	/^function! s:compareBookmarks(first, second)$/;"	f
compareBookmarks	src/nerdtree/plugin/NERD_tree.vim	/^function! s:compareBookmarks(first, second)$/;"	f
compareNodes	plugin/NERD_tree.vim	/^function! s:compareNodes(n1, n2)$/;"	f
compareNodes	src/nerdtree/plugin/NERD_tree.vim	/^function! s:compareNodes(n1, n2)$/;"	f
compatibility_check	plugin/fugitive.vim	/^function! s:compatibility_check()$/;"	f
completeBookmarks	plugin/NERD_tree.vim	/^function! s:completeBookmarks(A,L,P)$/;"	f
completeBookmarks	src/nerdtree/plugin/NERD_tree.vim	/^function! s:completeBookmarks(A,L,P)$/;"	f
complete_command	src/vimtlib/ruby/tcalc.rb	/^    def complete_command(cmd_name, cmd_count, cmd_ext, return_many=false)$/;"	f
completion	src/vimtlib/ruby/tcalc.rb	/^        def completion(alt)$/;"	f	class:TCalc
completion	src/vimtlib/ruby/tcalc.rb	/^    def completion(alt)$/;"	f
completion_filter	bundle/vim-rails/autoload/rails.vim	/^function! s:completion_filter(results,A)$/;"	f
completion_filter	junk/rails.vim	/^function! s:completion_filter(results,A)$/;"	f
concordance#Collect	src/vimtlib/autoload/concordance.vim	/^function! concordance#Collect(world) "{{{3$/;"	f
concordance#Concordance	src/vimtlib/autoload/concordance.vim	/^function! concordance#Concordance() "{{{3$/;"	f
config	src/vimtlib/ruby/tbibtools.rb	/^        def config(value)$/;"	f	class:TBibTools.Configuration
conque_profile	bundle/conque-term/tests/profile.py	/^def conque_profile():$/;"	f
conque_profile_idle	bundle/conque-term/tests/profile.py	/^def conque_profile_idle(terminal, seconds):$/;"	f
conque_term#bell	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#bell() " {{{$/;"	f
conque_term#call_hooks	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#call_hooks(event, t_obj) " {{{$/;"	f
conque_term#close_all	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#close_all() "{{{$/;"	f
conque_term#create_terminal_object	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#create_terminal_object(...) " {{{$/;"	f
conque_term#dependency_check	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#dependency_check() " {{{$/;"	f
conque_term#exec_file	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#exec_file() "{{{$/;"	f
conque_term#fail	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#fail(feature) " {{{$/;"	f
conque_term#find_python_exe	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#find_python_exe() " {{{$/;"	f
conque_term#get_instance	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#get_instance(...) " {{{$/;"	f
conque_term#init	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#init() " {{{$/;"	f
conque_term#init_conceal_color	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#init_conceal_color() " {{{$/;"	f
conque_term#key_press	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#key_press() "{{{$/;"	f
conque_term#load_python	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#load_python() " {{{$/;"	f
conque_term#on_blur	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#on_blur() " {{{$/;"	f
conque_term#on_focus	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#on_focus(...) " {{{$/;"	f
conque_term#open	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#open(...) "{{{$/;"	f
conque_term#read_all	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#read_all(insert_mode) "{{{$/;"	f
conque_term#register_function	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#register_function(event, function_name) " {{{$/;"	f
conque_term#resume_session	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#resume_session() " {{{$/;"	f
conque_term#send_file	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#send_file() "{{{$/;"	f
conque_term#send_selected	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#send_selected(type) "{{{$/;"	f
conque_term#set_buffer_settings	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#set_buffer_settings(command, vim_startup_commands) "{{{$/;"	f
conque_term#set_mappings	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#set_mappings(action) "{{{$/;"	f
conque_term#subprocess	bundle/conque-term/autoload/conque_term.vim	/^function! conque_term#subprocess(command) " {{{$/;"	f
console_height	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        console_height = int(sys.argv[3])$/;"	v
console_width	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        console_width = int(sys.argv[2])$/;"	v
controller	bundle/vim-rails/autoload/rails.vim	/^function! s:controller(...)$/;"	f
controller	junk/rails.vim	/^function! s:controller(...)$/;"	f
controllerEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:controllerEdit(cmd,...)$/;"	f
controllerEdit	junk/rails.vim	/^function! s:controllerEdit(cmd,...)$/;"	f
controllerList	bundle/vim-rails/autoload/rails.vim	/^function! s:controllerList(A,L,P)$/;"	f
controllerList	junk/rails.vim	/^function! s:controllerList(A,L,P)$/;"	f
convert_value	bundle/session.vim/autoload/xolox/misc/timer.vim	/^function! s:convert_value(value)$/;"	f
cr	plugin/supertab.vim	/^      let cr = (map =~? '\\(^\\|[^)]\\)<cr>')$/;"	v
create	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    def create(self, access='write'):$/;"	m	class:ConqueSoleSharedMemory
createTreeWin	plugin/NERD_tree.vim	/^function! s:createTreeWin()$/;"	f
createTreeWin	src/nerdtree/plugin/NERD_tree.vim	/^function! s:createTreeWin()$/;"	f
cs	bundle/vim-surround/plugin/surround.vim	/^  nmap      cs   <Plug>Csurround$/;"	m
cs	junk/surround.vim	/^    nmap          cs   <Plug>Csurround$/;"	m
csi_add_spaces	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_add_spaces(self, csi):$/;"	m	class:Conque
csi_clear_line	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_clear_line(self, csi):$/;"	m	class:Conque
csi_clear_screen	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_clear_screen(self, csi):$/;"	m	class:Conque
csi_cursor	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_cursor(self, csi):$/;"	m	class:Conque
csi_cursor_down	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_cursor_down(self, csi):$/;"	m	class:Conque
csi_cursor_left	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_cursor_left(self, csi):$/;"	m	class:Conque
csi_cursor_right	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_cursor_right(self, csi):$/;"	m	class:Conque
csi_cursor_to_column	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_cursor_to_column(self, csi):$/;"	m	class:Conque
csi_cursor_up	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_cursor_up(self, csi):$/;"	m	class:Conque
csi_delete_chars	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_delete_chars(self, csi):$/;"	m	class:Conque
csi_font	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_font(self, csi):$/;"	m	class:Conque
csi_reset	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_reset(self, csi):$/;"	m	class:Conque
csi_set	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_set(self, csi):$/;"	m	class:Conque
csi_set_coords	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_set_coords(self, csi):$/;"	m	class:Conque
csi_tab_clear	bundle/conque-term/autoload/conque_term/conque.py	/^    def csi_tab_clear(self, csi):$/;"	m	class:Conque
ctl_bel	bundle/conque-term/autoload/conque_term/conque.py	/^    def ctl_bel(self):$/;"	m	class:Conque
ctl_bs	bundle/conque-term/autoload/conque_term/conque.py	/^    def ctl_bs(self):$/;"	m	class:Conque
ctl_cr	bundle/conque-term/autoload/conque_term/conque.py	/^    def ctl_cr(self):$/;"	m	class:Conque
ctl_nl	bundle/conque-term/autoload/conque_term/conque.py	/^    def ctl_nl(self):$/;"	m	class:Conque
ctl_si	bundle/conque-term/autoload/conque_term/conque.py	/^    def ctl_si(self):$/;"	m	class:Conque
ctl_so	bundle/conque-term/autoload/conque_term/conque.py	/^    def ctl_so(self):$/;"	m	class:Conque
ctl_soh	bundle/conque-term/autoload/conque_term/conque.py	/^    def ctl_soh(self):$/;"	m	class:Conque
ctl_stx	bundle/conque-term/autoload/conque_term/conque.py	/^    def ctl_stx(self):$/;"	m	class:Conque
ctl_tab	bundle/conque-term/autoload/conque_term/conque.py	/^    def ctl_tab(self):$/;"	m	class:Conque
ctypes	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^import ctypes$/;"	i
ctypes	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^import ctypes$/;"	i
current_compiler	src/vimtlib/compiler/deplate.vim	/^let current_compiler = "deplate"$/;"	v
curses_lines	src/vimtlib/ruby/tcalc.rb	/^    def curses_lines$/;"	f
cursor_col	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    cursor_col = 0$/;"	v	class:ConqueSoleSubprocess
cursor_end	ruby/command-t/controller.rb	/^    def cursor_end$/;"	f	class:CommandT.Controller
cursor_end	ruby/command-t/prompt.rb	/^    def cursor_end$/;"	f	class:CommandT.Prompt
cursor_left	ruby/command-t/controller.rb	/^    def cursor_left$/;"	f	class:CommandT.Controller
cursor_left	ruby/command-t/prompt.rb	/^    def cursor_left$/;"	f	class:CommandT.Prompt
cursor_line	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    cursor_line = 0$/;"	v	class:ConqueSoleSubprocess
cursor_right	ruby/command-t/controller.rb	/^    def cursor_right$/;"	f	class:CommandT.Controller
cursor_right	ruby/command-t/prompt.rb	/^    def cursor_right$/;"	f	class:CommandT.Prompt
cursor_set	bundle/conque-term/autoload/conque_term/conque.py	/^    cursor_set = False$/;"	v	class:Conque
cursor_start	ruby/command-t/controller.rb	/^    def cursor_start$/;"	f	class:CommandT.Controller
cursor_start	ruby/command-t/prompt.rb	/^    def cursor_start$/;"	f	class:CommandT.Prompt
data	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    data = []$/;"	v	class:ConqueSoleSubprocess
datadir	ruby/command-t/Makefile	/^datadir = $(datarootdir)$/;"	m
datarootdir	ruby/command-t/Makefile	/^datarootdir = $(prefix)\/share$/;"	m
debug	bundle/vim-rails/autoload/rails.vim	/^function! s:debug(str)$/;"	f
debug	junk/rails.vim	/^function! s:debug(str)$/;"	f
debug_msg	plugin/space.vim	/^function! s:debug_msg(string)$/;"	f
debug_msg	src/vim-space/plugin/space.vim	/^function! s:debug_msg(string)$/;"	f
def_body	src/vimtlib/ruby/tbibtools.rb	/^        def def_body(name, &block)$/;"	f	class:TBibTools.Configuration
def_format	src/vimtlib/ruby/tbibtools.rb	/^        def def_format(name, &block)$/;"	f	class:TBibTools.Configuration
def_head	src/vimtlib/ruby/tbibtools.rb	/^        def def_head(name, &block)$/;"	f	class:TBibTools.Configuration
def_lambda	src/vimtlib/ruby/tcalc.rb	/^    def def_lambda(word, body)$/;"	f	class:TCalc
def_preprocess	src/vimtlib/ruby/tbibtools.rb	/^        def def_preprocess(name, &block)$/;"	f	class:TBibTools.Configuration
def_tail	src/vimtlib/ruby/tbibtools.rb	/^        def def_tail(name, &block)$/;"	f	class:TBibTools.Configuration
default_attribute	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    default_attribute = 7$/;"	v	class:ConqueSoleSubprocess
default_format	src/vimtlib/ruby/tbibtools.rb	/^        def default_format(*value)$/;"	f	class:TBibTools.Configuration
default_open_command	ruby/command-t/controller.rb	/^    def default_open_command$/;"	f	class:CommandT.Controller
define_commands	junk/fugitive.vim	/^function! s:define_commands()$/;"	f
define_commands	plugin/fugitive.vim	/^function! s:define_commands()$/;"	f
define_commands	src/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands()$/;"	f
delete	ruby/command-t/controller.rb	/^    def delete$/;"	f	class:CommandT.Controller
delete!	ruby/command-t/prompt.rb	/^    def delete!$/;"	f	class:CommandT.Prompt
deleteBookmark	plugin/NERD_tree.vim	/^function! s:deleteBookmark()$/;"	f
deleteBookmark	src/nerdtree/plugin/NERD_tree.vim	/^function! s:deleteBookmark()$/;"	f
delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^augroup delimitMate$/;"	a
delimitMate#BS	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BS() " {{{$/;"	f
delimitMate#BalancedParens	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BalancedParens(char) "{{{$/;"	f
delimitMate#Del	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Del() " {{{$/;"	f
delimitMate#ExpandReturn	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandReturn() "{{{$/;"	f
delimitMate#ExpandSpace	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandSpace() "{{{$/;"	f
delimitMate#Finish	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Finish(move_back) " {{{$/;"	f
delimitMate#FlushBuffer	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#FlushBuffer() " {{{$/;"	f
delimitMate#GetCurrentSyntaxRegion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCurrentSyntaxRegion() "{{{$/;"	f
delimitMate#GetCurrentSyntaxRegionIf	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCurrentSyntaxRegionIf(char) "{{{$/;"	f
delimitMate#GetSyntaxRegion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetSyntaxRegion(line, col) "{{{$/;"	f
delimitMate#IsCRExpansion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsCRExpansion() " {{{$/;"	f
delimitMate#IsEmptyPair	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsEmptyPair(str) "{{{$/;"	f
delimitMate#IsForbidden	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsForbidden(char) "{{{$/;"	f
delimitMate#IsSpaceExpansion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsSpaceExpansion() " {{{$/;"	f
delimitMate#JumpAny	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpAny(key) " {{{$/;"	f
delimitMate#JumpMany	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpMany() " {{{$/;"	f
delimitMate#JumpOut	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpOut(char) "{{{$/;"	f
delimitMate#OptionsList	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#OptionsList() "{{{$/;"	f
delimitMate#ParenDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ParenDelim(char) " {{{$/;"	f
delimitMate#QuoteDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#QuoteDelim(char) "{{{$/;"	f
delimitMate#RmBuffer	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#RmBuffer(num) " {{{$/;"	f
delimitMate#ShouldJump	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ShouldJump() "{{{$/;"	f
delimitMate#SkipDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#SkipDelim(char) "{{{$/;"	f
delimitMate#TestMappings	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#TestMappings() "{{{$/;"	f
delimitMate#WithinEmptyPair	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WithinEmptyPair() "{{{$/;"	f
delimitMate#WriteAfter	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WriteAfter(str) "{{{$/;"	f
delimitMate#WriteBefore	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WriteBefore(str) "{{{$/;"	f
delimitMateTests#Main	bundle/delimitMate/autoload/delimitMateTests.vim	/^function! delimitMateTests#Main()$/;"	f
delimitMate_loaded	bundle/delimitMate/autoload/delimitMate.vim	/^let delimitMate_loaded = 1$/;"	v
delimitMate_version	bundle/delimitMate/plugin/delimitMate.vim	/^let delimitMate_version = "2.6"$/;"	v
descriptive_assertion	src/vimtlib/ruby/tcalc.rb	/^    def descriptive_assertion(assertion, cmd, quiet=false)$/;"	f
determine_shared_prefix	ruby/fuzzy_file_finder.rb	/^    def determine_shared_prefix$/;"	f
did_evalSel_syntax_inits	src/vimtlib/syntax/EvalSelectionLog.vim	/^    let did_evalSel_syntax_inits = 1$/;"	v
did_glark_syntax_inits	src/vimtlib/syntax/glark.vim	/^    let did_glark_syntax_inits = 1$/;"	v
did_lisp_syntax_inits	syntax/jquery.vim	/^    let did_lisp_syntax_inits = 1$/;"	v
did_tskeleton_syntax_inits	src/vimtlib/syntax/tskeleton.vim	/^        let did_tskeleton_syntax_inits = 1$/;"	v
did_viki_syntax_inits	src/vimtlib/syntax/viki.vim	/^      let did_viki_syntax_inits = 1$/;"	v
displayHelp	plugin/NERD_tree.vim	/^function! s:displayHelp()$/;"	f
displayHelp	src/nerdtree/plugin/NERD_tree.vim	/^function! s:displayHelp()$/;"	f
display_stack	src/vimtlib/ruby/tcalc.rb	/^    def display_stack$/;"	f
dispose	ruby/command-t/prompt.rb	/^    def dispose$/;"	f	class:CommandT.Prompt
djump	bundle/vim-rails/autoload/rails.vim	/^function! s:djump(def)$/;"	f
djump	junk/rails.vim	/^function! s:djump(def)$/;"	f
dldflags	ruby/command-t/Makefile	/^dldflags = $/;"	m
do_color	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def do_color(self, start=0, end=0, attributes='', stats=None):$/;"	m	class:ConqueSole
do_install	src/vimtlib/ruby/vimball.rb	/^    def do_install(file)$/;"	f
do_list	src/vimtlib/ruby/vimball.rb	/^    def do_list(file)$/;"	f
do_space	plugin/space.vim	/^function! s:do_space(shift, default)$/;"	f
do_space	src/vim-space/plugin/space.vim	/^function! s:do_space(shift, default)$/;"	f
do_vba	src/vimtlib/ruby/vimball.rb	/^    def do_vba(recipe)$/;"	f
docdir	ruby/command-t/Makefile	/^docdir = $(datarootdir)\/doc\/$(PACKAGE)$/;"	m
dosurround	bundle/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dosurround	junk/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dot_file	ruby/command-t/match.c	/^    int     dot_file;               \/\/ boolean: true if str is a dot-file$/;"	m	struct:__anon1	file:
ds	bundle/vim-surround/plugin/surround.vim	/^  nmap      ds   <Plug>Dsurround$/;"	m
ds	junk/surround.vim	/^    nmap          ds   <Plug>Dsurround$/;"	m
dumpHelp	plugin/NERD_tree.vim	/^function! s:dumpHelp()$/;"	f
dumpHelp	src/nerdtree/plugin/NERD_tree.vim	/^function! s:dumpHelp()$/;"	f
dump_stack	src/vimtlib/ruby/tcalc.rb	/^    def dump_stack$/;"	f
duplicate_field	src/vimtlib/ruby/tbibtools.rb	/^        def duplicate_field(name, &block)$/;"	f	class:TBibTools.Configuration
duplicate_field_abstract	src/vimtlib/ruby/tbibtools.rb	/^        def duplicate_field_abstract(oldval, val)$/;"	f
duplicate_field_author	src/vimtlib/ruby/tbibtools.rb	/^        def duplicate_field_author(oldval, val)$/;"	f
duplicate_field_keywords	src/vimtlib/ruby/tbibtools.rb	/^        def duplicate_field_keywords(oldval, val)$/;"	f
duplicate_field_url	src/vimtlib/ruby/tbibtools.rb	/^        def duplicate_field_url(oldval, val)$/;"	f
dvidir	ruby/command-t/Makefile	/^dvidir = $(docdir)$/;"	m
echo	nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echo	plugin/NERD_tree.vim	/^function! s:echo(msg)$/;"	f
echo	plugin/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echo	src/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echo	src/nerdtree/plugin/NERD_tree.vim	/^function! s:echo(msg)$/;"	f
echoError	plugin/NERD_tree.vim	/^function! s:echoError(msg)$/;"	f
echoError	src/nerdtree/plugin/NERD_tree.vim	/^function! s:echoError(msg)$/;"	f
echoWarning	nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
echoWarning	plugin/NERD_tree.vim	/^function! s:echoWarning(msg)$/;"	f
echoWarning	plugin/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
echoWarning	src/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
echoWarning	src/nerdtree/plugin/NERD_tree.vim	/^function! s:echoWarning(msg)$/;"	f
echo_error	src/vimtlib/ruby/tcalc.rb	/^    def echo_error(msg)$/;"	f
echo_error	src/vimtlib/ruby/tcalc.rb	/^    def echo_error(msg, secs=1)$/;"	f
edit	bundle/vim-rails/autoload/rails.vim	/^function! s:edit(cmd,file,...)$/;"	f
edit	junk/rails.vim	/^function! s:edit(cmd,file,...)$/;"	f
editcmdfor	bundle/vim-rails/autoload/rails.vim	/^function! s:editcmdfor(cmd)$/;"	f
editcmdfor	junk/rails.vim	/^function! s:editcmdfor(cmd)$/;"	f
enable_colors	bundle/conque-term/autoload/conque_term/conque.py	/^    enable_colors = True$/;"	v	class:Conque
encodeURIComponent	plugin/gist.vim	/^function! s:encodeURIComponent(instr)$/;"	f
encoding	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    encoding = None$/;"	v	class:ConqueSole
encoding	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    encoding = 'utf-8'$/;"	v	class:ConqueSoleSharedMemory
endof	bundle/vim-rails/autoload/rails.vim	/^function! s:endof(lnum)$/;"	f
endof	junk/rails.vim	/^function! s:endof(lnum)$/;"	f
ensure_appropriate_window_selection	ruby/command-t/controller.rb	/^    def ensure_appropriate_window_selection$/;"	f	class:CommandT.Controller
ensure_dir_exists	src/vimtlib/ruby/vimball.rb	/^    def ensure_dir_exists(dir)$/;"	f
entry_format	src/vimtlib/ruby/tbibtools.rb	/^        def entry_format$/;"	f	class:TBibTools.Configuration
ents	plugin/tComment.vim	/^comments); tComment can't currently deduce inline comment styles from $/;"	c
ents	src/vimtlib/plugin/tComment.vim	/^comments); tComment can't currently deduce inline comment styles from $/;"	c
environment	bundle/vim-rails/autoload/rails.vim	/^function! s:environment()$/;"	f
environment	junk/rails.vim	/^function! s:environment()$/;"	f
environmentEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:environmentEdit(cmd,...)$/;"	f
environmentEdit	junk/rails.vim	/^function! s:environmentEdit(cmd,...)$/;"	f
environmentList	bundle/vim-rails/autoload/rails.vim	/^function! s:environmentList(A,L,P)$/;"	f
environmentList	junk/rails.vim	/^function! s:environmentList(A,L,P)$/;"	f
error	bundle/vim-rails/autoload/rails.vim	/^function! s:error(str)$/;"	f
error	bundle/vim-rails/plugin/rails.vim	/^function! s:error(str)$/;"	f
error	junk/rails.vim	/^function! s:error(str)$/;"	f
esc_next_line	bundle/conque-term/autoload/conque_term/conque.py	/^    def esc_next_line(self):$/;"	m	class:Conque
esc_scroll_down	bundle/conque-term/autoload/conque_term/conque.py	/^    def esc_scroll_down(self):$/;"	m	class:Conque
esc_scroll_up	bundle/conque-term/autoload/conque_term/conque.py	/^    def esc_scroll_up(self):$/;"	m	class:Conque
esc_set_tab	bundle/conque-term/autoload/conque_term/conque.py	/^    def esc_set_tab(self):$/;"	m	class:Conque
escape	bundle/session.vim/autoload/xolox/misc/option.vim	/^function! s:escape(s)$/;"	f
escape_for_single_quotes	ruby/command-t/vim.rb	/^    def self.escape_for_single_quotes str$/;"	F	class:CommandT.VIM
escape_for_single_quotes	ruby/vim.rb	/^  def self.escape_for_single_quotes str$/;"	F	class:VIM
escape_tags	bundle/session.vim/autoload/xolox/misc/option.vim	/^function! s:escape_tags(s)$/;"	f
escarg	bundle/vim-rails/autoload/rails.vim	/^function! s:escarg(p)$/;"	f
escarg	junk/rails.vim	/^function! s:escarg(p)$/;"	f
esccmd	bundle/vim-rails/autoload/rails.vim	/^function! s:esccmd(p)$/;"	f
esccmd	junk/rails.vim	/^function! s:esccmd(p)$/;"	f
escvar	bundle/vim-rails/plugin/rails.vim	/^function! s:escvar(r)$/;"	f
evaluate	src/vimtlib/ruby/tcalc.rb	/^        def evaluate(initial_args)$/;"	f	class:TCalc
exec	plugin/NERD_tree.vim	/^function! s:exec(cmd)$/;"	f
exec	src/nerdtree/plugin/NERD_tree.vim	/^function! s:exec(cmd)$/;"	f
execGitCmd	plugin/nerdtree_plugin/git_menu.vim	/^function! s:execGitCmd(sub_cmd)$/;"	f
exec_highlight	bundle/conque-term/autoload/conque_term/conque.py	/^    def exec_highlight(self, buffer_line, start, end, highlight):$/;"	m	class:Conque
exec_prefix	ruby/command-t/Makefile	/^exec_prefix = $(prefix)$/;"	m
exists?	ruby/command-t/controller.rb	/^    def exists? name$/;"	f	class:CommandT.Controller
expand_strings	src/vimtlib/ruby/tbibtools.rb	/^        def expand_strings(value=false)$/;"	f	class:TBibTools.Configuration
export	src/vimtlib/ruby/tcalc.rb	/^    def export(register, args)$/;"	f
extout	ruby/command-t/Makefile	/^extout = $/;"	m
extout_prefix	ruby/command-t/Makefile	/^extout_prefix = $/;"	m
extractafter	bundle/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractafter	junk/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	bundle/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
extractbefore	junk/surround.vim	/^function! s:extractbefore(str)$/;"	f
extractdbvar	bundle/vim-rails/autoload/rails.vim	/^function! s:extractdbvar(str,arg)$/;"	f
extractdbvar	junk/rails.vim	/^function! s:extractdbvar(str,arg)$/;"	f
f	plugin/space.vim	/^    noremap <expr> <silent> f <SID>setup_space("char", "f")$/;"	m
f	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> f <SID>setup_space("char", "f")$/;"	m
f	src/vimtlib/ftplugin/glark.vim	/^inoremap <silent> <buffer> f <c-o>:call GlarkJump('f')<cr>$/;"	m
f	src/vimtlib/ftplugin/glark.vim	/^noremap  <silent> <buffer> f :call GlarkJump('f')<cr>$/;"	m
fast_mode	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        fast_mode = int(sys.argv[5])$/;"	v
fast_mode	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    fast_mode = 0$/;"	v	class:ConqueSoleSubprocess
fcntl	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^import fcntl$/;"	i
fd	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^    fd = None$/;"	v	class:ConqueSubprocess
file_contents	bundle/conque-term/autoload/conque_term.vim	/^            let file_contents = ['let g:ConqueTerm_MsgCt = ' . msg_ct, 'let g:ConqueTerm_MsgVer = ' . g:ConqueTerm_Version]$/;"	v
file_getline	bundle/vim-rails/autoload/rails.vim	/^function! s:file_getline(lnum,...) dict abort$/;"	f
file_getline	junk/rails.vim	/^function! s:file_getline(lnum,...) dict abort$/;"	f
file_lines	bundle/vim-rails/autoload/rails.vim	/^function! s:file_lines() dict abort$/;"	f
file_lines	junk/rails.vim	/^function! s:file_lines() dict abort$/;"	f
file_name	bundle/vim-rails/autoload/rails.vim	/^function! s:file_name() dict abort$/;"	f
file_name	junk/rails.vim	/^function! s:file_name() dict abort$/;"	f
file_path	bundle/vim-rails/autoload/rails.vim	/^function! s:file_path() dict abort$/;"	f
file_path	junk/rails.vim	/^function! s:file_path() dict abort$/;"	f
file_write	src/vimtlib/ruby/vimball.rb	/^    def file_write(filename, mode='w', &block)$/;"	f
filter	src/vimtlib/ruby/tbibtools.rb	/^        def filter(value)$/;"	f	class:TBibTools.Configuration
find	autoload/pathogen.vim	/^function! s:find(count,cmd,file,...) " {{{1$/;"	f
find	ruby/command-t/match_window.rb	/^    def find char$/;"	f	class:CommandT.MatchWindow
find	ruby/fuzzy_file_finder.rb	/^  def find(pattern, max=nil)$/;"	f	class:FuzzyFileFinder
find	src/vim-pathogen/autoload/pathogen.vim	/^function! s:find(count,cmd,file,...) " {{{1$/;"	f
findAndRevealPath	plugin/NERD_tree.vim	/^function! s:findAndRevealPath()$/;"	f
findAndRevealPath	src/nerdtree/plugin/NERD_tree.vim	/^function! s:findAndRevealPath()$/;"	f
findamethod	bundle/vim-rails/autoload/rails.vim	/^function! s:findamethod(func,repl)$/;"	f
findamethod	junk/rails.vim	/^function! s:findamethod(func,repl)$/;"	f
findasymbol	bundle/vim-rails/autoload/rails.vim	/^function! s:findasymbol(sym,repl)$/;"	f
findasymbol	junk/rails.vim	/^function! s:findasymbol(sym,repl)$/;"	f
findcmdfor	bundle/vim-rails/autoload/rails.vim	/^function! s:findcmdfor(cmd)$/;"	f
findcmdfor	junk/rails.vim	/^function! s:findcmdfor(cmd)$/;"	f
findedit	bundle/vim-rails/autoload/rails.vim	/^function! s:findedit(cmd,files,...) abort$/;"	f
findedit	junk/rails.vim	/^function! s:findedit(cmd,files,...) abort$/;"	f
findfromview	bundle/vim-rails/autoload/rails.vim	/^function! s:findfromview(func,repl)$/;"	f
findfromview	junk/rails.vim	/^function! s:findfromview(func,repl)$/;"	f
findit	bundle/vim-rails/autoload/rails.vim	/^function! s:findit(pat,repl)$/;"	f
findit	junk/rails.vim	/^function! s:findit(pat,repl)$/;"	f
findlayout	bundle/vim-rails/autoload/rails.vim	/^function! s:findlayout(name)$/;"	f
findlayout	junk/rails.vim	/^function! s:findlayout(name)$/;"	f
findview	bundle/vim-rails/autoload/rails.vim	/^function! s:findview(name)$/;"	f
findview	junk/rails.vim	/^function! s:findview(name)$/;"	f
firstUsableWindow	plugin/NERD_tree.vim	/^function! s:firstUsableWindow()$/;"	f
firstUsableWindow	src/nerdtree/plugin/NERD_tree.vim	/^function! s:firstUsableWindow()$/;"	f
fixed_length	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    fixed_length = False$/;"	v	class:ConqueSoleSharedMemory
fixindent	bundle/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fixindent	junk/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fixturesEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesEdit(cmd,...)$/;"	f
fixturesEdit	junk/rails.vim	/^function! s:fixturesEdit(cmd,...)$/;"	f
fixturesList	bundle/vim-rails/autoload/rails.vim	/^function! s:fixturesList(A,L,P)$/;"	f
fixturesList	junk/rails.vim	/^function! s:fixturesList(A,L,P)$/;"	f
flush	ruby/command-t/controller.rb	/^    def flush$/;"	f	class:CommandT.Controller
flush	ruby/command-t/finder.rb	/^    def flush$/;"	f	class:CommandT.Finder
flush	ruby/command-t/scanner/file_scanner.rb	/^    def flush$/;"	f	class:CommandT.FileScanner
flush	ruby/command-t/stub.rb	/^    def flush$/;"	f	class:CommandT.Stub
fnameescape	junk/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	src/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
focus	ruby/command-t/match_window.rb	/^    def focus$/;"	f	class:CommandT.MatchWindow
focus	ruby/command-t/prompt.rb	/^    def focus$/;"	f	class:CommandT.Prompt
follow_tree	ruby/fuzzy_file_finder.rb	/^    def follow_tree(directory)$/;"	f	class:FuzzyFileFinder
for_methods	src/vimtlib/ruby/tbibtools.rb	/^    def for_methods(prefix, &block)$/;"	f
format	bundle/vim-rails/autoload/rails.vim	/^function! s:format(...)$/;"	f
format	junk/rails.vim	/^function! s:format(...)$/;"	f
format	src/vimtlib/ruby/tbibtools.rb	/^        def format(*value)$/;"	f	class:TBibTools.Configuration
format	src/vimtlib/ruby/tbibtools.rb	/^    def format(e)$/;"	f
format	src/vimtlib/ruby/tcalc.rb	/^    def format(elt, level=1)$/;"	f
format_align	src/vimtlib/ruby/tbibtools.rb	/^        def format_align(args, e, k, v)$/;"	f	class:TBibTools
format_bracket	src/vimtlib/ruby/tbibtools.rb	/^        def format_bracket(args, e, k, v)$/;"	f	class:TBibTools
format_canonicAuthors	src/vimtlib/ruby/tbibtools.rb	/^        def format_canonicAuthors(args, e, k, v)$/;"	f	class:TBibTools
format_canonicKeywords	src/vimtlib/ruby/tbibtools.rb	/^        def format_canonicKeywords(args, e, k, v)$/;"	f
format_canonicPages	src/vimtlib/ruby/tbibtools.rb	/^        def format_canonicPages(args, e, k, v)$/;"	f	class:TBibTools
format_canonicQuotes	src/vimtlib/ruby/tbibtools.rb	/^        def format_canonicQuotes(args, e, k, v)$/;"	f	class:TBibTools
format_check	src/vimtlib/ruby/tbibtools.rb	/^        def format_check(args, e, k, v)$/;"	f	class:TBibTools
format_downcaseKey	src/vimtlib/ruby/tbibtools.rb	/^        def format_downcaseKey(args, e, k, v)$/;"	f	class:TBibTools
format_gsub	src/vimtlib/ruby/tbibtools.rb	/^        def format_gsub(args, e, k, v)$/;"	f	class:TBibTools
format_indent	src/vimtlib/ruby/tbibtools.rb	/^        def format_indent(args, e, k, v)$/;"	f	class:TBibTools
format_languageLongNames	src/vimtlib/ruby/tbibtools.rb	/^        def format_languageLongNames(args, e, k, v)$/;"	f
format_languageShortNames	src/vimtlib/ruby/tbibtools.rb	/^        def format_languageShortNames(args, e, k, v)$/;"	f
format_list	src/vimtlib/ruby/tbibtools.rb	/^        def format_list(args, e, k, v)$/;"	f	class:TBibTools
format_nil	src/vimtlib/ruby/tbibtools.rb	/^        def format_nil(args, e, k, v)$/;"	f	class:TBibTools
format_quote	src/vimtlib/ruby/tbibtools.rb	/^        def format_quote(args, e, k, v)$/;"	f	class:TBibTools
format_squeeze	src/vimtlib/ruby/tbibtools.rb	/^        def format_squeeze(args, e, k, v)$/;"	f	class:TBibTools
format_stripEmpty	src/vimtlib/ruby/tbibtools.rb	/^        def format_stripEmpty(args, e, k, v)$/;"	f	class:TBibTools
format_stripRedundantTitel	src/vimtlib/ruby/tbibtools.rb	/^        def format_stripRedundantTitel(args, e, k, v)$/;"	f	class:TBibTools
format_unwrap	src/vimtlib/ruby/tbibtools.rb	/^        def format_unwrap(args, e, k, v)$/;"	f
format_upcaseKey	src/vimtlib/ruby/tbibtools.rb	/^        def format_upcaseKey(args, e, k, v)$/;"	f	class:TBibTools
format_wrap	src/vimtlib/ruby/tbibtools.rb	/^        def format_wrap(args, e, k, v)$/;"	f
fugitive	junk/fugitive.vim	/^augroup fugitive$/;"	a
fugitive	plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive	src/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	junk/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#buffer	plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#buffer	src/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#reload_status	plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#statusline	plugin/fugitive.vim	/^function! fugitive#statusline(...)$/;"	f
fugitive_blame	junk/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_blame	plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_blame	src/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commands	junk/fugitive.vim	/^augroup fugitive_commands$/;"	a
fugitive_commands	src/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commands$/;"	a
fugitive_commit	plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	junk/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_files	plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_files	src/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_remove	junk/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_remove	plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_remove	src/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_utility	plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
function	bundle/vim-rails/autoload/rails.vim	/^function! s:function(name)$/;"	f
function	bundle/vim-rails/plugin/rails.vim	/^function! s:function(name)$/;"	f
function	junk/fugitive.vim	/^function! s:function(name) abort$/;"	f
function	junk/rails.vim	/^function! s:function(name)$/;"	f
function	plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
function	src/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
functionaltestEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:functionaltestEdit(cmd,...)$/;"	f
functionaltestEdit	junk/rails.vim	/^function! s:functionaltestEdit(cmd,...)$/;"	f
functionaltestList	bundle/vim-rails/autoload/rails.vim	/^function! s:functionaltestList(A,L,P)$/;"	f
functionaltestList	junk/rails.vim	/^function! s:functionaltestList(A,L,P)$/;"	f
fuzzyglob	bundle/vim-rails/autoload/rails.vim	/^function! s:fuzzyglob(arg)$/;"	f
fuzzyglob	junk/rails.vim	/^function! s:fuzzyglob(arg)$/;"	f
g#	plugin/space.vim	/^    noremap <expr> <silent> g# <SID>setup_space("search", "g#")$/;"	m
g#	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> g# <SID>setup_space("search", "g#")$/;"	m
g*	plugin/space.vim	/^    noremap <expr> <silent> g* <SID>setup_space("search", "g*")$/;"	m
g*	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> g* <SID>setup_space("search", "g*")$/;"	m
g,	plugin/space.vim	/^    noremap <expr> <silent> g, <SID>setup_space("jump", "g,")$/;"	m
g,	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> g, <SID>setup_space("jump", "g,")$/;"	m
g:Align_xstrlen	junk/Align.vim	/^  let g:Align_xstrlen= 0$/;"	v
g:Align_xstrlen	junk/Align.vim	/^  let g:Align_xstrlen= 1$/;"	v
g:BufExplorer_title	plugin/bufexplorer.vim	/^let g:BufExplorer_title = "\\[Buf\\ List\\]"$/;"	v
g:ConqueTerm_CWInsert	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_CWInsert = 0$/;"	v
g:ConqueTerm_CloseOnEnd	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_CloseOnEnd = 0$/;"	v
g:ConqueTerm_CodePage	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_CodePage = 0$/;"	v
g:ConqueTerm_Color	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_Color = 1$/;"	v
g:ConqueTerm_ColorMode	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_ColorMode = ''$/;"	v
g:ConqueTerm_EscKey	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_EscKey = '<Esc>'$/;"	v
g:ConqueTerm_ExecFileKey	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_ExecFileKey = '<F11>'$/;"	v
g:ConqueTerm_FastMode	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_FastMode = 0$/;"	v
g:ConqueTerm_Idx	bundle/conque-term/autoload/conque_term.vim	/^let g:ConqueTerm_Idx = 0$/;"	v
g:ConqueTerm_Idx	bundle/conque-term/plugin/conque_term.vim	/^let g:ConqueTerm_Idx = 0$/;"	v
g:ConqueTerm_InsertOnEnter	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_InsertOnEnter = 0$/;"	v
g:ConqueTerm_Loaded	bundle/conque-term/plugin/conque_term.vim	/^let g:ConqueTerm_Loaded = 1$/;"	v
g:ConqueTerm_PromptRegex	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_PromptRegex = '^\\w\\+@[0-9A-Za-z_.-]\\+:[0-9A-Za-z_.\/\\~,:-]\\+\\$'$/;"	v
g:ConqueTerm_PyExe	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_PyExe = ''$/;"	v
g:ConqueTerm_PyVersion	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_PyVersion = 2$/;"	v
g:ConqueTerm_ReadUnfocused	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_ReadUnfocused = 0$/;"	v
g:ConqueTerm_SendFileKey	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_SendFileKey = '<F10>'$/;"	v
g:ConqueTerm_SendFunctionKeys	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_SendFunctionKeys = 0$/;"	v
g:ConqueTerm_SendVisKey	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_SendVisKey = '<F9>'$/;"	v
g:ConqueTerm_SessionSupport	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_SessionSupport = 0$/;"	v
g:ConqueTerm_StartMessages	bundle/conque-term/autoload/conque_term.vim	/^    let g:ConqueTerm_StartMessages = msg_show$/;"	v
g:ConqueTerm_StartMessages	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_StartMessages = 0$/;"	v
g:ConqueTerm_Syntax	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_Syntax = 'conque_term'$/;"	v
g:ConqueTerm_TERM	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_TERM =  'vt100'$/;"	v
g:ConqueTerm_Terminals	bundle/conque-term/autoload/conque_term.vim	/^let g:ConqueTerm_Terminals = {}$/;"	v
g:ConqueTerm_TerminalsString	bundle/conque-term/autoload/conque_term.vim	/^let g:ConqueTerm_TerminalsString = ''$/;"	v
g:ConqueTerm_ToggleKey	bundle/conque-term/plugin/conque_term.vim	/^    let g:ConqueTerm_ToggleKey = '<F8>'$/;"	v
g:ConqueTerm_Version	bundle/conque-term/plugin/conque_term.vim	/^let g:ConqueTerm_Version = 210$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode = { 'Base' : {} }$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.Bookmark = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.Buffer = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.CallbackFile = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.CallbackItem = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.Dir = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.File = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.GivenCmd = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.GivenDir = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.GivenFile = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.MruCmd = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.MruFile = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.Tag = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderMode	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderMode.TaggedFile = copy(g:FuzzyFinderMode.Base)$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions = { 'Base':{}, 'Buffer':{}, 'File':{}, 'Dir':{},$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.abbrev_map         = {}$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.enumerating_limit  = 100$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.ignore_case        = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.info_file          = '~\/.vimfuzzyfinder'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.key_ignore_case    = '<C-g><C-g>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.key_next_mode      = '<C-t>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.key_open           = '<CR>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.key_open_split     = '<C-j>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.key_open_tab       = '<C-l>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.key_open_vsplit    = '<C-k>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.key_prev_mode      = '<C-y>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.lasting_cache      = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.learning_limit     = 100$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.max_menu_width     = 80$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.migemo_support     = 0$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.min_length         = 0$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Base.time_format        = '(%Y-%m-%d %H:%M:%S)'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Bookmark.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Bookmark.prompt           = '>Bookmark>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Bookmark.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Bookmark.reuse_window     = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Bookmark.searching_range  = 100$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Bookmark.smart_bs         = 0$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Bookmark.switch_order     = 60$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Buffer.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Buffer.mru_order        = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Buffer.prompt           = '>Buffer>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Buffer.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Buffer.reuse_window     = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Buffer.smart_bs         = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Buffer.switch_order     = 10$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.CallbackFile.excluded_path    = ''$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.CallbackFile.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.CallbackFile.prompt           = '>CallbackFile>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.CallbackFile.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.CallbackFile.smart_bs         = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.CallbackFile.switch_order     = -1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.CallbackItem.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.CallbackItem.prompt           = '>CallbackItem>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.CallbackItem.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.CallbackItem.smart_bs         = 0$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.CallbackItem.switch_order     = -1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Dir.excluded_path    = ''$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Dir.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Dir.prompt           = '>Dir>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Dir.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Dir.smart_bs         = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Dir.switch_order     = 30$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.File.excluded_path    = '\\v\\~$|\\.o$|\\.exe$|\\.bak$|\\.swp$'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.File.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.File.prompt           = '>File>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.File.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.File.reuse_window     = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.File.smart_bs         = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.File.switch_order     = 20$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenCmd.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenCmd.prompt           = '>GivenCmd>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenCmd.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenCmd.smart_bs         = 0$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenCmd.switch_order     = -1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenDir.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenDir.prompt           = '>GivenDir>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenDir.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenDir.smart_bs         = 0$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenDir.switch_order     = -1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenFile.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenFile.prompt           = '>GivenFile>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenFile.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenFile.reuse_window     = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenFile.smart_bs         = 0$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.GivenFile.switch_order     = -1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruCmd.excluded_command = '^$'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruCmd.max_item         = 200$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruCmd.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruCmd.prompt           = '>MruCmd>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruCmd.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruCmd.smart_bs         = 0$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruCmd.switch_order     = 50$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruFile.excluded_path    = '\\v\\~$|\\.bak$|\\.swp$'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruFile.max_item         = 200$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruFile.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruFile.prompt           = '>MruFile>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruFile.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruFile.reuse_window     = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruFile.smart_bs         = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.MruFile.switch_order     = 40$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Tag.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Tag.prompt           = '>Tag>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Tag.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Tag.smart_bs         = 0$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.Tag.switch_order     = 70$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.TaggedFile.mode_available   = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.TaggedFile.prompt           = '>TaggedFile>'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.TaggedFile.prompt_highlight = 'Question'$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.TaggedFile.reuse_window     = 1$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.TaggedFile.smart_bs         = 0$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder.vim	/^let g:FuzzyFinderOptions.TaggedFile.switch_order     = 80$/;"	v
g:FuzzyFinderOptions	plugin/fuzzyfinder_textmate.vim	/^  let g:FuzzyFinderOptions.TextMate = copy(g:FuzzyFinderOptions.File)$/;"	v
g:NERDTreeBookmark	plugin/NERD_tree.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeBookmark	src/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeDirNode	plugin/NERD_tree.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeDirNode	src/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	plugin/NERD_tree.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFileNode	src/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeIgnore	src/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreePath	plugin/NERD_tree.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePath	src/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeSortOrder	src/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:NERDTreeStatusline	src/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:SuperTabCompletionContexts	plugin/supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabContextDefaultCompletionType	plugin/supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabCrMapping	plugin/supertab.vim	/^    let g:SuperTabCrMapping = 1$/;"	v
g:SuperTabDefaultCompletionType	plugin/supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabLongestEnhanced	plugin/supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestHighlight	plugin/supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabMappingBackward	plugin/supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingForward	plugin/supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingTabLiteral	plugin/supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabNoCompleteAfter	plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['\\s']$/;"	v
g:SuperTabNoCompleteAfter	plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteBefore	plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabRetainCompletionDuration	plugin/supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:TMRU	src/vimtlib/plugin/tmru.vim	/^        let g:TMRU = ''$/;"	v
g:TMRU	src/vimtlib/plugin/tmru.vim	/^        let g:TMRU = get(tlib#cache#Get(g:tmru_file), 'tmru', '')$/;"	v
g:ackprg	plugin/ack.vim	/^	let g:ackprg="ack -H --nocolor --nogroup --column"$/;"	v
g:ackprg	src/ack.vim/plugin/ack.vim	/^	let g:ackprg="ack -H --nocolor --nogroup --column"$/;"	v
g:autoloaded_rails	bundle/vim-rails/autoload/rails.vim	/^let g:autoloaded_rails = '4.3'$/;"	v
g:autoloaded_rails	junk/rails.vim	/^let g:autoloaded_rails = '4.3'$/;"	v
g:bar	src/vimtlib/test/tlib.vim	/^let g:bar = 2$/;"	v
g:bufexplorer_version	plugin/bufexplorer.vim	/^let g:bufexplorer_version = "7.2.4"$/;"	v
g:calendar_action	src/vimtlib/autoload/pim.vim	/^        let g:calendar_action = 'pim#Calendar'$/;"	v
g:checksyntax	src/vimtlib/plugin/checksyntax.vim	/^let g:checksyntax = 5$/;"	v
g:checksyntax_alt_java	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_alt_java = 'javaCheckstyle'$/;"	v
g:checksyntax_alt_php	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_alt_php = 'phpp'$/;"	v
g:checksyntax_auto	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_auto = 1$/;"	v
g:checksyntax_auto_lua	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_auto_lua = 1$/;"	v
g:checksyntax_auto_php	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_auto_php = 1$/;"	v
g:checksyntax_auto_phpp	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_auto_phpp = g:checksyntax_auto_php$/;"	v
g:checksyntax_auto_ruby	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_auto_ruby = 0$/;"	v
g:checksyntax_auto_tex	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_auto_tex = 0$/;"	v
g:checksyntax_auto_viki	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_auto_viki = 0$/;"	v
g:checksyntax_cmd_java	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_cmd_java = '*CheckStyleJlint'$/;"	v
g:checksyntax_cmd_javascript	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_cmd_javascript = 'jsl -nofilelisting -nocontext -nosummary -nologo -process'$/;"	v
g:checksyntax_cmd_lua	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_cmd_lua = 'luac -p'$/;"	v
g:checksyntax_cmd_php	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_cmd_php  = 'php -l'$/;"	v
g:checksyntax_cmd_phpp	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_cmd_phpp = 'php -f'$/;"	v
g:checksyntax_cmd_ruby	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_cmd_ruby = 'ruby -c'$/;"	v
g:checksyntax_cmd_tex	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_cmd_tex = 'chktex -q -v0'$/;"	v
g:checksyntax_cmd_viki	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_cmd_viki = 'deplate -f null'$/;"	v
g:checksyntax_compiler_c	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_compiler_c = 'splint'$/;"	v
g:checksyntax_compiler_cpp	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_compiler_cpp = 'splint'$/;"	v
g:checksyntax_compiler_docbk	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_compiler_docbk = g:checksyntax_compiler_xml$/;"	v
g:checksyntax_compiler_html	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_compiler_html = 'tidy'$/;"	v
g:checksyntax_compiler_javaCheckstyle	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_compiler_javaCheckstyle = 'checkstyle'$/;"	v
g:checksyntax_compiler_xml	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_compiler_xml = 'xmllint'$/;"	v
g:checksyntax_efm_lua	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_efm_lua  = 'luac\\:\\ %f:%l:\\ %m'$/;"	v
g:checksyntax_efm_php	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_efm_php  = '%*[^:]: %m in %f on line %l'$/;"	v
g:checksyntax_efm_phpp	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_efm_phpp = g:checksyntax_efm_php$/;"	v
g:checksyntax_efm_tex	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_efm_tex  = '%f:%l:%m'$/;"	v
g:checksyntax_failrx	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_failrx = '\\ *\\(\\d \\f\\{-}:\\)\\?\\d\\{-}:'$/;"	v
g:checksyntax_okrx_javascript	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_okrx_javascript = '0 error(s), 0 warning(s)'$/;"	v
g:checksyntax_okrx_php	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_okrx_php = 'No syntax errors detected in '$/;"	v
g:checksyntax_okrx_phpp	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_okrx_phpp = g:checksyntax_okrx_php$/;"	v
g:checksyntax_okrx_ruby	src/vimtlib/plugin/checksyntax.vim	/^    let g:checksyntax_okrx_ruby = 'Syntax OK\\|No Errors'$/;"	v
g:cmdlinehelpIgnore	src/vimtlib/plugin/cmdlinehelp.vim	/^    let g:cmdlinehelpIgnore = 'sil\\%[ent]\\|verb\\%[ose]\\|debug' "{{{2$/;"	v
g:cmdlinehelpMapDown	src/vimtlib/plugin/cmdlinehelp.vim	/^    let g:cmdlinehelpMapDown = '<c-pagedown>'   "{{{2$/;"	v
g:cmdlinehelpMapUp	src/vimtlib/plugin/cmdlinehelp.vim	/^    let g:cmdlinehelpMapUp = '<c-pageup>'   "{{{2$/;"	v
g:cmdlinehelpMapView	src/vimtlib/plugin/cmdlinehelp.vim	/^    let g:cmdlinehelpMapView = '<c-o>'  "{{{2$/;"	v
g:cmdlinehelpPatterns	src/vimtlib/plugin/cmdlinehelp.vim	/^    let g:cmdlinehelpPatterns = {$/;"	v
g:cmdlinehelpPrefixes	src/vimtlib/plugin/cmdlinehelp.vim	/^    let g:cmdlinehelpPrefixes = ['cheat:']  "{{{2$/;"	v
g:cmdlinehelpTable	src/vimtlib/plugin/cmdlinehelp.vim	/^    let g:cmdlinehelpTable = {$/;"	v
g:cmdlinehelpTags	src/vimtlib/plugin/cmdlinehelp.vim	/^    let g:cmdlinehelpTags = join(split(globpath(&rtp, 'doc\/tags'), '\\n'), ',') "{{{2$/;"	v
g:colors_name	colors/af.vim	/^let g:colors_name="af"$/;"	v
g:colors_name	colors/billw.vim	/^let g:colors_name = "billw"$/;"	v
g:colors_name	colors/blackboard.vim	/^let g:colors_name = "blackboard"$/;"	v
g:colors_name	colors/darkrobot.vim	/^let g:colors_name="darkrobot"$/;"	v
g:colors_name	colors/darkspectrum.vim	/^let g:colors_name="darkspectrum"$/;"	v
g:colors_name	colors/deveiate.vim	/^let g:colors_name="deveiate"$/;"	v
g:colors_name	colors/github.vim	/^let g:colors_name = "github"$/;"	v
g:colors_name	colors/github256.vim	/^let g:colors_name="github256"$/;"	v
g:colors_name	colors/impact.vim	/^let g:colors_name="impact"$/;"	v
g:colors_name	colors/molokai.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	colors/monokai_modified.vim	/^let g:colors_name="molokai"$/;"	v
g:colors_name	colors/oldestone.vim	/^let g:colors_name = "oldstone"$/;"	v
g:colors_name	colors/railscasts.vim	/^let g:colors_name = "railscasts"$/;"	v
g:colors_name	colors/symfony.vim	/^let g:colors_name = "symfony"$/;"	v
g:colors_name	colors/telestar.vim	/^let g:colors_name = "telstar"$/;"	v
g:colors_name	colors/twilight.vim	/^let g:colors_name="twilight"$/;"	v
g:colors_name	colors/twilight2.vim	/^let g:colors_name="twilight"$/;"	v
g:colors_name	colors/void.vim	/^let g:colors_name="void"$/;"	v
g:colors_name	colors/watermark.vim	/^let g:colors_name="watermark"$/;"	v
g:colors_name	colors/zenburn.vim	/^let g:colors_name="zenburn"$/;"	v
g:command_t_loaded	plugin/command-t.vim	/^let g:command_t_loaded = 1$/;"	v
g:cucumber_languages	src/vim-cucumber/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:cucumber_languages	syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:delimitMate_excluded_ft	bundle/delimitMate/autoload/delimitMateTests.vim	/^	let g:delimitMate_excluded_ft = "vim"$/;"	v
g:did_ft	plugin/snipMate.vim	/^let g:did_ft = {}$/;"	v
g:did_ft	src/snipmate.vim/plugin/snipMate.vim	/^let g:did_ft = {}$/;"	v
g:eco_default_subtype	bundle/vim-coffee-script/syntax/eco.vim	/^  let g:eco_default_subtype = "html"$/;"	v
g:evalSelLastCmd	src/vimtlib/plugin/EvalSelection.vim	/^let g:evalSelLastCmd   = ""$/;"	v
g:evalSelLastCmdId	src/vimtlib/plugin/EvalSelection.vim	/^let g:evalSelLastCmdId = ""$/;"	v
g:evalSelectionLispCmdLine	src/vimtlib/plugin/EvalSelection.vim	/^            let g:evalSelectionLispCmdLine = 'clisp --quiet'$/;"	v
g:evalSelectionOCamlCmdLine	src/vimtlib/plugin/EvalSelection.vim	/^        let g:evalSelectionOCamlCmdLine = 'ocaml'$/;"	v
g:evalSelectionPager	src/vimtlib/plugin/EvalSelection.vim	/^    let g:evalSelectionPager = "gvim --servername GVIMPAGER --remote-silent"$/;"	v
g:evalSelectionPhpCmdLine	src/vimtlib/plugin/EvalSelection.vim	/^        let g:evalSelectionPhpCmdLine = 'php -a'$/;"	v
g:evalSelectionPluginMenu	src/vimtlib/plugin/EvalSelection.vim	/^    let g:evalSelectionPluginMenu = "Plugin.EvalSelection."$/;"	v
g:evalSelectionRCmdLine	src/vimtlib/plugin/EvalSelection.vim	/^            let g:evalSelectionRCmdLine = 'R --no-save --vanilla --ess'$/;"	v
g:evalSelectionRCmdLine	src/vimtlib/plugin/EvalSelection.vim	/^            let g:evalSelectionRCmdLine = 'Rterm.exe --no-save --vanilla --ess'$/;"	v
g:evalSelectionRubyDir	src/vimtlib/plugin/EvalSelection.vim	/^    let g:evalSelectionRubyDir = ""$/;"	v
g:evalSelectionSaveLog_r	src/vimtlib/plugin/EvalSelection.vim	/^    let g:evalSelectionSaveLog_r = "EvalSelection_r.log"$/;"	v
g:evalSelectionSchemeCmdLine	src/vimtlib/plugin/EvalSelection.vim	/^            let g:evalSelectionSchemeCmdLine = 'csi -quiet'$/;"	v
g:evalSelection_SPSS_DraftOutput	src/vimtlib/plugin/EvalSelection.vim	/^    let g:evalSelection_SPSS_DraftOutput = 0$/;"	v
g:foo	src/vimtlib/test/tlib.vim	/^let g:foo = 1$/;"	v
g:fugitive_git_executable	junk/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_git_executable	plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_git_executable	src/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:gist_browser_command	plugin/gist.vim	/^    let g:gist_browser_command = "!start rundll32 url.dll,FileProtocolHandler %URL%"$/;"	v
g:gist_browser_command	plugin/gist.vim	/^    let g:gist_browser_command = "firefox %URL% &"$/;"	v
g:gist_browser_command	plugin/gist.vim	/^    let g:gist_browser_command = "open %URL%"$/;"	v
g:gist_browser_command	plugin/gist.vim	/^    let g:gist_browser_command = "xdg-open %URL%"$/;"	v
g:gist_detect_filetype	plugin/gist.vim	/^  let g:gist_detect_filetype = 0$/;"	v
g:gist_open_browser_after_post	plugin/gist.vim	/^  let g:gist_open_browser_after_post = 0$/;"	v
g:gist_put_url_to_clipboard_after_post	plugin/gist.vim	/^  let g:gist_put_url_to_clipboard_after_post = 1$/;"	v
g:gist_show_privates	plugin/gist.vim	/^  let g:gist_show_privates = 0$/;"	v
g:haml_self_closing_tags	indent/haml.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:haml_self_closing_tags	src/vim-haml/indent/haml.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:hookcursormoved_linechange	src/vimtlib/plugin/hookcursormoved.vim	/^    let g:hookcursormoved_linechange = 'hookcursormoved#Test_linechange'   "{{{2$/;"	v
g:hookcursormoved_parenthesis	src/vimtlib/plugin/hookcursormoved.vim	/^    let g:hookcursormoved_parenthesis = 'hookcursormoved#Test_parenthesis'   "{{{2$/;"	v
g:hookcursormoved_parenthesis_round	src/vimtlib/plugin/hookcursormoved.vim	/^    let g:hookcursormoved_parenthesis_round = 'hookcursormoved#Test_parenthesis_round'   "{{{2$/;"	v
g:hookcursormoved_parenthesis_round_close	src/vimtlib/plugin/hookcursormoved.vim	/^    let g:hookcursormoved_parenthesis_round_close = 'hookcursormoved#Test_parenthesis_round_close'   "{{{2$/;"	v
g:hookcursormoved_parenthesis_round_open	src/vimtlib/plugin/hookcursormoved.vim	/^    let g:hookcursormoved_parenthesis_round_open = 'hookcursormoved#Test_parenthesis_round_open'   "{{{2$/;"	v
g:hookcursormoved_syntaxchange	src/vimtlib/plugin/hookcursormoved.vim	/^    let g:hookcursormoved_syntaxchange = 'hookcursormoved#Test_syntaxchange' "{{{2$/;"	v
g:hookcursormoved_syntaxleave	src/vimtlib/plugin/hookcursormoved.vim	/^    let g:hookcursormoved_syntaxleave = 'hookcursormoved#Test_syntaxleave'   "{{{2$/;"	v
g:hookcursormoved_syntaxleave_oneline	src/vimtlib/plugin/hookcursormoved.vim	/^    let g:hookcursormoved_syntaxleave_oneline = 'hookcursormoved#Test_syntaxleave_oneline'   "{{{2$/;"	v
g:inkpot_black_background	colors/inkpot.vim	/^    let g:inkpot_black_background = 0$/;"	v
g:inkpot_black_background	src/inkpot/colors/inkpot.vim	/^    let g:inkpot_black_background = 0$/;"	v
g:linglang_actions	src/vimtlib/plugin/linglang.vim	/^    let g:linglang_actions = {$/;"	v
g:loaded_Align	junk/Align.vim	/^let g:loaded_Align = "v35"$/;"	v
g:loaded_AlignMaps	junk/AlignMaps.vim	/^let g:loaded_AlignMaps= "v41"$/;"	v
g:loaded_AlignPlugin	junk/AlignPlugin.vim	/^let g:loaded_AlignPlugin = "v35"$/;"	v
g:loaded_bufsurfer	bundle/vim-bufsurf/plugin/bufsurf.vim	/^let g:loaded_bufsurfer = 1$/;"	v
g:loaded_cecutil	junk/cecutil.vim	/^let g:loaded_cecutil = "v18b"$/;"	v
g:loaded_colorchooser	plugin/colorx.vim	/^let g:loaded_colorchooser = 1$/;"	v
g:loaded_delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^let g:loaded_delimitMate = 1$/;"	v
g:loaded_delimitMate	junk/delimitMate.vim	/^let g:loaded_delimitMate = 1$/;"	v
g:loaded_fugitive	junk/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_fugitive	plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_fugitive	src/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_fuzzyfinder	plugin/fuzzyfinder.vim	/^let g:loaded_fuzzyfinder = 022203 " Version xx.xx.xx$/;"	v
g:loaded_gist_vim	plugin/gist.vim	/^let g:loaded_gist_vim = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	plugin/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	src/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_fs_menu	plugin/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_fs_menu	src/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_git_menu	plugin/nerdtree_plugin/git_menu.vim	/^let g:loaded_nerdtree_git_menu = 1$/;"	v
g:loaded_pathogen	autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_pathogen	src/vim-pathogen/autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_rails	bundle/vim-rails/plugin/rails.vim	/^let g:loaded_rails = 1$/;"	v
g:loaded_session	bundle/session.vim/plugin/session.vim	/^let g:loaded_session = 1$/;"	v
g:loaded_surround	bundle/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_surround	junk/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_togglebg	bundle/vim-colors-solarized/autoload/togglebg.vim	/^let g:loaded_togglebg = 1$/;"	v
g:loaded_vimball	autoload/vimball.vim	/^let g:loaded_vimball = "v26"$/;"	v
g:loaded_vimballPlugin	plugin/vimballPlugin.vim	/^let g:loaded_vimballPlugin = "v26"$/;"	v
g:loremipsum_files	src/vimtlib/plugin/loremipsum.vim	/^    let g:loremipsum_files = {}   "{{{2$/;"	v
g:loremipsum_marker	src/vimtlib/plugin/loremipsum.vim	/^    let g:loremipsum_marker = {$/;"	v
g:loremipsum_paragraph_template	src/vimtlib/plugin/loremipsum.vim	/^    let g:loremipsum_paragraph_template = {$/;"	v
g:loremipsum_words	src/vimtlib/plugin/loremipsum.vim	/^    let g:loremipsum_words = 100   "{{{2$/;"	v
g:netrw_cygwin	autoload/vimball.vim	/^    let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	autoload/vimball.vim	/^    let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	autoload/vimball.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:netrw_shq	autoload/vimball.vim	/^    let g:netrw_shq= "'"$/;"	v
g:netrw_shq	autoload/vimball.vim	/^    let g:netrw_shq= '"'$/;"	v
g:netrw_shq	autoload/vimball.vim	/^   let g:netrw_shq= "'"$/;"	v
g:netrw_shq	autoload/vimball.vim	/^   let g:netrw_shq= &shq$/;"	v
g:netrw_shq	autoload/vimball.vim	/^  let g:netrw_shq= g:vimball_shq$/;"	v
g:pimDayshift	src/vimtlib/plugin/pim.vim	/^let g:pimDayshift    = 60 * 60 * 24$/;"	v
g:pimExecAC	src/vimtlib/plugin/pim.vim	/^let g:pimExecAC      = 1$/;"	v
g:pimExtractline	src/vimtlib/plugin/pim.vim	/^let g:pimExtractline = 0$/;"	v
g:pimHome	src/vimtlib/plugin/pim.vim	/^    let g:pimHome = g:pimHome.'\/'$/;"	v
g:pimHome	src/vimtlib/plugin/pim.vim	/^    let g:pimHome = split(&rtp, ',')[0].'\/pim\/'$/;"	v
g:pimHome	src/vimtlib/plugin/pim.vim	/^let g:pimHome = s:CanonicFilename(g:pimHome)$/;"	v
g:pimIndex	src/vimtlib/plugin/pim.vim	/^let g:pimIndex       = g:pimHome . 'index\/'$/;"	v
g:pimLocale	src/vimtlib/plugin/pim.vim	/^let g:pimLocale      = g:pimHome . 'locale\/'$/;"	v
g:pimTemplates	src/vimtlib/plugin/pim.vim	/^let g:pimTemplates   = g:pimHome . 'templates\/'$/;"	v
g:quickfixsigns_balloon	src/vimtlib/plugin/quickfixsigns.vim	/^    let g:quickfixsigns_balloon = 1   "{{{2$/;"	v
g:quickfixsigns_lists	src/vimtlib/plugin/quickfixsigns.vim	/^    let g:quickfixsigns_lists = [$/;"	v
g:quickfixsigns_marks	src/vimtlib/plugin/quickfixsigns.vim	/^    let g:quickfixsigns_marks = split('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ<>', '\\zs') "{{{2$/;"	v
g:quickfixsigns_marks_def	src/vimtlib/plugin/quickfixsigns.vim	/^    let g:quickfixsigns_marks_def = {$/;"	v
g:quickfixsigns_max	src/vimtlib/plugin/quickfixsigns.vim	/^    let g:quickfixsigns_max = 100   "{{{2$/;"	v
g:rubycomplete_classes_in_global	autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_rails	autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rubycomplete_rails_proactive	autoload/rubycomplete.vim	/^    let g:rubycomplete_rails_proactive = 0$/;"	v
g:rubyredgreen_loaded	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^let g:rubyredgreen_loaded = 1$/;"	v
g:scaleFont	src/vimtlib/plugin/scalefont.vim	/^        let g:scaleFont='*-lucidatypewriter-medium-r-normal-*-#{SIZE}-180-*-*-m-*-*'$/;"	v
g:scaleFont	src/vimtlib/plugin/scalefont.vim	/^        let g:scaleFont='Lucida_Sans_Typewriter:h#{SIZE}:cANSI'$/;"	v
g:scaleFont	src/vimtlib/plugin/scalefont.vim	/^        let g:scaleFont='Luxi\\ Mono\\ #{SIZE}'$/;"	v
g:scaleFontAlwaysResetGuioptions	src/vimtlib/plugin/scalefont.vim	/^    let g:scaleFontAlwaysResetGuioptions = 1$/;"	v
g:scaleFontCols_0	src/vimtlib/plugin/scalefont.vim	/^let g:scaleFontCols_0  = &co$/;"	v
g:scaleFontConf	src/vimtlib/plugin/scalefont.vim	/^let g:scaleFontConf = {}$/;"	v
g:scaleFontLines_0	src/vimtlib/plugin/scalefont.vim	/^let g:scaleFontLines_0 = &lines$/;"	v
g:scaleFontMenu	src/vimtlib/plugin/scalefont.vim	/^    let g:scaleFontMenu = "Plugin.ScaleFont"$/;"	v
g:scaleFontSize	src/vimtlib/plugin/scalefont.vim	/^    let g:scaleFontSize=12$/;"	v
g:scaleFontSize_0	src/vimtlib/plugin/scalefont.vim	/^let g:scaleFontSize_0  = g:scaleFontSize$/;"	v
g:scaleFontWidth	src/vimtlib/plugin/scalefont.vim	/^    let g:scaleFontWidth = g:scaleFontSize$/;"	v
g:scaleFontWidth	src/vimtlib/plugin/scalefont.vim	/^    let g:scaleFontWidth=9$/;"	v
g:scaleFontWidth_0	src/vimtlib/plugin/scalefont.vim	/^let g:scaleFontWidth_0 = g:scaleFontWidth$/;"	v
g:scaleFontWinX_0	src/vimtlib/plugin/scalefont.vim	/^let g:scaleFontWinX_0  = -1$/;"	v
g:scaleFontWinY_0	src/vimtlib/plugin/scalefont.vim	/^let g:scaleFontWinY_0  = -1$/;"	v
g:scaleFont_0	src/vimtlib/plugin/scalefont.vim	/^let g:scaleFont_0      = g:scaleFont$/;"	v
g:scroll_colors	plugin/scrollcolor.vim	/^let g:scroll_colors = 1$/;"	v
g:session_autoload	bundle/session.vim/plugin/session.vim	/^  let g:session_autoload = 'prompt'$/;"	v
g:session_autosave	bundle/session.vim/plugin/session.vim	/^  let g:session_autosave = 'prompt'$/;"	v
g:session_default_to_last	bundle/session.vim/plugin/session.vim	/^  let g:session_default_to_last = 0$/;"	v
g:session_directory	bundle/session.vim/plugin/session.vim	/^    let g:session_directory = '~\/.vim\/sessions'$/;"	v
g:session_directory	bundle/session.vim/plugin/session.vim	/^    let g:session_directory = '~\\vimfiles\\sessions'$/;"	v
g:session_version	bundle/session.vim/plugin/session.vim	/^let g:session_version = '1.4.9'$/;"	v
g:setsyntax_options	src/vimtlib/plugin/setsyntax.vim	/^    let g:setsyntax_options = {}   "{{{2$/;"	v
g:setsyntax_options	src/vimtlib/plugin/setsyntax.vim	/^    let g:setsyntax_options['tex'] = {'^texMath': {'&l:tw': 0, '&l:spelllang': '""'}}$/;"	v
g:setsyntax_options	src/vimtlib/plugin/setsyntax.vim	/^    let g:setsyntax_options['viki'] = {'^texmath': {'&l:tw': 0, '&l:spelllang': '""'}}$/;"	v
g:shymenu_blacklist	src/vimtlib/plugin/shymenu.vim	/^    let g:shymenu_blacklist = []   "{{{2$/;"	v
g:shymenu_emenu	src/vimtlib/plugin/shymenu.vim	/^    let g:shymenu_emenu = !has('gui_running')   "{{{2$/;"	v
g:shymenu_items	src/vimtlib/plugin/shymenu.vim	/^    let g:shymenu_items = {}  "{{{2$/;"	v
g:shymenu_lines	src/vimtlib/plugin/shymenu.vim	/^    let g:shymenu_lines = 1   "{{{2$/;"	v
g:shymenu_modes	src/vimtlib/plugin/shymenu.vim	/^    let g:shymenu_modes = 'n'   "{{{2$/;"	v
g:shymenu_termalt	src/vimtlib/plugin/shymenu.vim	/^    let g:shymenu_termalt = !has('gui_running') "{{{2$/;"	v
g:shymenu_wildcharm	src/vimtlib/plugin/shymenu.vim	/^        let g:shymenu_wildcharm = '<c-t>'$/;"	v
g:shymenu_wildcharm	src/vimtlib/plugin/shymenu.vim	/^        let g:shymenu_wildcharm = nr2char(&wildcharm) "{{{2$/;"	v
g:shymenu_winpos_fullscreen	src/vimtlib/plugin/shymenu.vim	/^    let g:shymenu_winpos_fullscreen = '-\\d$'   "{{{2$/;"	v
g:space_loaded	plugin/space.vim	/^let g:space_loaded = 1$/;"	v
g:space_loaded	src/vim-space/plugin/space.vim	/^let g:space_loaded = 1$/;"	v
g:space_no_brace	plugin/space.vim	/^    let g:space_no_brace = 0$/;"	v
g:space_no_brace	src/vim-space/plugin/space.vim	/^    let g:space_no_brace = 0$/;"	v
g:space_no_character_movements	plugin/space.vim	/^    let g:space_no_character_movements = 0$/;"	v
g:space_no_character_movements	src/vim-space/plugin/space.vim	/^    let g:space_no_character_movements = 0$/;"	v
g:space_no_diff	plugin/space.vim	/^    let g:space_no_diff = 0$/;"	v
g:space_no_diff	src/vim-space/plugin/space.vim	/^    let g:space_no_diff = 0$/;"	v
g:space_no_folds	plugin/space.vim	/^    let g:space_no_folds = 0$/;"	v
g:space_no_folds	src/vim-space/plugin/space.vim	/^    let g:space_no_folds = 0$/;"	v
g:space_no_jump	plugin/space.vim	/^    let g:space_no_jump = 0$/;"	v
g:space_no_jump	src/vim-space/plugin/space.vim	/^    let g:space_no_jump = 0$/;"	v
g:space_no_method	plugin/space.vim	/^    let g:space_no_method = 0$/;"	v
g:space_no_method	src/vim-space/plugin/space.vim	/^    let g:space_no_method = 0$/;"	v
g:space_no_quickfix	plugin/space.vim	/^    let g:space_no_quickfix = 0$/;"	v
g:space_no_quickfix	src/vim-space/plugin/space.vim	/^    let g:space_no_quickfix = 0$/;"	v
g:space_no_search	plugin/space.vim	/^    let g:space_no_search = 0$/;"	v
g:space_no_search	src/vim-space/plugin/space.vim	/^    let g:space_no_search = 0$/;"	v
g:space_no_section	plugin/space.vim	/^    let g:space_no_section = 0$/;"	v
g:space_no_section	src/vim-space/plugin/space.vim	/^    let g:space_no_section = 0$/;"	v
g:spec_bar	src/vimtlib/spec/spec/spec.vim	/^let g:spec_bar = 1$/;"	v
g:spec_cwindow	src/vimtlib/plugin/spec.vim	/^    let g:spec_cwindow = 'cwindow'   "{{{2$/;"	v
g:spec_foo	src/vimtlib/spec/spec/speckiller.vim	/^    let g:spec_foo = "foo"$/;"	v
g:spec_option_sets	src/vimtlib/plugin/spec.vim	/^    let g:spec_option_sets = []   "{{{2$/;"	v
g:spec_qfl_len	src/vimtlib/spec/spec/spec.vim	/^let g:spec_qfl_len = len(getqflist())$/;"	v
g:spec_tassert_status	src/vimtlib/spec/tassert/tassert.vim	/^let g:spec_tassert_status = g:TASSERT$/;"	v
g:spec_tlib_list	src/vimtlib/spec/tlib/input.vim	/^let g:spec_tlib_list = [10, 20, 30, 40, 'a50', 'aa60', 'b70', 'ba80', 90]$/;"	v
g:tEchoPairStyle_indicate	src/vimtlib/plugin/tEchoPair.vim	/^    let g:tEchoPairStyle_indicate = []$/;"	v
g:tEchoPairStyle_inner	src/vimtlib/plugin/tEchoPair.vim	/^    let g:tEchoPairStyle_inner = ['lisp', 'scheme']$/;"	v
g:tEchoPairs	src/vimtlib/plugin/tEchoPair.vim	/^    let g:tEchoPairs = {$/;"	v
g:tabular_default_format	autoload/tabular.vim	/^  let g:tabular_default_format = "l1"$/;"	v
g:tabular_default_format	src/tabular/autoload/tabular.vim	/^  let g:tabular_default_format = "l1"$/;"	v
g:tabular_loaded	plugin/Tabular.vim	/^let g:tabular_loaded = 1$/;"	v
g:tabular_loaded	src/tabular/plugin/Tabular.vim	/^let g:tabular_loaded = 1$/;"	v
g:tbakCheck	src/vimtlib/plugin/tbak.vim	/^    let g:tbakCheck = 'diff -q -w -B "%s" "%s"'$/;"	v
g:tbakDiff	src/vimtlib/plugin/tbak.vim	/^    let g:tbakDiff = 'diff -w -B -u3 "%s" "%s" > "%s"'$/;"	v
g:tbibListFormat	src/vimtlib/plugin/tbibtools.vim	/^    let g:tbibListFormat = "#{author|editor|institution|organization}: #{title|booktitle} [#{keywords|keyword}] #{_id} #4{_lineno}"$/;"	v
g:tbibListFormat_get_id	src/vimtlib/plugin/tbibtools.vim	/^    let g:tbibListFormat_get_id = '\\s\\zs\\S\\{-}\\ze \\d\\+$'$/;"	v
g:tbibListFormat_get_lineno	src/vimtlib/plugin/tbibtools.vim	/^    let g:tbibListFormat_get_lineno = '\\d\\+$'$/;"	v
g:tbibListViewHandlers	src/vimtlib/plugin/tbibtools.vim	/^    let g:tbibListViewHandlers = [$/;"	v
g:tbibUseCache	src/vimtlib/plugin/tbibtools.vim	/^    let g:tbibUseCache = 1$/;"	v
g:tcalc_dir	src/vimtlib/plugin/tcalc.vim	/^    let g:tcalc_dir = fnamemodify('~\/.tcalc', ':p') "{{{2$/;"	v
g:tcalc_initialize	src/vimtlib/plugin/tcalc.vim	/^    let g:tcalc_initialize = '$/;"	v
g:tcalc_lines	src/vimtlib/plugin/tcalc.vim	/^    let g:tcalc_lines = 10 "{{{2$/;"	v
g:tcommentBlankLines	plugin/tComment.vim	/^    let g:tcommentBlankLines = 1$/;"	v
g:tcommentBlankLines	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentBlankLines = 1$/;"	v
g:tcommentBlockC	plugin/tComment.vim	/^    let g:tcommentBlockC = "\/*%s *\/\\n * "$/;"	v
g:tcommentBlockC	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentBlockC = "\/*%s *\/\\n * "$/;"	v
g:tcommentBlockC2	plugin/tComment.vim	/^    let g:tcommentBlockC2 = "\/**%s *\/\\n * "$/;"	v
g:tcommentBlockC2	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentBlockC2 = "\/**%s *\/\\n * "$/;"	v
g:tcommentBlockXML	plugin/tComment.vim	/^    let g:tcommentBlockXML = "<!--%s-->\\n  "$/;"	v
g:tcommentBlockXML	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentBlockXML = "<!--%s-->\\n  "$/;"	v
g:tcommentFileTypesDirty	plugin/tComment.vim	/^let g:tcommentFileTypesDirty = 1$/;"	v
g:tcommentFileTypesDirty	src/vimtlib/plugin/tComment.vim	/^let g:tcommentFileTypesDirty = 1$/;"	v
g:tcommentGuessFileType	plugin/tComment.vim	/^    let g:tcommentGuessFileType = 0$/;"	v
g:tcommentGuessFileType	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentGuessFileType = 0$/;"	v
g:tcommentGuessFileType_dsl	plugin/tComment.vim	/^    let g:tcommentGuessFileType_dsl = 'xml'$/;"	v
g:tcommentGuessFileType_dsl	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentGuessFileType_dsl = 'xml'$/;"	v
g:tcommentGuessFileType_html	plugin/tComment.vim	/^    let g:tcommentGuessFileType_html = 1$/;"	v
g:tcommentGuessFileType_html	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentGuessFileType_html = 1$/;"	v
g:tcommentGuessFileType_php	plugin/tComment.vim	/^    let g:tcommentGuessFileType_php = 'html'$/;"	v
g:tcommentGuessFileType_php	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentGuessFileType_php = 'html'$/;"	v
g:tcommentGuessFileType_tskeleton	plugin/tComment.vim	/^    let g:tcommentGuessFileType_tskeleton = 1$/;"	v
g:tcommentGuessFileType_tskeleton	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentGuessFileType_tskeleton = 1$/;"	v
g:tcommentGuessFileType_vim	plugin/tComment.vim	/^    let g:tcommentGuessFileType_vim = 1$/;"	v
g:tcommentGuessFileType_vim	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentGuessFileType_vim = 1$/;"	v
g:tcommentIgnoreTypes_php	plugin/tComment.vim	/^    let g:tcommentIgnoreTypes_php = 'sql'$/;"	v
g:tcommentIgnoreTypes_php	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentIgnoreTypes_php = 'sql'$/;"	v
g:tcommentInlineC	plugin/tComment.vim	/^    let g:tcommentInlineC = "\/* %s *\/"$/;"	v
g:tcommentInlineC	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentInlineC = "\/* %s *\/"$/;"	v
g:tcommentInlineXML	plugin/tComment.vim	/^    let g:tcommentInlineXML = "<!-- %s -->"$/;"	v
g:tcommentInlineXML	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentInlineXML = "<!-- %s -->"$/;"	v
g:tcommentMapLeader1	plugin/tComment.vim	/^    let g:tcommentMapLeader1 = '<c-_>'$/;"	v
g:tcommentMapLeader1	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentMapLeader1 = '<c-_>'$/;"	v
g:tcommentMapLeader2	plugin/tComment.vim	/^    let g:tcommentMapLeader2 = '<Leader>_'$/;"	v
g:tcommentMapLeader2	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentMapLeader2 = '<Leader>_'$/;"	v
g:tcommentMapLeaderOp1	plugin/tComment.vim	/^    let g:tcommentMapLeaderOp1 = 'gc'$/;"	v
g:tcommentMapLeaderOp1	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentMapLeaderOp1 = 'gc'$/;"	v
g:tcommentMapLeaderOp2	plugin/tComment.vim	/^    let g:tcommentMapLeaderOp2 = 'gC'$/;"	v
g:tcommentMapLeaderOp2	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentMapLeaderOp2 = 'gC'$/;"	v
g:tcommentOpModeExtra	plugin/tComment.vim	/^    let g:tcommentOpModeExtra = ''$/;"	v
g:tcommentOpModeExtra	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentOpModeExtra = ''$/;"	v
g:tcommentSyntaxMap	plugin/tComment.vim	/^    let g:tcommentSyntaxMap = {$/;"	v
g:tcommentSyntaxMap	src/vimtlib/plugin/tComment.vim	/^    let g:tcommentSyntaxMap = {$/;"	v
g:test_file	src/vimtlib/spec/spec/should_yield.vim	/^let g:test_file = expand('<sfile>:p:h') .'\/'$/;"	v
g:tgpgBackup	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgBackup = 1 "{{{2$/;"	v
g:tgpgCachePW	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgCachePW = 2 "{{{2$/;"	v
g:tgpgCmdPassphrase	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgCmdPassphrase = '--passphrase "%s"' "{{{2$/;"	v
g:tgpgCmdRecipient	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgCmdRecipient = '-r "%s"' "{{{2$/;"	v
g:tgpgInputsecret	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgInputsecret = 'inputsecret' "{{{2$/;"	v
g:tgpgMode	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgMode = 'symmetric' "{{{2$/;"	v
g:tgpgModes	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgModes = ['symmetric', 'encrypt', 'clearsign'] "{{{2$/;"	v
g:tgpgOptions	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgOptions = '-q --no-secmem-warning' "{{{2$/;"	v
g:tgpgPattern_clearsign	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgPattern_clearsign = '' "{{{2$/;"	v
g:tgpgPattern_encrypt	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgPattern_encrypt = g:tgpgMode == 'encrypt' ? '*.\\(gpg\\|asc\\|pgp\\)' : '' "{{{2$/;"	v
g:tgpgPattern_symmetric	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgPattern_symmetric = g:tgpgMode == 'symmetric' ? '*.\\(gpg\\|asc\\|pgp\\)' : '' "{{{2$/;"	v
g:tgpgRead_encrypt	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgRead_encrypt = '!%{GPG} %{G_OPTIONS} %{B_OPTIONS} %{PASSPHRASE} -d %{FILE}' "{{{2$/;"	v
g:tgpgRead_symmetric	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgRead_symmetric = '!%{GPG} %{G_OPTIONS} %{B_OPTIONS} %{PASSPHRASE} -d %{FILE}' "{{{2$/;"	v
g:tgpgSepRecipient	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgSepRecipient = ';|\/&' "{{{2$/;"	v
g:tgpgShellQuote	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgShellQuote = '&'.&shellxquote "{{{2$/;"	v
g:tgpgTempSuffix	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgTempSuffix = '.~tGpg~' "{{{2$/;"	v
g:tgpgWrite_clearsign	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgWrite_clearsign = '!%{GPG} %{G_OPTIONS} %{B_OPTIONS} %{PASSPHRASE} -o %{FILE} --clearsign' "{{{2$/;"	v
g:tgpgWrite_encrypt	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgWrite_encrypt = '!%{GPG} %{G_OPTIONS} %{RECIPIENTS} %{B_OPTIONS} -e -o %{FILE}' "{{{2$/;"	v
g:tgpgWrite_symmetric	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpgWrite_symmetric = '!%{GPG} %{G_OPTIONS} %{B_OPTIONS} %{PASSPHRASE} -o %{FILE} -c' "{{{2$/;"	v
g:tgpg_gpg_cmd	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpg_gpg_cmd = '\/usr\/bin\/gpg' "{{{2$/;"	v
g:tgpg_gpg_md5_check	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpg_gpg_md5_check = 'md5sum '. g:tgpg_gpg_cmd "{{{2$/;"	v
g:tgpg_gpg_md5_sum	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpg_gpg_md5_sum = '' "{{{2$/;"	v
g:tgpg_options	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpg_options = {'verbosefile': '', 'verbose': 0} "{{{2$/;"	v
g:tgpg_registers	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpg_registers = '"-\/_*+' "{{{2$/;"	v
g:tgpg_timeout	src/vimtlib/plugin/tGpg.vim	/^    let g:tgpg_timeout = 1800 "{{{2$/;"	v
g:timer_enabled	bundle/session.vim/autoload/xolox/misc/timer.vim	/^  let g:timer_enabled = 0$/;"	v
g:timer_verbosity	bundle/session.vim/autoload/xolox/misc/timer.vim	/^  let g:timer_verbosity = 1$/;"	v
g:tmarks_handlers	src/vimtlib/plugin/tmarks.vim	/^    let g:tmarks_handlers = [$/;"	v
g:tmboxbrowser_attachments_dir	src/vimtlib/plugin/tmboxbrowser.vim	/^    let g:tmboxbrowser_attachments_dir = resolve(fnamemodify(tempname(), ':p:h'))$/;"	v
g:tmboxbrowser_attachments_filter	src/vimtlib/plugin/tmboxbrowser.vim	/^    let g:tmboxbrowser_attachments_filter = [$/;"	v
g:tmboxbrowser_convert_text_html	src/vimtlib/plugin/tmboxbrowser.vim	/^    let g:tmboxbrowser_convert_text_html = '!w3m -dump -T text\/html'$/;"	v
g:tmboxbrowser_decode_base64	src/vimtlib/plugin/tmboxbrowser.vim	/^    let g:tmboxbrowser_decode_base64 = '!base64 -i -d %s > %s'$/;"	v
g:tmboxbrowser_decode_jpeg	src/vimtlib/plugin/tmboxbrowser.vim	/^    let g:tmboxbrowser_decode_jpeg = '!java -jar jave5.jar image2ascii %s algorithm=edge_detection > %s'$/;"	v
g:tmboxbrowser_path	src/vimtlib/plugin/tmboxbrowser.vim	/^    let g:tmboxbrowser_path = ''$/;"	v
g:tmboxbrowser_sort	src/vimtlib/plugin/tmboxbrowser.vim	/^    let g:tmboxbrowser_sort = '-'$/;"	v
g:tmruEvents	src/vimtlib/plugin/tmru.vim	/^    let g:tmruEvents = 'BufWritePost,BufReadPost' "{{{2$/;"	v
g:tmruExclude	src/vimtlib/plugin/tmru.vim	/^    let g:tmruExclude = '\/te\\?mp\/\\|vim.\\{-}\/\\(doc\\|cache\\)\/\\|__.\\{-}__$\\|'.$/;"	v
g:tmruMenu	src/vimtlib/plugin/tmru.vim	/^    let g:tmruMenu = 'File.M&RU.' "{{{2$/;"	v
g:tmruMenuSize	src/vimtlib/plugin/tmru.vim	/^    let g:tmruMenuSize = 20 "{{{2$/;"	v
g:tmruSize	src/vimtlib/plugin/tmru.vim	/^    let g:tmruSize = 50 "{{{2$/;"	v
g:tmru_file	src/vimtlib/plugin/tmru.vim	/^        let g:tmru_file = ''$/;"	v
g:tmru_file	src/vimtlib/plugin/tmru.vim	/^        let g:tmru_file = tlib#cache#Filename('tmru', 'files', 1) "{{{2$/;"	v
g:tmru_ignorecase	src/vimtlib/plugin/tmru.vim	/^    let g:tmru_ignorecase = !has('fname_case') "{{{2$/;"	v
g:tmru_world	src/vimtlib/plugin/tmru.vim	/^    let g:tmru_world = tlib#World#New({$/;"	v
g:toptions	src/vimtlib/macros/toptions.vim	/^let g:toptions = {}$/;"	v
g:toptions_etc	src/vimtlib/macros/toptions.vim	/^let g:toptions_etc = []$/;"	v
g:toptions_labels	src/vimtlib/macros/toptions.vim	/^let g:toptions_labels = {$/;"	v
g:tortoiseSvnCmd	src/vimtlib/plugin/TortoiseSVN.vim	/^        let g:tortoiseSvnCmd = 'C:\\Programme\\TortoiseSVN\\bin\\TortoiseProc.exe'$/;"	v
g:tortoiseSvnCmd	src/vimtlib/plugin/TortoiseSVN.vim	/^        let g:tortoiseSvnCmd = '\/cygdrive\/c\/Programme\/TortoiseSVN\/bin\/TortoiseProc.exe'$/;"	v
g:tortoiseSvnCommitOnce	src/vimtlib/plugin/TortoiseSVN.vim	/^    let g:tortoiseSvnCommitOnce = 0$/;"	v
g:tortoiseSvnDebug	src/vimtlib/plugin/TortoiseSVN.vim	/^    let g:tortoiseSvnDebug = 0$/;"	v
g:tortoiseSvnExclude	src/vimtlib/plugin/TortoiseSVN.vim	/^    let g:tortoiseSvnExclude = '\\~$'$/;"	v
g:tortoiseSvnInstallAutoCmd	src/vimtlib/plugin/TortoiseSVN.vim	/^    let g:tortoiseSvnInstallAutoCmd = 0$/;"	v
g:tortoiseSvnInstallAutoCmd	src/vimtlib/plugin/TortoiseSVN.vim	/^    let g:tortoiseSvnInstallAutoCmd = 1$/;"	v
g:tortoiseSvnMenuPrefix	src/vimtlib/plugin/TortoiseSVN.vim	/^    let g:tortoiseSvnMenuPrefix = 'Plugin.&TortoiseSVN.'$/;"	v
g:tortoiseSvnStartCmd	src/vimtlib/plugin/TortoiseSVN.vim	/^    let g:tortoiseSvnStartCmd = &shell =~ 'sh' ? 'cygstart' : 'start'$/;"	v
g:tregisters_handlers	src/vimtlib/plugin/tregisters.vim	/^    let g:tregisters_handlers = [$/;"	v
g:trulerformat0	src/vimtlib/plugin/tstatus.vim	/^let g:trulerformat0=&rulerformat$/;"	v
g:trulerformat1	src/vimtlib/plugin/tstatus.vim	/^let g:trulerformat1='%-010.25(%lx%c%V %P%R%M%W%)'$/;"	v
g:tselectbuffer_handlers	src/vimtlib/plugin/tselectbuffer.vim	/^    let g:tselectbuffer_handlers = [$/;"	v
g:tselectfiles_favourites	src/vimtlib/plugin/tselectfiles.vim	/^        let g:tselectfiles_favourites = ['c:\/', 'd:\/']$/;"	v
g:tselectfiles_favourites	src/vimtlib/plugin/tselectfiles.vim	/^        let g:tselectfiles_favourites = []$/;"	v
g:tselectfiles_hidden_rx	src/vimtlib/plugin/tselectfiles.vim	/^let g:tselectfiles_hidden_rx = substitute(g:tselectfiles_hidden_rx, '\/', '\\\\[\\\\\/]', 'g')$/;"	v
g:tskelBitGroup_bbcode	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelBitGroup_bbcode = ['bbcode', 'tex']$/;"	v
g:tskelBitGroup_html	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelBitGroup_html = ['html', 'html_common']$/;"	v
g:tskelBitGroup_java	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelBitGroup_java = ['java', 'html_common']$/;"	v
g:tskelBitGroup_php	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelBitGroup_php  = ['php', 'html', 'html_common']$/;"	v
g:tskelBitGroup_viki	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelBitGroup_viki = ['tex', 'viki']$/;"	v
g:tskelBitGroup_xslt	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelBitGroup_xslt = ['xslt', 'xml']$/;"	v
g:tskelBitsDir	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelBitsDir = g:tskelDir .'bits\/'$/;"	v
g:tskelBitsIgnore	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelBitsIgnore = tlib#rx#Suffixes()   "{{{2$/;"	v
g:tskelDir	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelDir = get(split(globpath(&rtp, 'skeletons\/'), '\\n'), 0, '')$/;"	v
g:tskelDir	src/vimtlib/plugin/tSkeleton.vim	/^let g:tskelDir = tlib#dir#CanonicName(g:tskelDir)$/;"	v
g:tskelHyperComplete	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelHyperComplete = {'use_completefunc': 1, 'scan_words': 1, 'scan_tags': 1}$/;"	v
g:tskelHyperType	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelHyperType = 'query'   "{{{2$/;"	v
g:tskelLicense	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelLicense = 'GPL (see http:\/\/www.gnu.org\/licenses\/gpl.txt)'$/;"	v
g:tskelMapHyperComplete	src/vimtlib/plugin/tSkeleton.vim	/^        let g:tskelMapHyperComplete = ''$/;"	v
g:tskelMapHyperComplete	src/vimtlib/plugin/tSkeleton.vim	/^        let g:tskelMapHyperComplete = '<c-space>'$/;"	v
g:tskelMapsDir	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelMapsDir = g:tskelDir .'map\/'$/;"	v
g:tskelMapsDir	src/vimtlib/plugin/tSkeleton.vim	/^let g:tskelMapsDir = tlib#dir#CanonicName(g:tskelDir)$/;"	v
g:tskelQueryType	src/vimtlib/plugin/tSkeleton.vim	/^        let g:tskelQueryType = 'query'$/;"	v
g:tskelTypes	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskelTypes = ['skeleton', 'mini']$/;"	v
g:tskel_completions	src/vimtlib/plugin/tSkeleton.vim	/^    let g:tskel_completions = {$/;"	v
g:tskeleton_SetFiletype	src/vimtlib/plugin/tSkeleton.vim	/^let g:tskeleton_SetFiletype = 1$/;"	v
g:tstatusline0	src/vimtlib/plugin/tstatus.vim	/^let g:tstatusline0='%1*[%{winnr()}:%02n]%* %2t %(%M%R%H%W%k%) %=%3*<%l,%c%V,%p%%>%*'$/;"	v
g:tstatusline1	src/vimtlib/plugin/tstatus.vim	/^let g:tstatusline1='%1*[%{winnr()}:%02n]%* %2t %(%M%R%H%W%k%) %=%{TOptionsSummary()} %3*<%l,%c%V,%p%%>%*'$/;"	v
g:ttagecho_balloon_limit	src/vimtlib/plugin/ttagecho.vim	/^    let g:ttagecho_balloon_limit = '&lines * 2 \/ 3'   "{{{2$/;"	v
g:ttagecho_balloon_patterns	src/vimtlib/plugin/ttagecho.vim	/^    let g:ttagecho_balloon_patterns = g:ttagecho_parentheses_patterns  "{{{2$/;"	v
g:ttagecho_char_rx	src/vimtlib/plugin/ttagecho.vim	/^    let g:ttagecho_char_rx = {$/;"	v
g:ttagecho_matchbeginning	src/vimtlib/plugin/ttagecho.vim	/^    let g:ttagecho_matchbeginning = 0   "{{{2$/;"	v
g:ttagecho_parentheses_patterns	src/vimtlib/plugin/ttagecho.vim	/^    let g:ttagecho_parentheses_patterns = [$/;"	v
g:ttagecho_restore_showmode	src/vimtlib/plugin/ttagecho.vim	/^    let g:ttagecho_restore_showmode = 0 "{{{2$/;"	v
g:ttagecho_tagwidth	src/vimtlib/plugin/ttagecho.vim	/^    let g:ttagecho_tagwidth = '&co \/ 3'  "{{{2$/;"	v
g:vikiAnchorNameRx	src/vimtlib/plugin/viki.vim	/^    let g:vikiAnchorNameRx = '' "{{{2$/;"	v
g:vikiDefNil	src/vimtlib/plugin/viki.vim	/^let g:vikiDefNil  = ''$/;"	v
g:vikiDefSep	src/vimtlib/plugin/viki.vim	/^let g:vikiDefSep  = "\\n"$/;"	v
g:vikiEnabled	src/vimtlib/plugin/viki.vim	/^    let g:vikiEnabled = 1$/;"	v
g:vikiFoldsContext	src/vimtlib/plugin/viki.vim	/^    let g:vikiFoldsContext = [2, 2, 2, 2]$/;"	v
g:vikiHCM	src/vimtlib/plugin/viki.vim	/^    let g:vikiHCM = ['syntaxleave_oneline']$/;"	v
g:vikiHyperWordsFiles	src/vimtlib/plugin/viki.vim	/^    let g:vikiHyperWordsFiles = [$/;"	v
g:vikiLowerCharacters	src/vimtlib/plugin/viki.vim	/^    let g:vikiLowerCharacters = "a-z"$/;"	v
g:vikiMapFunctionality	src/vimtlib/plugin/viki.vim	/^    let g:vikiMapFunctionality      = 'ALL'$/;"	v
g:vikiMapFunctionalityMinor	src/vimtlib/plugin/viki.vim	/^    let g:vikiMapFunctionalityMinor = 'f b p mf mb tF c q e'$/;"	v
g:vikiMenuLevel	src/vimtlib/plugin/viki.vim	/^    let g:vikiMenuLevel = 1   "{{{2$/;"	v
g:vikiMenuPrefix	src/vimtlib/plugin/viki.vim	/^    let g:vikiMenuPrefix = "Plugin.Viki."$/;"	v
g:vikiOpenFileWith_ANY	src/vimtlib/plugin/viki.vim	/^        let g:vikiOpenFileWith_ANY = "exec 'silent ! start \\"\\" '. shellescape('%{FILE}')"$/;"	v
g:vikiOpenFileWith_ANY	src/vimtlib/plugin/viki.vim	/^        let g:vikiOpenFileWith_ANY = "exec 'silent !'. g:netrw_browsex_viewer .' '. shellescape('%{FILE}')"$/;"	v
g:vikiOpenFileWith_ANY	src/vimtlib/plugin/viki.vim	/^        let g:vikiOpenFileWith_ANY = "exec 'silent !gnome-open '. shellescape('%{FILE}')"$/;"	v
g:vikiOpenFileWith_ANY	src/vimtlib/plugin/viki.vim	/^        let g:vikiOpenFileWith_ANY = "exec 'silent !kfmclient exec '. shellescape('%{FILE}')"$/;"	v
g:vikiOpenFileWith_ANY	src/vimtlib/plugin/viki.vim	/^        let g:vikiOpenFileWith_ANY = "exec 'silent !open '. shellescape('%{FILE}')"$/;"	v
g:vikiOpenFileWith_ws	src/vimtlib/plugin/viki.vim	/^    let g:vikiOpenFileWith_ws = "call VikiOpenAsWorkspace('%{FILE}')"$/;"	v
g:vikiOpenUrlWith_ANY	src/vimtlib/plugin/viki.vim	/^        let g:vikiOpenUrlWith_ANY = "exec 'silent !gnome-open '. shellescape('%{URL}')"$/;"	v
g:vikiOpenUrlWith_ANY	src/vimtlib/plugin/viki.vim	/^        let g:vikiOpenUrlWith_ANY = "exec 'silent !kfmclient exec '. shellescape('%{URL}')"$/;"	v
g:vikiOpenUrlWith_ANY	src/vimtlib/plugin/viki.vim	/^        let g:vikiOpenUrlWith_ANY = "exec 'silent !open '. escape('%{URL}', ' &!%')"$/;"	v
g:vikiOpenUrlWith_ANY	src/vimtlib/plugin/viki.vim	/^        let g:vikiOpenUrlWith_ANY = "exec 'silent !rundll32 url.dll,FileProtocolHandler '. shellescape('%{URL}')"$/;"	v
g:vikiOpenUrlWith_file	src/vimtlib/plugin/viki.vim	/^    let g:vikiOpenUrlWith_file="call VikiOpenFileUrl('%{URL}')"$/;"	v
g:vikiOpenUrlWith_mailbox	src/vimtlib/plugin/viki.vim	/^    let g:vikiOpenUrlWith_mailbox="call VikiOpenMailbox('%{URL}')"$/;"	v
g:vikiPostFindAnchor	src/vimtlib/plugin/viki.vim	/^    let g:vikiPostFindAnchor = 'norm! zz'$/;"	v
g:vikiPromote	src/vimtlib/plugin/viki.vim	/^    let g:vikiPromote = 0$/;"	v
g:vikiSelfRef	src/vimtlib/plugin/viki.vim	/^let g:vikiSelfRef = '.'$/;"	v
g:vikiSpecialFiles	src/vimtlib/plugin/viki.vim	/^    let g:vikiSpecialFiles = [$/;"	v
g:vikiSpecialFilesExceptions	src/vimtlib/plugin/viki.vim	/^    let g:vikiSpecialFilesExceptions = ""$/;"	v
g:vikiSpecialProtocols	src/vimtlib/plugin/viki.vim	/^    let g:vikiSpecialProtocols = 'https\\?\\|ftps\\?\\|nntp\\|mailto\\|mailbox\\|file'$/;"	v
g:vikiSpecialProtocolsExceptions	src/vimtlib/plugin/viki.vim	/^    let g:vikiSpecialProtocolsExceptions = ""$/;"	v
g:vikiUpperCharacters	src/vimtlib/plugin/viki.vim	/^    let g:vikiUpperCharacters = "A-Z"$/;"	v
g:vikiUrlRestRx	src/vimtlib/plugin/viki.vim	/^    let g:vikiUrlRestRx = '['. g:vikiLowerCharacters . g:vikiUpperCharacters .'0-9?%_=&+-]*'  "{{{2$/;"	v
g:viki_highlight_hyperlink_dark	src/vimtlib/plugin/viki.vim	/^    let g:viki_highlight_hyperlink_dark = 'term=underline cterm=underline gui=underline ctermfg=LightBlue guifg=#bfbfff'$/;"	v
g:viki_highlight_hyperlink_light	src/vimtlib/plugin/viki.vim	/^    let g:viki_highlight_hyperlink_light = 'term=underline cterm=underline gui=underline ctermfg=DarkBlue guifg=DarkBlue'$/;"	v
g:viki_highlight_inexistent_dark	src/vimtlib/plugin/viki.vim	/^    let g:viki_highlight_inexistent_dark = 'term=underline cterm=underline gui=underline ctermfg=Red guifg=Red'$/;"	v
g:viki_highlight_inexistent_light	src/vimtlib/plugin/viki.vim	/^    let g:viki_highlight_inexistent_light = 'term=underline cterm=underline gui=underline ctermfg=DarkRed guifg=DarkRed'$/;"	v
g:viki_intervikis	src/vimtlib/plugin/viki.vim	/^    let g:viki_intervikis = {}   "{{{2$/;"	v
g:vimball_mkdir	autoload/vimball.vim	/^   let g:vimball_mkdir= "makedir"$/;"	v
g:vimball_mkdir	autoload/vimball.vim	/^   let g:vimball_mkdir= "mkdir"$/;"	v
g:vimball_mkdir	autoload/vimball.vim	/^   let g:vimball_mkdir= g:netrw_local_mkdir$/;"	v
g:vimball_path_escape	autoload/vimball.vim	/^  let g:vimball_path_escape= ' ;#%'$/;"	v
g:xolox_message_buffer	bundle/session.vim/autoload/xolox/misc/msg.vim	/^  let g:xolox_message_buffer = 100$/;"	v
g:xolox_messages	bundle/session.vim/autoload/xolox/misc/msg.vim	/^  let g:xolox_messages = []$/;"	v
g:yankring_clipboard_monitor	plugin/yankring.vim	/^    let g:yankring_clipboard_monitor = (has('clipboard')?1:0)$/;"	v
g:yankring_default_menu_mode	plugin/yankring.vim	/^    let g:yankring_default_menu_mode = 3$/;"	v
g:yankring_del_v_key	plugin/yankring.vim	/^    let g:yankring_del_v_key = 'd x'$/;"	v
g:yankring_dot_repeat_yank	plugin/yankring.vim	/^    let g:yankring_dot_repeat_yank = (&cpoptions=~'y'?1:0)$/;"	v
g:yankring_enabled	plugin/yankring.vim	/^    let g:yankring_enabled = 1$/;"	v
g:yankring_history_dir	plugin/yankring.vim	/^    let g:yankring_history_dir = expand('$HOME')$/;"	v
g:yankring_history_dir	plugin/yankring.vim	/^    let g:yankring_history_dir = expand(g:yankring_history_dir)$/;"	v
g:yankring_history_file	plugin/yankring.vim	/^    let g:yankring_history_file = 'yankring_history'$/;"	v
g:yankring_ignore_duplicate	plugin/yankring.vim	/^    let g:yankring_ignore_duplicate = 1$/;"	v
g:yankring_ignore_operator	plugin/yankring.vim	/^    let g:yankring_ignore_operator = 'g~ gu gU ! = gq g? > < zf g@'$/;"	v
g:yankring_ignore_operator	plugin/yankring.vim	/^let g:yankring_ignore_operator = ' '.g:yankring_ignore_operator.' '$/;"	v
g:yankring_manage_numbered_reg	plugin/yankring.vim	/^    let g:yankring_manage_numbered_reg = 0$/;"	v
g:yankring_map_dot	plugin/yankring.vim	/^    let g:yankring_map_dot = 1$/;"	v
g:yankring_max_display	plugin/yankring.vim	/^    let g:yankring_max_display = 0$/;"	v
g:yankring_max_element_length	plugin/yankring.vim	/^    let g:yankring_max_element_length = 1048576$/;"	v
g:yankring_max_history	plugin/yankring.vim	/^    let g:yankring_max_history = 100$/;"	v
g:yankring_min_element_length	plugin/yankring.vim	/^    let g:yankring_min_element_length = 1$/;"	v
g:yankring_n_keys	plugin/yankring.vim	/^        let g:yankring_n_keys = 'Y D x X'$/;"	v
g:yankring_n_keys	plugin/yankring.vim	/^        let g:yankring_n_keys = 'x yy dd yw dw ye de yE dE yiw diw yaw daw y$ d$ Y D yG dG ygg dgg'$/;"	v
g:yankring_o_keys	plugin/yankring.vim	/^    let g:yankring_o_keys  = 'b B w W e E d h j k l H M L y G ^ 0 $ , ;'$/;"	v
g:yankring_o_keys	plugin/yankring.vim	/^    let g:yankring_o_keys .= ' g_  g^ gm g$ gk gj gg ge gE - + _ '$/;"	v
g:yankring_o_keys	plugin/yankring.vim	/^    let g:yankring_o_keys .= ' iw iW aw aW as is ap ip a] a[ i] i[ a) a( ab i) i( ib a> a< i> i< at it a} a{ aB i} i{ iB a" a'' a` i" i'' i`'$/;"	v
g:yankring_paste_check_default_buffer	plugin/yankring.vim	/^    let g:yankring_paste_check_default_buffer = 1$/;"	v
g:yankring_paste_n_akey	plugin/yankring.vim	/^    let g:yankring_paste_n_akey = 'p'$/;"	v
g:yankring_paste_n_bkey	plugin/yankring.vim	/^    let g:yankring_paste_n_bkey = 'P'$/;"	v
g:yankring_paste_using_g	plugin/yankring.vim	/^    let g:yankring_paste_using_g = 1$/;"	v
g:yankring_paste_v_akey	plugin/yankring.vim	/^    let g:yankring_paste_v_akey = 'p'$/;"	v
g:yankring_paste_v_bkey	plugin/yankring.vim	/^    let g:yankring_paste_v_bkey = 'P'$/;"	v
g:yankring_persist	plugin/yankring.vim	/^    let g:yankring_persist = 1$/;"	v
g:yankring_replace_n_nkey	plugin/yankring.vim	/^    let g:yankring_replace_n_nkey = '<C-N>'$/;"	v
g:yankring_replace_n_pkey	plugin/yankring.vim	/^    let g:yankring_replace_n_pkey = '<C-P>'$/;"	v
g:yankring_share_between_instances	plugin/yankring.vim	/^    let g:yankring_share_between_instances = 1$/;"	v
g:yankring_v_key	plugin/yankring.vim	/^    let g:yankring_v_key = 'y'$/;"	v
g:yankring_window_auto_close	plugin/yankring.vim	/^    let g:yankring_window_auto_close = 1$/;"	v
g:yankring_window_height	plugin/yankring.vim	/^    let g:yankring_window_height = 8$/;"	v
g:yankring_window_increment	plugin/yankring.vim	/^    let g:yankring_window_increment = 50$/;"	v
g:yankring_window_use_bottom	plugin/yankring.vim	/^    let g:yankring_window_use_bottom = 1$/;"	v
g:yankring_window_use_horiz	plugin/yankring.vim	/^    let g:yankring_window_use_horiz = 1$/;"	v
g:yankring_window_use_right	plugin/yankring.vim	/^    let g:yankring_window_use_right = 1$/;"	v
g:yankring_window_use_separate	plugin/yankring.vim	/^    let g:yankring_window_use_separate = 1$/;"	v
g:yankring_window_width	plugin/yankring.vim	/^    let g:yankring_window_width = 30$/;"	v
g:yankring_zap_keys	plugin/yankring.vim	/^    let g:yankring_zap_keys = 'f F t T \/ ? @'$/;"	v
g;	plugin/space.vim	/^    noremap <expr> <silent> g; <SID>setup_space("jump", "g;")$/;"	m
g;	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> g; <SID>setup_space("jump", "g;")$/;"	m
gS	bundle/vim-surround/plugin/surround.vim	/^    vmap    gS   <Plug>VgSurround$/;"	m
gcap	src/vimtlib/plugin/tGpg.vim	/^        let gcap = toupper(g[0]).g[1:-1]$/;"	v
getPath	plugin/NERD_tree.vim	/^function! s:getPath(ln)$/;"	f
getPath	src/nerdtree/plugin/NERD_tree.vim	/^function! s:getPath(ln)$/;"	f
getTreeWinNum	plugin/NERD_tree.vim	/^function! s:getTreeWinNum()$/;"	f
getTreeWinNum	src/nerdtree/plugin/NERD_tree.vim	/^function! s:getTreeWinNum()$/;"	f
get_args	src/vimtlib/ruby/tcalc.rb	/^    def get_args(from, to)$/;"	f
get_bool	ruby/command-t/controller.rb	/^    def get_bool name$/;"	f	class:CommandT.Controller
get_bool	ruby/command-t/settings.rb	/^    def get_bool setting$/;"	f	class:CommandT.Settings
get_buffer_info	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def get_buffer_info(self):$/;"	m	class:ConqueSoleSubprocess
get_buffer_line	bundle/conque-term/autoload/conque_term/conque.py	/^    def get_buffer_line(self, line):$/;"	m	class:Conque
get_buffer_line	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def get_buffer_line(self, line):$/;"	m	class:ConqueScreen
get_buffer_line	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def get_buffer_line(self, line):$/;"	m	class:ConqueSole
get_cursor_highlight	ruby/command-t/match_window.rb	/^    def get_cursor_highlight$/;"	f	class:CommandT.MatchWindow
get_list_or_string	ruby/command-t/controller.rb	/^    def get_list_or_string name$/;"	f	class:CommandT.Controller
get_name	bundle/session.vim/autoload/xolox/session.vim	/^function! s:get_name(name, use_default) " {{{2$/;"	f
get_new_output	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def get_new_output(self, lines, update_top, stats):$/;"	m	class:ConqueSole
get_number	ruby/command-t/controller.rb	/^    def get_number name$/;"	f	class:CommandT.Controller
get_number	ruby/command-t/settings.rb	/^    def get_number setting$/;"	f	class:CommandT.Settings
get_real_idx	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def get_real_idx(self, line):$/;"	m	class:ConqueScreen
get_screen_text	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def get_screen_text(self):$/;"	m	class:ConqueSoleSubprocess
get_stats	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    def get_stats(self):$/;"	m	class:ConqueSoleWrapper
get_string	ruby/command-t/controller.rb	/^    def get_string name$/;"	f	class:CommandT.Controller
get_tcalc	src/vimtlib/ruby/tcalc.rb	/^        def get_tcalc$/;"	f	class:TCalc
get_top	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def get_top(self):$/;"	m	class:ConqueScreen
get_word	src/vimtlib/ruby/tcalc.rb	/^    def get_word(word)$/;"	f	class:TCalc
getchar	bundle/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar	junk/surround.vim	/^function! s:getchar()$/;"	f
getopt	bundle/vim-rails/autoload/rails.vim	/^function! s:getopt(opt,...)$/;"	f
getopt	junk/rails.vim	/^function! s:getopt(opt,...)$/;"	f
getpidfor	bundle/vim-rails/autoload/rails.vim	/^function! s:getpidfor(bind,port)$/;"	f
getpidfor	junk/rails.vim	/^function! s:getpidfor(bind,port)$/;"	f
gg	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal gg$/;"	m
ggVG"_d	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal ggVG"_d$/;"	m
grey_color	colors/github256.vim	/^	fun <SID>grey_color(n)$/;"	f
grey_level	colors/github256.vim	/^	fun <SID>grey_level(n)$/;"	f
grey_number	colors/github256.vim	/^	fun <SID>grey_number(x)$/;"	f
gsub	bundle/vim-rails/autoload/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gsub	bundle/vim-rails/plugin/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gsub	junk/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	junk/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
gsub	plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	src/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
handle	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    handle = None$/;"	v	class:ConqueSoleSubprocess
handle	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    handle = None$/;"	v	class:ConqueSoleWrapper
handleMiddleMouse	plugin/NERD_tree.vim	/^function! s:handleMiddleMouse()$/;"	f
handleMiddleMouse	src/nerdtree/plugin/NERD_tree.vim	/^function! s:handleMiddleMouse()$/;"	f
handle_key	ruby/command-t/controller.rb	/^    def handle_key$/;"	f	class:CommandT.Controller
has_syntax	ruby/command-t/vim.rb	/^    def self.has_syntax?$/;"	F	class:CommandT.VIM
has_syntax	ruby/vim.rb	/^  def self.has_syntax?$/;"	F	class:VIM
hash_screen_alignment_test	bundle/conque-term/autoload/conque_term/conque.py	/^    def hash_screen_alignment_test(self):$/;"	m	class:Conque
hd	src/vimtlib/syntax/viki.vim	/^    let hd=escape(b:vikiHeadingStart, '\\\/')$/;"	v
hdhl	src/vimtlib/syntax/viki.vim	/^          let hdhl="term=bold,underline cterm=bold gui=bold ctermfg=". s:cm1 ."Magenta guifg=".s:cm1."Magenta". s:hdfont$/;"	v
hdhl	src/vimtlib/syntax/viki.vim	/^          let hdhl="term=bold,underline cterm=bold gui=bold ctermfg=DarkMagenta guifg=DarkMagenta". s:hdfont$/;"	v
hdrdir	ruby/command-t/Makefile	/^hdrdir = $(topdir)$/;"	m
head_default	src/vimtlib/ruby/tbibtools.rb	/^        def head_default(e, type)$/;"	f	class:TBibTools
head_downcaseType	src/vimtlib/ruby/tbibtools.rb	/^        def head_downcaseType(e, type)$/;"	f	class:TBibTools
head_list	src/vimtlib/ruby/tbibtools.rb	/^        def head_list(e, type)$/;"	f	class:TBibTools.Configuration
head_upcaseType	src/vimtlib/ruby/tbibtools.rb	/^        def head_upcaseType(e, type)$/;"	f	class:TBibTools
helperEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:helperEdit(cmd,...)$/;"	f
helperEdit	junk/rails.vim	/^function! s:helperEdit(cmd,...)$/;"	f
helperList	bundle/vim-rails/autoload/rails.vim	/^function! s:helperList(A,L,P)$/;"	f
helperList	junk/rails.vim	/^function! s:helperList(A,L,P)$/;"	f
helpermethods	bundle/vim-rails/autoload/rails.vim	/^function! s:helpermethods()$/;"	f
helpermethods	junk/rails.vim	/^function! s:helpermethods()$/;"	f
hibg	colors/vividchalk.vim	/^function! s:hibg(group,guibg,ctermbg,backup)$/;"	f
hide	ruby/command-t/controller.rb	/^    def hide$/;"	f	class:CommandT.Controller
hide_cursor	ruby/command-t/match_window.rb	/^    def hide_cursor$/;"	f	class:CommandT.MatchWindow
hifg	colors/vividchalk.vim	/^function! s:hifg(group,guifg,ctermfg,backup)$/;"	f
highlight_groups	bundle/conque-term/autoload/conque_term/conque.py	/^    highlight_groups = {}$/;"	v	class:Conque
hookcursormoved#Enable	src/vimtlib/autoload/hookcursormoved.vim	/^function! hookcursormoved#Enable(condition) "{{{3$/;"	f
hookcursormoved#Register	src/vimtlib/autoload/hookcursormoved.vim	/^function! hookcursormoved#Register(condition, fn, ...) "{{{3$/;"	f
hookcursormoved#Test_linechange	src/vimtlib/autoload/hookcursormoved.vim	/^function! hookcursormoved#Test_linechange(mode) "{{{3$/;"	f
hookcursormoved#Test_parenthesis	src/vimtlib/autoload/hookcursormoved.vim	/^function! hookcursormoved#Test_parenthesis(mode) "{{{3$/;"	f
hookcursormoved#Test_parenthesis_round	src/vimtlib/autoload/hookcursormoved.vim	/^function! hookcursormoved#Test_parenthesis_round(mode) "{{{3$/;"	f
hookcursormoved#Test_parenthesis_round_close	src/vimtlib/autoload/hookcursormoved.vim	/^function! hookcursormoved#Test_parenthesis_round_close(mode) "{{{3$/;"	f
hookcursormoved#Test_parenthesis_round_open	src/vimtlib/autoload/hookcursormoved.vim	/^function! hookcursormoved#Test_parenthesis_round_open(mode) "{{{3$/;"	f
hookcursormoved#Test_syntaxchange	src/vimtlib/autoload/hookcursormoved.vim	/^function! hookcursormoved#Test_syntaxchange(mode) "{{{3$/;"	f
hookcursormoved#Test_syntaxleave	src/vimtlib/autoload/hookcursormoved.vim	/^function! hookcursormoved#Test_syntaxleave(mode) "{{{3$/;"	f
hookcursormoved#Test_syntaxleave_oneline	src/vimtlib/autoload/hookcursormoved.vim	/^function! hookcursormoved#Test_syntaxleave_oneline(mode) "{{{3$/;"	f
hs_highlight_boolean	bundle/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	bundle/vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
htmldir	ruby/command-t/Makefile	/^htmldir = $(docdir)$/;"	m
i	junk/colorize.vim	/^noremap i :highlight Normal guibg=lightyellow<cr>i$/;"	m
idle	bundle/conque-term/autoload/conque_term/conque.py	/^    def idle(self):$/;"	m	class:Conque
idle	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def idle(self):$/;"	m	class:ConqueSole
idle	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    def idle(self):$/;"	m	class:ConqueSoleWrapper
idle_sleep_time	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        idle_sleep_time = 0.10$/;"	v
ignore?	ruby/fuzzy_file_finder.rb	/^    def ignore?(name)$/;"	f	class:FuzzyFileFinder
in	src/vimtlib/plugin/viki.vim	/^now in the reference part.$/;"	m
includedir	ruby/command-t/Makefile	/^includedir = $(prefix)\/include$/;"	m
indent	src/vimtlib/ruby/vimtips2help.rb	/^    def indent(text, indent)$/;"	f
indentLevelFor	plugin/NERD_tree.vim	/^function! s:indentLevelFor(line)$/;"	f
indentLevelFor	src/nerdtree/plugin/NERD_tree.vim	/^function! s:indentLevelFor(line)$/;"	f
infodir	ruby/command-t/Makefile	/^infodir = $(DESTDIR)\/usr\/share\/info$/;"	m
init	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:init() "{{{$/;"	f
initNerdTree	plugin/NERD_tree.vim	/^function! s:initNerdTree(name)$/;"	f
initNerdTree	src/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTree(name)$/;"	f
initNerdTreeInPlace	plugin/NERD_tree.vim	/^function! s:initNerdTreeInPlace(dir)$/;"	f
initNerdTreeInPlace	src/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTreeInPlace(dir)$/;"	f
initNerdTreeMirror	plugin/NERD_tree.vim	/^function! s:initNerdTreeMirror()$/;"	f
initNerdTreeMirror	src/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTreeMirror()$/;"	f
initOpenURL	bundle/vim-rails/autoload/rails.vim	/^function! s:initOpenURL()$/;"	f
initOpenURL	junk/rails.vim	/^function! s:initOpenURL()$/;"	f
initVariable	plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
initVariable	src/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_shared_memory	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def init_shared_memory(self, mem_key):$/;"	m	class:ConqueSoleSubprocess
init_shared_memory	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    def init_shared_memory(self, mem_key):$/;"	m	class:ConqueSoleWrapper
init_tabstops	bundle/conque-term/autoload/conque_term/conque.py	/^    def init_tabstops(self):$/;"	m	class:Conque
initial_iqueue	src/vimtlib/ruby/tcalc.rb	/^    def initial_iqueue$/;"	f
initialize	ruby/command-t/controller.rb	/^    def initialize$/;"	f	class:CommandT.Controller
initialize	ruby/command-t/finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.Finder
initialize	ruby/command-t/finder/buffer_finder.rb	/^    def initialize$/;"	f	class:CommandT.BufferFinder
initialize	ruby/command-t/finder/file_finder.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileFinder
initialize	ruby/command-t/match_window.rb	/^    def initialize options = {}$/;"	f	class:CommandT.MatchWindow
initialize	ruby/command-t/prompt.rb	/^    def initialize$/;"	f	class:CommandT.Prompt
initialize	ruby/command-t/scanner/file_scanner.rb	/^    def initialize path = Dir.pwd, options = {}$/;"	f	class:CommandT.FileScanner
initialize	ruby/command-t/settings.rb	/^    def initialize$/;"	f	class:CommandT.Settings
initialize	ruby/fuzzy_file_finder.rb	/^    def initialize(name, is_root=false)$/;"	f	class:FuzzyFileFinder.Directory
initialize	ruby/fuzzy_file_finder.rb	/^    def initialize(parent, name)$/;"	f	class:FuzzyFileFinder.FileSystemEntry
initialize	ruby/fuzzy_file_finder.rb	/^  def initialize(directories=['.'], ceiling=10_000, ignores=nil)$/;"	f	class:FuzzyFileFinder
initialize	src/vimtlib/ruby/EvalSelection.rb	/^    def initialize$/;"	f	class:EvalSelectionAbstractInterpreter
initialize	src/vimtlib/ruby/EvalSelection.rb	/^    def initialize$/;"	f	class:EvalSelectionInterpreter
initialize	src/vimtlib/ruby/EvalSelection.rb	/^    def initialize$/;"	f	class:EvalSelectionOLE
initialize	src/vimtlib/ruby/EvalSelection.rb	/^    def initialize$/;"	f	class:EvalSelectionStdInFileOut
initialize	src/vimtlib/ruby/tbibtools.rb	/^        def initialize(tbibtools)$/;"	f	class:TBibTools.Configuration
initialize	src/vimtlib/ruby/tbibtools.rb	/^    def initialize$/;"	f
initialize	src/vimtlib/ruby/tcalc.rb	/^    def initialize(&block)$/;"	f	class:TCalc
initialize	src/vimtlib/ruby/tvimtools.rb	/^    def initialize(buffer=nil)$/;"	f	class:TVimTools
initialize	src/vimtlib/ruby/vimball.rb	/^        def initialize(output=$stdout)$/;"	f	class:Vimball.AppLog
initialize	src/vimtlib/ruby/vimball.rb	/^    def initialize(config)$/;"	f
initialize	src/vimtlib/ruby/vimtips2help.rb	/^        def initialize(output=$stdout)$/;"	f	class:Vimtips2Help.AppLog
initialize	src/vimtlib/ruby/vimtips2help.rb	/^    def initialize(config)$/;"	f
initialize_communication	src/vimtlib/ruby/EvalSelection.rb	/^    def initialize_communication$/;"	f	class:EvalSelectionAbstractInterpreter
initialize_communication	src/vimtlib/ruby/EvalSelection.rb	/^    def initialize_communication$/;"	f	class:EvalSelectionInterpreter
initialize_communication	src/vimtlib/ruby/EvalSelection.rb	/^    def initialize_communication$/;"	f	class:EvalSelectionOLE
initializerEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:initializerEdit(cmd,...)$/;"	f
initializerEdit	junk/rails.vim	/^function! s:initializerEdit(cmd,...)$/;"	f
initializerList	bundle/vim-rails/autoload/rails.vim	/^function! s:initializerList(A,L,P)$/;"	f
initializerList	junk/rails.vim	/^function! s:initializerList(A,L,P)$/;"	f
input	src/vimtlib/ruby/tbibtools.rb	/^        def input(*value)$/;"	f	class:TBibTools.Configuration
inputreplacement	bundle/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputreplacement	junk/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	bundle/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
inputtarget	junk/surround.vim	/^function! s:inputtarget()$/;"	f
insert	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def insert(self, line, value):$/;"	m	class:ConqueScreen
insert	bundle/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insert	junk/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insert_enter	bundle/conque-term/autoload/conque_term/conque.py	/^    def insert_enter(self):$/;"	m	class:Conque
inspect	ruby/fuzzy_file_finder.rb	/^  def inspect #:nodoc:$/;"	f	class:FuzzyFileFinder
integrationtestEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:integrationtestEdit(cmd,...)$/;"	f
integrationtestEdit	junk/rails.vim	/^function! s:integrationtestEdit(cmd,...)$/;"	f
integrationtestList	bundle/vim-rails/autoload/rails.vim	/^function! s:integrationtestList(A,L,P)$/;"	f
integrationtestList	junk/rails.vim	/^function! s:integrationtestList(A,L,P)$/;"	f
interact	src/vimtlib/ruby/EvalSelection.rb	/^    def interact(text)$/;"	f	class:EvalSelectionAbstractInterpreter
interact	src/vimtlib/ruby/EvalSelection.rb	/^    def interact(text)$/;"	f	class:EvalSelectionInterpreter
interact	src/vimtlib/ruby/EvalSelection.rb	/^    def interact(text)$/;"	f	class:EvalSelectionOLE
invertrange	bundle/vim-rails/autoload/rails.vim	/^function! s:invertrange(beg,end)$/;"	f
invertrange	junk/rails.vim	/^function! s:invertrange(beg,end)$/;"	f
iqueue	src/vimtlib/ruby/tcalc.rb	/^    def iqueue$/;"	f	class:TCalc
iqueue_empty?	src/vimtlib/ruby/tcalc.rb	/^    def iqueue_empty?$/;"	f	class:TCalc
iqueue_get	src/vimtlib/ruby/tcalc.rb	/^    def iqueue_get(pos)$/;"	f	class:TCalc
iqueue_reset	src/vimtlib/ruby/tcalc.rb	/^    def iqueue_reset(val=[])$/;"	f	class:TCalc
iqueue_set	src/vimtlib/ruby/tcalc.rb	/^    def iqueue_set(pos, arg)$/;"	f	class:TCalc
iqueue_shift	src/vimtlib/ruby/tcalc.rb	/^    def iqueue_shift$/;"	f	class:TCalc
iqueue_unshift	src/vimtlib/ruby/tcalc.rb	/^    def iqueue_unshift(*args)$/;"	f	class:TCalc
isTreeOpen	plugin/NERD_tree.vim	/^function! s:isTreeOpen()$/;"	f
isTreeOpen	src/nerdtree/plugin/NERD_tree.vim	/^function! s:isTreeOpen()$/;"	f
isWindowUsable	plugin/NERD_tree.vim	/^function! s:isWindowUsable(winnumber)$/;"	f
isWindowUsable	src/nerdtree/plugin/NERD_tree.vim	/^function! s:isWindowUsable(winnumber)$/;"	f
is_alive	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def is_alive(self):$/;"	m	class:ConqueSoleSubprocess
is_alive	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    is_alive = True$/;"	v	class:ConqueSoleSubprocess
is_alive	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    def is_alive(self):$/;"	m	class:ConqueSoleWrapper
is_alive	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^    def is_alive(self):$/;"	m	class:ConqueSubprocess
is_crossreferenced	src/vimtlib/ruby/tbibtools.rb	/^        def is_crossreferenced(e)$/;"	f	class:TBibTools.Configuration
is_idle	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^                        is_idle = False$/;"	v
is_idle	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^                        is_idle = True$/;"	v
is_idle	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^                is_idle = True$/;"	v
is_idle	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        is_idle = False$/;"	v
javascriptEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptEdit(cmd,...)$/;"	f
javascriptEdit	junk/rails.vim	/^function! s:javascriptEdit(cmd,...)$/;"	f
javascriptList	bundle/vim-rails/autoload/rails.vim	/^function! s:javascriptList(A,L,P)$/;"	f
javascriptList	junk/rails.vim	/^function! s:javascriptList(A,L,P)$/;"	f
jump	ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
jump	src/vim-cucumber/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
jumpToChild	plugin/NERD_tree.vim	/^function! s:jumpToChild(direction)$/;"	f
jumpToChild	src/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToChild(direction)$/;"	f
jumpToFirstChild	plugin/NERD_tree.vim	/^function! s:jumpToFirstChild()$/;"	f
jumpToFirstChild	src/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToFirstChild()$/;"	f
jumpToLastChild	plugin/NERD_tree.vim	/^function! s:jumpToLastChild()$/;"	f
jumpToLastChild	src/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToLastChild()$/;"	f
jumpToParent	plugin/NERD_tree.vim	/^function! s:jumpToParent()$/;"	f
jumpToParent	src/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToParent()$/;"	f
jumpToRoot	plugin/NERD_tree.vim	/^function! s:jumpToRoot()$/;"	f
jumpToRoot	src/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	plugin/NERD_tree.vim	/^function! s:jumpToSibling(forward)$/;"	f
jumpToSibling	src/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToSibling(forward)$/;"	f
jump_to_window	bundle/session.vim/autoload/xolox/session.vim	/^function! s:jump_to_window(session, tabpage, window)$/;"	f
l	bundle/conque-term/autoload/conque_term/conque.py	/^    l = 1 # current cursor line$/;"	v	class:Conque
last_session_file	bundle/session.vim/autoload/xolox/session.vim	/^function! s:last_session_file()$/;"	f
last_session_persist	bundle/session.vim/autoload/xolox/session.vim	/^function! s:last_session_persist(name)$/;"	f
last_session_recall	bundle/session.vim/autoload/xolox/session.vim	/^function! s:last_session_recall()$/;"	f
lastformat	bundle/vim-rails/autoload/rails.vim	/^function! s:lastformat(start)$/;"	f
lastformat	junk/rails.vim	/^function! s:lastformat(start)$/;"	f
lastmethod	bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethod(...)$/;"	f
lastmethod	junk/rails.vim	/^function! s:lastmethod(...)$/;"	f
lastmethodline	bundle/vim-rails/autoload/rails.vim	/^function! s:lastmethodline(start)$/;"	f
lastmethodline	junk/rails.vim	/^function! s:lastmethodline(start)$/;"	f
lastopeningline	bundle/vim-rails/autoload/rails.vim	/^function! s:lastopeningline(pattern,limit,start)$/;"	f
lastopeningline	junk/rails.vim	/^function! s:lastopeningline(pattern,limit,start)$/;"	f
layoutEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:layoutEdit(cmd,...)$/;"	f
layoutEdit	junk/rails.vim	/^function! s:layoutEdit(cmd,...)$/;"	f
layoutList	bundle/vim-rails/autoload/rails.vim	/^function! s:layoutList(A,L,P)$/;"	f
layoutList	junk/rails.vim	/^function! s:layoutList(A,L,P)$/;"	f
ldflags	ruby/command-t/Makefile	/^ldflags  = -L. -arch i386 -arch x86_64 $/;"	m
leave	ruby/command-t/controller.rb	/^    def leave$/;"	f	class:CommandT.Controller
leave	ruby/command-t/match_window.rb	/^    def leave$/;"	f	class:CommandT.MatchWindow
libEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:libEdit(cmd,...)$/;"	f
libEdit	junk/rails.vim	/^function! s:libEdit(cmd,...)$/;"	f
libList	bundle/vim-rails/autoload/rails.vim	/^function! s:libList(A,L,P)$/;"	f
libList	junk/rails.vim	/^function! s:libList(A,L,P)$/;"	f
lib_filename	src/vimtlib/ruby/tcalc.rb	/^    def lib_filename(filename)$/;"	f
lib_filename	src/vimtlib/ruby/tcalc.rb	/^    def lib_filename(filename)$/;"	f	class:TCalc
libdir	ruby/command-t/Makefile	/^libdir = $(exec_prefix)\/lib$/;"	m
libexecdir	ruby/command-t/Makefile	/^libexecdir = $(exec_prefix)\/libexec$/;"	m
libpath	ruby/command-t/Makefile	/^libpath = . $(libdir)$/;"	m
line_offset	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    line_offset = 0$/;"	v	class:ConqueSoleSubprocess
linepeak	bundle/vim-rails/autoload/rails.vim	/^function! s:linepeak()$/;"	f
linepeak	junk/rails.vim	/^function! s:linepeak()$/;"	f
lines	bundle/conque-term/autoload/conque_term/conque.py	/^    lines = 24 # same as $LINES$/;"	v	class:Conque
lines	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    lines = 24$/;"	v	class:ConqueSoleWrapper
lines	ruby/command-t/vim/screen.rb	/^      def self.lines$/;"	F	class:CommandT.VIM.Screen
lines	ruby/vim/screen.rb	/^    def self.lines$/;"	F	class:VIM.Screen
linglang#Linglang	src/vimtlib/autoload/linglang.vim	/^function! linglang#Linglang(...) "{{{3$/;"	f
linglang#Set	src/vimtlib/autoload/linglang.vim	/^function! linglang#Set(mode, ...) "{{{3$/;"	f
list_format	src/vimtlib/ruby/tbibtools.rb	/^        def list_format(value)$/;"	f	class:TBibTools.Configuration
list_matches	ruby/command-t/controller.rb	/^    def list_matches$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
list_words	src/vimtlib/ruby/tcalc.rb	/^    def list_words$/;"	f	class:TCalc
listen	src/vimtlib/ruby/EvalSelection.rb	/^    def listen(atStartup=false)$/;"	f	class:EvalSelectionInterpreter
listen	src/vimtlib/ruby/EvalSelection.rb	/^    def listen(atStartup=false)$/;"	f	class:EvalSelectionStdInFileOut
loaded_cmdlinehelp	src/vimtlib/plugin/cmdlinehelp.vim	/^let loaded_cmdlinehelp = 5$/;"	v
loaded_concordance	src/vimtlib/plugin/concordance.vim	/^let loaded_concordance = 1$/;"	v
loaded_concordance_autoload	src/vimtlib/autoload/concordance.vim	/^let loaded_concordance_autoload = 1$/;"	v
loaded_glark	src/vimtlib/plugin/glark.vim	/^let loaded_glark = 1$/;"	v
loaded_grep	junk/grep.vim	/^let loaded_grep = 1$/;"	v
loaded_hookcursormoved	src/vimtlib/plugin/hookcursormoved.vim	/^let loaded_hookcursormoved = 9$/;"	v
loaded_hookcursormoved_autoload	src/vimtlib/autoload/hookcursormoved.vim	/^let loaded_hookcursormoved_autoload = 3$/;"	v
loaded_linglang	src/vimtlib/plugin/linglang.vim	/^let loaded_linglang = 2$/;"	v
loaded_linglang_autoload	src/vimtlib/autoload/linglang.vim	/^let loaded_linglang_autoload = 1$/;"	v
loaded_livetimestamp	src/vimtlib/plugin/livetimestamp.vim	/^let loaded_livetimestamp = 1$/;"	v
loaded_loremipsum	src/vimtlib/plugin/loremipsum.vim	/^let loaded_loremipsum = 2$/;"	v
loaded_loremipsum_autoload	src/vimtlib/autoload/loremipsum.vim	/^let loaded_loremipsum_autoload = 1$/;"	v
loaded_macros_spec	src/vimtlib/macros/spec.vim	/^let loaded_macros_spec = 1$/;"	v
loaded_macros_tassert	src/vimtlib/macros/tassert.vim	/^let loaded_macros_tassert = 1$/;"	v
loaded_nerd_comments	junk/NERD_commenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_comments	src/nerdcommenter/plugin/NERD_commenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_tree	plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_nerd_tree	src/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_pim	src/vimtlib/plugin/pim.vim	/^let loaded_pim = 1$/;"	v
loaded_pim_autoload	src/vimtlib/autoload/pim.vim	/^let loaded_pim_autoload = 1$/;"	v
loaded_quickfixsigns	src/vimtlib/plugin/quickfixsigns.vim	/^let loaded_quickfixsigns = 4$/;"	v
loaded_scalefont	src/vimtlib/plugin/scalefont.vim	/^let loaded_scalefont = 104$/;"	v
loaded_setsyntax	src/vimtlib/plugin/setsyntax.vim	/^let loaded_setsyntax = 5$/;"	v
loaded_setsyntax_autoload	src/vimtlib/autoload/setsyntax.vim	/^let loaded_setsyntax_autoload = 1$/;"	v
loaded_shymenu	src/vimtlib/plugin/shymenu.vim	/^let loaded_shymenu = 3$/;"	v
loaded_snips	plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_snips	src/snipmate.vim/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_spec	src/vimtlib/plugin/spec.vim	/^let loaded_spec = 1$/;"	v
loaded_taglist	junk/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	junk/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	junk/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	junk/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_task_paper	ftplugin/taskpaper.vim	/^let loaded_task_paper = 1$/;"	v
loaded_tassert	src/vimtlib/plugin/07tassert.vim	/^let loaded_tassert = 100$/;"	v
loaded_tbak	src/vimtlib/plugin/tbak.vim	/^let loaded_tbak = 1$/;"	v
loaded_tbak_autoload	src/vimtlib/autoload/tbak.vim	/^let loaded_tbak_autoload = 1$/;"	v
loaded_tbibtools	src/vimtlib/plugin/tbibtools.vim	/^let loaded_tbibtools = 5$/;"	v
loaded_tcalc	src/vimtlib/plugin/tcalc.vim	/^let loaded_tcalc = 12$/;"	v
loaded_tcalc_autoload	src/vimtlib/autoload/tcalc.vim	/^let loaded_tcalc_autoload = 1$/;"	v
loaded_tcomment	plugin/tComment.vim	/^let loaded_tcomment = 109$/;"	v
loaded_tcomment	src/vimtlib/plugin/tComment.vim	/^let loaded_tcomment = 109$/;"	v
loaded_tcomment_autoload	autoload/tcomment.vim	/^let loaded_tcomment_autoload = 1$/;"	v
loaded_tcomment_autoload	src/vimtlib/autoload/tcomment.vim	/^let loaded_tcomment_autoload = 1$/;"	v
loaded_techopair	src/vimtlib/plugin/tEchoPair.vim	/^let loaded_techopair = 2$/;"	v
loaded_tgpg	src/vimtlib/plugin/tGpg.vim	/^let loaded_tgpg = 5$/;"	v
loaded_tlib	src/vimtlib/plugin/02tlib.vim	/^let loaded_tlib = 32$/;"	v
loaded_tlib_TestChild_autoload	src/vimtlib/autoload/tlib/TestChild.vim	/^let loaded_tlib_TestChild_autoload = 1$/;"	v
loaded_tlib_Test_autoload	src/vimtlib/autoload/tlib/Test.vim	/^let loaded_tlib_Test_autoload = 1$/;"	v
loaded_tlib_agent_autoload	src/vimtlib/autoload/tlib/agent.vim	/^let loaded_tlib_agent_autoload = 1$/;"	v
loaded_tlib_arg_autoload	src/vimtlib/autoload/tlib/arg.vim	/^let loaded_tlib_arg_autoload = 1$/;"	v
loaded_tlib_autocmdgroup_autoload	src/vimtlib/autoload/tlib/autocmdgroup.vim	/^let loaded_tlib_autocmdgroup_autoload = 1$/;"	v
loaded_tlib_autoload	src/vimtlib/autoload/tlib.vim	/^let loaded_tlib_autoload = 1$/;"	v
loaded_tlib_buffer_autoload	src/vimtlib/autoload/tlib/buffer.vim	/^let loaded_tlib_buffer_autoload = 1$/;"	v
loaded_tlib_cache_autoload	src/vimtlib/autoload/tlib/cache.vim	/^let loaded_tlib_cache_autoload = 1$/;"	v
loaded_tlib_char_autoload	src/vimtlib/autoload/tlib/char.vim	/^let loaded_tlib_char_autoload = 1$/;"	v
loaded_tlib_cmd_autoload	src/vimtlib/autoload/tlib/cmd.vim	/^let loaded_tlib_cmd_autoload = 1$/;"	v
loaded_tlib_comments_autoload	src/vimtlib/autoload/tlib/comments.vim	/^let loaded_tlib_comments_autoload = 1$/;"	v
loaded_tlib_dir_autoload	src/vimtlib/autoload/tlib/dir.vim	/^let loaded_tlib_dir_autoload = 1$/;"	v
loaded_tlib_eval_autoload	src/vimtlib/autoload/tlib/eval.vim	/^let loaded_tlib_eval_autoload = 1$/;"	v
loaded_tlib_file_autoload	src/vimtlib/autoload/tlib/file.vim	/^let loaded_tlib_file_autoload = 1$/;"	v
loaded_tlib_hook_autoload	src/vimtlib/autoload/tlib/hook.vim	/^let loaded_tlib_hook_autoload = 1$/;"	v
loaded_tlib_input_autoload	src/vimtlib/autoload/tlib/input.vim	/^let loaded_tlib_input_autoload = 1$/;"	v
loaded_tlib_list_autoload	src/vimtlib/autoload/tlib/list.vim	/^let loaded_tlib_list_autoload = 1$/;"	v
loaded_tlib_object_autoload	src/vimtlib/autoload/tlib/Object.vim	/^let loaded_tlib_object_autoload = 1$/;"	v
loaded_tlib_progressbar_autoload	src/vimtlib/autoload/tlib/progressbar.vim	/^let loaded_tlib_progressbar_autoload = 1$/;"	v
loaded_tlib_rx_autoload	src/vimtlib/autoload/tlib/rx.vim	/^let loaded_tlib_rx_autoload = 1$/;"	v
loaded_tlib_scratch_autoload	src/vimtlib/autoload/tlib/scratch.vim	/^let loaded_tlib_scratch_autoload = 1$/;"	v
loaded_tlib_string_autoload	src/vimtlib/autoload/tlib/string.vim	/^let loaded_tlib_string_autoload = 1$/;"	v
loaded_tlib_syntax_autoload	src/vimtlib/autoload/tlib/syntax.vim	/^let loaded_tlib_syntax_autoload = 1$/;"	v
loaded_tlib_tab_autoload	src/vimtlib/autoload/tlib/tab.vim	/^let loaded_tlib_tab_autoload = 1$/;"	v
loaded_tlib_tag_autoload	src/vimtlib/autoload/tlib/tag.vim	/^let loaded_tlib_tag_autoload = 1$/;"	v
loaded_tlib_time_autoload	src/vimtlib/autoload/tlib/time.vim	/^let loaded_tlib_time_autoload = 1$/;"	v
loaded_tlib_type_autoload	src/vimtlib/autoload/tlib/type.vim	/^let loaded_tlib_type_autoload = 1$/;"	v
loaded_tlib_url_autoload	src/vimtlib/autoload/tlib/url.vim	/^let loaded_tlib_url_autoload = 1$/;"	v
loaded_tlib_var_autoload	src/vimtlib/autoload/tlib/var.vim	/^let loaded_tlib_var_autoload = 1$/;"	v
loaded_tlib_win_autoload	src/vimtlib/autoload/tlib/win.vim	/^let loaded_tlib_win_autoload = 1$/;"	v
loaded_tlib_world_autoload	src/vimtlib/autoload/tlib/World.vim	/^let loaded_tlib_world_autoload = 1$/;"	v
loaded_tlog	src/vimtlib/plugin/05tlog.vim	/^let loaded_tlog = 100$/;"	v
loaded_tmarks	src/vimtlib/plugin/tmarks.vim	/^let loaded_tmarks = 1$/;"	v
loaded_tmboxbrowser	src/vimtlib/plugin/tmboxbrowser.vim	/^let loaded_tmboxbrowser = 4$/;"	v
loaded_tmboxbrowser_autoload	src/vimtlib/autoload/tmboxbrowser.vim	/^let loaded_tmboxbrowser_autoload = 1$/;"	v
loaded_tmru	src/vimtlib/plugin/tmru.vim	/^let loaded_tmru = 8$/;"	v
loaded_toptions	src/vimtlib/macros/toptions.vim	/^let loaded_toptions = 1$/;"	v
loaded_tortoisesvn	src/vimtlib/plugin/TortoiseSVN.vim	/^let loaded_tortoisesvn = 3$/;"	v
loaded_trag	src/vimtlib/plugin/trag.vim	/^let loaded_trag = 5$/;"	v
loaded_trag_autoload	src/vimtlib/autoload/trag.vim	/^let loaded_trag_autoload = 1$/;"	v
loaded_tregisters	src/vimtlib/plugin/tregisters.vim	/^let loaded_tregisters = 2$/;"	v
loaded_tselectbuffer	src/vimtlib/plugin/tselectbuffer.vim	/^let loaded_tselectbuffer = 6$/;"	v
loaded_tselectfile	src/vimtlib/plugin/tselectfiles.vim	/^let loaded_tselectfile = 10$/;"	v
loaded_tselectfiles_autoload	src/vimtlib/autoload/tselectfiles.vim	/^let loaded_tselectfiles_autoload = 1$/;"	v
loaded_tsession	src/vimtlib/plugin/tsession.vim	/^let loaded_tsession = 1$/;"	v
loaded_tsession_autoload	src/vimtlib/autoload/tsession.vim	/^let loaded_tsession_autoload = 1$/;"	v
loaded_tskeleton	src/vimtlib/plugin/tSkeleton.vim	/^let loaded_tskeleton = 407$/;"	v
loaded_tskeleton_abbreviations_autoload	src/vimtlib/autoload/tskeleton/abbreviations.vim	/^let loaded_tskeleton_abbreviations_autoload = 1$/;"	v
loaded_tskeleton_autoload	src/vimtlib/autoload/tskeleton.vim	/^let loaded_tskeleton_autoload = 1$/;"	v
loaded_tskeleton_functions_autoload	src/vimtlib/autoload/tskeleton/functions.vim	/^let loaded_tskeleton_functions_autoload = 1$/;"	v
loaded_tskeleton_mini_autoload	src/vimtlib/autoload/tskeleton/mini.vim	/^let loaded_tskeleton_mini_autoload = 1$/;"	v
loaded_tskeleton_skeleton_autoload	src/vimtlib/autoload/tskeleton/skeleton.vim	/^let loaded_tskeleton_skeleton_autoload = 1$/;"	v
loaded_tskeleton_tags_autoload	src/vimtlib/autoload/tskeleton/tags.vim	/^let loaded_tskeleton_tags_autoload = 1$/;"	v
loaded_tstatus	src/vimtlib/plugin/tstatus.vim	/^let loaded_tstatus = 1$/;"	v
loaded_ttagcomplete	src/vimtlib/plugin/ttagcomplete.vim	/^let loaded_ttagcomplete = 2$/;"	v
loaded_ttagcomplete_autoload	src/vimtlib/autoload/ttagcomplete.vim	/^let loaded_ttagcomplete_autoload = 1$/;"	v
loaded_ttagecho	src/vimtlib/plugin/ttagecho.vim	/^let loaded_ttagecho = 5$/;"	v
loaded_ttagecho_autoload	src/vimtlib/autoload/ttagecho.vim	/^let loaded_ttagecho_autoload = 1$/;"	v
loaded_ttags	src/vimtlib/plugin/ttags.vim	/^let loaded_ttags = 6$/;"	v
loaded_ttags_autoload	src/vimtlib/autoload/ttags.vim	/^let loaded_ttags_autoload = 1$/;"	v
loaded_ttoc	src/vimtlib/plugin/ttoc.vim	/^let loaded_ttoc = 5$/;"	v
loaded_ttoc_autoload	src/vimtlib/autoload/ttoc.vim	/^let loaded_ttoc_autoload = 1$/;"	v
loaded_viki	src/vimtlib/plugin/viki.vim	/^let loaded_viki = 312$/;"	v
loaded_viki_anyword	src/vimtlib/autoload/viki_anyword.vim	/^let loaded_viki_anyword = 1$/;"	v
loaded_viki_auto	src/vimtlib/autoload/viki.vim	/^let loaded_viki_auto = 1$/;"	v
loaded_viki_latex	src/vimtlib/autoload/viki_latex.vim	/^let loaded_viki_latex = 1$/;"	v
loaded_viki_viki	src/vimtlib/autoload/viki_viki.vim	/^let loaded_viki_viki = 1$/;"	v
loaded_vimacs	junk/vimacs-0.93.vim	/^let loaded_vimacs = 1$/;"	v
loaded_yankring	plugin/yankring.vim	/^let loaded_yankring = 100$/;"	v
localeEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:localeEdit(cmd,...)$/;"	f
localeEdit	junk/rails.vim	/^function! s:localeEdit(cmd,...)$/;"	f
localeList	bundle/vim-rails/autoload/rails.vim	/^function! s:localeList(A,L,P)$/;"	f
localeList	junk/rails.vim	/^function! s:localeList(A,L,P)$/;"	f
localedir	ruby/command-t/Makefile	/^localedir = $(datarootdir)\/locale$/;"	m
localstatedir	ruby/command-t/Makefile	/^localstatedir = $(prefix)\/var$/;"	m
lock	ruby/command-t/match_window.rb	/^    def lock$/;"	f	class:CommandT.MatchWindow
lock_session	bundle/session.vim/autoload/xolox/session.vim	/^function! s:lock_session(session_path)$/;"	f
logging	bundle/conque-term/autoload/conque_term/conque_globals.py	/^import logging # DEBUG$/;"	i
loops	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        loops = 0$/;"	v
loremipsum#Generate	src/vimtlib/autoload/loremipsum.vim	/^function! loremipsum#Generate(nwords, template) "{{{3$/;"	f
loremipsum#GenerateInline	src/vimtlib/autoload/loremipsum.vim	/^function! loremipsum#GenerateInline(nwords) "{{{3$/;"	f
loremipsum#Insert	src/vimtlib/autoload/loremipsum.vim	/^function! loremipsum#Insert(...) "{{{3$/;"	f
loremipsum#Replace	src/vimtlib/autoload/loremipsum.vim	/^function! loremipsum#Replace(...) "{{{3$/;"	f
mCommandT	ruby/command-t/ext.c	/^VALUE mCommandT         = 0; \/\/ module CommandT$/;"	v
mailerEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:mailerEdit(cmd,...)$/;"	f
mailerEdit	junk/rails.vim	/^function! s:mailerEdit(cmd,...)$/;"	f
mailerList	bundle/vim-rails/autoload/rails.vim	/^function! s:mailerList(A,L,P)$/;"	f
mailerList	junk/rails.vim	/^function! s:mailerList(A,L,P)$/;"	f
main_syntax	src/vim-haml/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	syntax/jquery.vim	/^  let main_syntax = 'javascript'$/;"	v
make_pattern	ruby/fuzzy_file_finder.rb	/^    def make_pattern(pattern)$/;"	f	class:FuzzyFileFinder
makewithruby	bundle/vim-rails/autoload/rails.vim	/^function! s:makewithruby(arg,bang,...)$/;"	f
makewithruby	junk/rails.vim	/^function! s:makewithruby(arg,bang,...)$/;"	f
mandir	ruby/command-t/Makefile	/^mandir = $(DESTDIR)\/usr\/share\/man$/;"	m
map	plugin/supertab.vim	/^        let map = substitute(map, '.\\{-}\\(<Plug>\\w\\+\\).*', plug_map, '')$/;"	v
map	plugin/supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	ruby/command-t/controller.rb	/^    def map key, function, param = nil$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
match_file	ruby/fuzzy_file_finder.rb	/^    def match_file(file, file_regex, path_match, &block)$/;"	f
match_limit	ruby/command-t/controller.rb	/^    def match_limit$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
match_path	ruby/fuzzy_file_finder.rb	/^    def match_path(path, path_matches, path_regex, path_segments)$/;"	f
match_text_for_idx	ruby/command-t/match_window.rb	/^    def match_text_for_idx idx$/;"	f	class:CommandT.MatchWindow
match_type	bundle/vim-rails/autoload/rails.vim	/^function! s:match_type(type,...)$/;"	f
match_type	junk/rails.vim	/^function! s:match_type(type,...)$/;"	f
matchcursor	bundle/vim-rails/autoload/rails.vim	/^function! s:matchcursor(pat)$/;"	f
matchcursor	junk/rails.vim	/^function! s:matchcursor(pat)$/;"	f
matches=	ruby/command-t/match_window.rb	/^    def matches= matches$/;"	f	class:CommandT.MatchWindow
matchinfo_t	ruby/command-t/match.c	/^} matchinfo_t;$/;"	t	typeref:struct:__anon1	file:
math	bundle/conque-term/autoload/conque_term/conque.py	/^import math$/;"	i
max_loops	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        max_loops = 0$/;"	v
max_score_per_char	ruby/command-t/match.c	/^    double  max_score_per_char;$/;"	m	struct:__anon1	file:
maybe_open_fold	plugin/space.vim	/^function! s:maybe_open_fold(cmd)$/;"	f
maybe_open_fold	src/vim-space/plugin/space.vim	/^function! s:maybe_open_fold(cmd)$/;"	f
mem_key	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        mem_key = sys.argv[1]$/;"	v
mem_key	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_key = None$/;"	v	class:ConqueSoleSharedMemory
mem_redraw_ct	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    mem_redraw_ct = 0$/;"	v	class:ConqueSoleSubprocess
mem_size	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_size = None$/;"	v	class:ConqueSoleSharedMemory
mem_type	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_type = None$/;"	v	class:ConqueSoleSharedMemory
menuBufEnter	bundle/vim-rails/plugin/rails.vim	/^function! s:menuBufEnter()$/;"	f
menuBufLeave	bundle/vim-rails/plugin/rails.vim	/^function! s:menuBufLeave()$/;"	f
menuRoot	junk/NERD_commenter.vim	/^        let menuRoot = '&Plugin.&comment'$/;"	v
menuRoot	junk/NERD_commenter.vim	/^        let menuRoot = '&comment'$/;"	v
menuRoot	junk/NERD_commenter.vim	/^        let menuRoot = 'comment'$/;"	v
menuRoot	junk/NERD_commenter.vim	/^    let menuRoot = ""$/;"	v
menuRoot	plugin/yankring.vim	/^        let menuRoot = '&Plugin.&YankRing'$/;"	v
menuRoot	plugin/yankring.vim	/^        let menuRoot = '&YankRing'$/;"	v
menuRoot	plugin/yankring.vim	/^        let menuRoot = 'YankRing'$/;"	v
menuRoot	src/nerdcommenter/plugin/NERD_commenter.vim	/^        let menuRoot = '&Plugin.&comment'$/;"	v
menuRoot	src/nerdcommenter/plugin/NERD_commenter.vim	/^        let menuRoot = '&comment'$/;"	v
menuRoot	src/nerdcommenter/plugin/NERD_commenter.vim	/^        let menuRoot = 'comment'$/;"	v
menuRoot	src/nerdcommenter/plugin/NERD_commenter.vim	/^    let menuRoot = ""$/;"	v
menucmd	bundle/vim-rails/plugin/rails.vim	/^function! s:menucmd(priority)$/;"	f
menuprompt	bundle/vim-rails/plugin/rails.vim	/^function! s:menuprompt(vimcmd,prompt)$/;"	f
metalEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:metalEdit(cmd,...)$/;"	f
metalEdit	junk/rails.vim	/^function! s:metalEdit(cmd,...)$/;"	f
metalList	bundle/vim-rails/autoload/rails.vim	/^function! s:metalList(A,L,P)$/;"	f
metalList	junk/rails.vim	/^function! s:metalList(A,L,P)$/;"	f
mextargs	bundle/vim-rails/autoload/rails.vim	/^function! s:mextargs(str,num)$/;"	f
mextargs	junk/rails.vim	/^function! s:mextargs(str,num)$/;"	f
migrationEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:migrationEdit(cmd,...)$/;"	f
migrationEdit	junk/rails.vim	/^function! s:migrationEdit(cmd,...)$/;"	f
migrationList	bundle/vim-rails/autoload/rails.vim	/^function! s:migrationList(A,L,P)$/;"	f
migrationList	junk/rails.vim	/^function! s:migrationList(A,L,P)$/;"	f
migspc	bundle/vim-rails/autoload/rails.vim	/^function! s:migspc(line)$/;"	f
migspc	junk/rails.vim	/^function! s:migspc(line)$/;"	f
missing	ruby/command-t/extconf.rb	/^def missing item$/;"	f
mkeep	bundle/vim-rails/autoload/rails.vim	/^function! s:mkeep(str)$/;"	f
mkeep	junk/rails.vim	/^function! s:mkeep(str)$/;"	f
mmap	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^import mmap$/;"	i
model	bundle/vim-rails/autoload/rails.vim	/^function! s:model(...)$/;"	f
model	junk/rails.vim	/^function! s:model(...)$/;"	f
modelEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:modelEdit(cmd,...)$/;"	f
modelEdit	junk/rails.vim	/^function! s:modelEdit(cmd,...)$/;"	f
modelList	bundle/vim-rails/autoload/rails.vim	/^function! s:modelList(A,L,P)$/;"	f
modelList	junk/rails.vim	/^function! s:modelList(A,L,P)$/;"	f
move_cursor_to_selected_line	ruby/command-t/match_window.rb	/^    def move_cursor_to_selected_line$/;"	f	class:CommandT.MatchWindow
msg_ct	bundle/conque-term/autoload/conque_term.vim	/^                        let msg_ct = g:ConqueTerm_MsgCt + 1$/;"	v
msg_ct	bundle/conque-term/autoload/conque_term.vim	/^    let msg_ct = 1$/;"	v
msg_file	bundle/conque-term/autoload/conque_term.vim	/^    let msg_file = s:scriptdirpy . 'version.vim'$/;"	v
msg_show	bundle/conque-term/autoload/conque_term.vim	/^                        let msg_show = 0$/;"	v
msg_show	bundle/conque-term/autoload/conque_term.vim	/^    let msg_show = 1$/;"	v
n	plugin/space.vim	/^    noremap <expr> <silent> n  <SID>setup_space("search", "n")$/;"	m
n	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> n  <SID>setup_space("search", "n")$/;"	m
nerdtree_persist	bundle/session.vim/autoload/xolox/session.vim	/^function! s:nerdtree_persist()$/;"	f
never_show_dot_files	ruby/command-t/match.c	/^    int     never_show_dot_files;   \/\/ boolean$/;"	m	struct:__anon1	file:
nextBufferName	plugin/NERD_tree.vim	/^function! s:nextBufferName()$/;"	f
nextBufferName	src/nerdtree/plugin/NERD_tree.vim	/^function! s:nextBufferName()$/;"	f
nr2hex	plugin/gist.vim	/^function! s:nr2hex(nr)$/;"	f
number_of_windows	junk/vimacs-0.93.vim	/^function! <SID>number_of_windows()$/;"	f
o	junk/colorize.vim	/^noremap o :highlight Normal guibg=lightyellow<cr>o$/;"	m
o	src/vimtlib/ftplugin/glark.vim	/^inoremap <silent> <buffer> o <c-o>:call GlarkJump('')<cr>$/;"	m
o	src/vimtlib/ftplugin/glark.vim	/^noremap  <silent> <buffer> o :call GlarkJump('')<cr>$/;"	m
observerEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:observerEdit(cmd,...)$/;"	f
observerEdit	junk/rails.vim	/^function! s:observerEdit(cmd,...)$/;"	f
observerList	bundle/vim-rails/autoload/rails.vim	/^function! s:observerList(A,L,P)$/;"	f
observerList	junk/rails.vim	/^function! s:observerList(A,L,P)$/;"	f
offset	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    offset = 0$/;"	v	class:ConqueSole
oldincludedir	ruby/command-t/Makefile	/^oldincludedir = $(DESTDIR)\/usr\/include$/;"	m
ole_evaluate	src/vimtlib/ruby/EvalSelection.rb	/^    def ole_evaluate(text)$/;"	f	class:EvalSelectionOLE
ole_setup	src/vimtlib/ruby/EvalSelection.rb	/^    def ole_setup$/;"	f	class:EvalSelectionOLE
ole_tear_down	src/vimtlib/ruby/EvalSelection.rb	/^    def ole_tear_down$/;"	f	class:EvalSelectionOLE
open	bundle/conque-term/autoload/conque_term/conque.py	/^    def open(self):$/;"	m	class:Conque
open	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def open(self):$/;"	m	class:ConqueSole
open	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def open(self, cmd, mem_key, options={}):$/;"	m	class:ConqueSoleSubprocess
open	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    def open(self, cmd, lines, columns, python_exe='python.exe', communicator_py='conque_sole_communicator.py', options={}):$/;"	m	class:ConqueSoleWrapper
open	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^    def open(self, command, env={}):$/;"	m	class:ConqueSubprocess
openBookmark	plugin/NERD_tree.vim	/^function! s:openBookmark(name)$/;"	f
openBookmark	src/nerdtree/plugin/NERD_tree.vim	/^function! s:openBookmark(name)$/;"	f
openEntrySplit	plugin/NERD_tree.vim	/^function! s:openEntrySplit(vertical, forceKeepWindowOpen)$/;"	f
openEntrySplit	src/nerdtree/plugin/NERD_tree.vim	/^function! s:openEntrySplit(vertical, forceKeepWindowOpen)$/;"	f
openExplorer	plugin/NERD_tree.vim	/^function! s:openExplorer()$/;"	f
openExplorer	src/nerdtree/plugin/NERD_tree.vim	/^function! s:openExplorer()$/;"	f
openInNewTab	plugin/NERD_tree.vim	/^function! s:openInNewTab(stayCurrentTab)$/;"	f
openInNewTab	src/nerdtree/plugin/NERD_tree.vim	/^function! s:openInNewTab(stayCurrentTab)$/;"	f
openNodeRecursively	plugin/NERD_tree.vim	/^function! s:openNodeRecursively()$/;"	f
openNodeRecursively	src/nerdtree/plugin/NERD_tree.vim	/^function! s:openNodeRecursively()$/;"	f
open_selection	ruby/command-t/controller.rb	/^    def open_selection selection, options = {}$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
opfunc	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc	junk/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
opfunc2	junk/surround.vim	/^function! s:opfunc2(arg)$/;"	f
option_init	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:option_init(name, default) "{{{$/;"	f
options	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        options = {'LINES': console_height, 'COLUMNS': console_width, 'CODE_PAGE': code_page, 'FAST_MODE': fast_mode}$/;"	v
opts	bundle/vim-rails/autoload/rails.vim	/^function! s:opts()$/;"	f
opts	junk/rails.vim	/^function! s:opts()$/;"	f
order	src/vimtlib/ruby/tbibtools.rb	/^        def order(*value)$/;"	f	class:TBibTools.Configuration
os	bundle/conque-term/autoload/conque_term/conque_globals.py	/^import os # DEBUG$/;"	i
os	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^import os$/;"	i
os	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^import os$/;"	i
output	src/vimtlib/ruby/tbibtools.rb	/^        def output(value)$/;"	f	class:TBibTools.Configuration
output_blocks	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    output_blocks = 1$/;"	v	class:ConqueSoleSubprocess
output_pages	src/vimtlib/ruby/vimtips2help.rb	/^    def output_pages$/;"	f
p	bundle/conque-term/tests/profile.py	/^p = pstats.Stats('conque_profile_output')$/;"	v
p	src/vimtlib/ftplugin/glark.vim	/^inoremap <silent> <buffer> p <c-o>:call GlarkJump('p')<cr>$/;"	m
p	src/vimtlib/ftplugin/glark.vim	/^noremap  <silent> <buffer> p :call GlarkJump('p')<cr>$/;"	m
padding_for_selected_match	ruby/command-t/match_window.rb	/^    def padding_for_selected_match str$/;"	f	class:CommandT.MatchWindow
parse_cmd_line	plugin/space.vim	/^function! s:parse_cmd_line()$/;"	f
parse_cmd_line	src/vim-space/plugin/space.vim	/^function! s:parse_cmd_line()$/;"	f
parse_command_line_args	src/vimtlib/ruby/tbibtools.rb	/^    def parse_command_line_args(args)$/;"	f
parse_csi	bundle/conque-term/autoload/conque_term/conque.py	/^    def parse_csi(self, s):$/;"	m	class:Conque
parse_html_color	plugin/colorx.vim	/^function! s:parse_html_color()$/;"	f
path	ruby/fuzzy_file_finder.rb	/^    def path$/;"	f	class:FuzzyFileFinder.FileSystemEntry
path=	ruby/command-t/finder.rb	/^    def path= path$/;"	f	class:CommandT.Finder
path=	ruby/command-t/scanner/file_scanner.rb	/^    def path= str$/;"	f	class:CommandT.FileScanner
path_excluded?	ruby/command-t/scanner/file_scanner.rb	/^    def path_excluded? path$/;"	f	class:CommandT.FileScanner
pathjoin	bundle/vim-rails/autoload/rails.vim	/^function! s:pathjoin(...) abort$/;"	f
pathjoin	junk/rails.vim	/^function! s:pathjoin(...) abort$/;"	f
pathogen#cycle_filetype	autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#cycle_filetype	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#glob	autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f
pathogen#helptags	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f
pathogen#infect	autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#infect	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#is_disabled	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#join	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#legacyjoin	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#runtime_append_all_bundles	autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f
pathogen#runtime_append_all_bundles	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f
pathogen#runtime_findfile	autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) "{{{1$/;"	f
pathogen#runtime_findfile	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#runtime_prepend_subdirectories	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#separator	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#split	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#uniq	autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
pathogen#uniq	src/vim-pathogen/autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
paths	ruby/command-t/scanner/buffer_scanner.rb	/^    def paths$/;"	f	class:CommandT.BufferScanner
paths	ruby/command-t/scanner/file_scanner.rb	/^    def paths$/;"	f	class:CommandT.FileScanner
pathsplit	bundle/vim-rails/autoload/rails.vim	/^function! s:pathsplit(path) abort$/;"	f
pathsplit	junk/rails.vim	/^function! s:pathsplit(path) abort$/;"	f
pattern	src/vim-cucumber/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
pattern	syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
pdfdir	ruby/command-t/Makefile	/^pdfdir = $(docdir)$/;"	m
pickle	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    import cPickle as pickle$/;"	i
pickle	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    import pickle$/;"	i
pid	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    pid = None$/;"	v	class:ConqueSoleSubprocess
pid	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    pid = None$/;"	v	class:ConqueSoleWrapper
pid	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^    pid = 0$/;"	v	class:ConqueSubprocess
pim#BuildOverview	src/vimtlib/autoload/pim.vim	/^function! pim#BuildOverview(days, ...) "{{{3$/;"	f
pim#Calendar	src/vimtlib/autoload/pim.vim	/^        function! pim#Calendar(day, month, year, week, dir) "{{{3$/;"	f
pim#CleanFilename	src/vimtlib/autoload/pim.vim	/^function! pim#CleanFilename(fname) "{{{3$/;"	f
pim#CleanName	src/vimtlib/autoload/pim.vim	/^function! pim#CleanName(name) "{{{3$/;"	f
pim#CleanVikiName	src/vimtlib/autoload/pim.vim	/^function! pim#CleanVikiName(iviki, name) "{{{3$/;"	f
pim#Complete	src/vimtlib/autoload/pim.vim	/^function! pim#Complete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
pim#DefClass	src/vimtlib/autoload/pim.vim	/^function! pim#DefClass(class) "{{{3$/;"	f
pim#DeleteIndexEntries	src/vimtlib/autoload/pim.vim	/^function! pim#DeleteIndexEntries(type, class, name) "{{{3$/;"	f
pim#DeleteIndexEntry	src/vimtlib/autoload/pim.vim	/^function! pim#DeleteIndexEntry(fname) "{{{3$/;"	f
pim#DiffInDays	src/vimtlib/autoload/pim.vim	/^function! pim#DiffInDays(date, ...)$/;"	f
pim#EditFile	src/vimtlib/autoload/pim.vim	/^function! pim#EditFile(...) "{{{3$/;"	f
pim#ExtractField	src/vimtlib/autoload/pim.vim	/^function! pim#ExtractField(field, ...) "{{{3$/;"	f
pim#GlobDB	src/vimtlib/autoload/pim.vim	/^function! pim#GlobDB(class, ...) "{{{3$/;"	f
pim#GlobIndex	src/vimtlib/autoload/pim.vim	/^function! pim#GlobIndex(type, ...) "{{{3$/;"	f
pim#List	src/vimtlib/autoload/pim.vim	/^function! pim#List(class) "{{{3$/;"	f
pim#MakeDateEntry	src/vimtlib/autoload/pim.vim	/^function! pim#MakeDateEntry(vikiname, time) "{{{3$/;"	f
pim#MakeDisplayEntryD	src/vimtlib/autoload/pim.vim	/^function! pim#MakeDisplayEntryD(text)$/;"	f
pim#MakeDisplayEntryT	src/vimtlib/autoload/pim.vim	/^function! pim#MakeDisplayEntryT(text)$/;"	f
pim#MakeFileName	src/vimtlib/autoload/pim.vim	/^function! pim#MakeFileName(type, class, info, name) "{{{3$/;"	f
pim#MakeTaskEntry	src/vimtlib/autoload/pim.vim	/^function! pim#MakeTaskEntry(vikiname, category, priority, due) "{{{3$/;"	f
pim#Month	src/vimtlib/autoload/pim.vim	/^function! pim#Month(bang, date) "{{{3$/;"	f
pim#NewFile	src/vimtlib/autoload/pim.vim	/^function! pim#NewFile(...) "{{{3$/;"	f
pim#Prompt	src/vimtlib/autoload/pim.vim	/^function! pim#Prompt(class, what) "{{{3$/;"	f
pim#Rebuild	src/vimtlib/autoload/pim.vim	/^function! pim#Rebuild() "{{{3$/;"	f
pim#RebuildIndex	src/vimtlib/autoload/pim.vim	/^function! pim#RebuildIndex(class) "{{{3$/;"	f
pim#SaveDate	src/vimtlib/autoload/pim.vim	/^function! pim#SaveDate(name, class, date, ...) "{{{3$/;"	f
pim#SaveIndex	src/vimtlib/autoload/pim.vim	/^function! pim#SaveIndex(name, fname, text) "{{{3$/;"	f
pim#SaveTask	src/vimtlib/autoload/pim.vim	/^function! pim#SaveTask(name, class, category, priority, due) "{{{3$/;"	f
pim#SecondsSince1970	src/vimtlib/autoload/pim.vim	/^function! pim#SecondsSince1970(date, ...) "{{{3$/;"	f
pim#SelectDate	src/vimtlib/autoload/pim.vim	/^    function! pim#SelectDate(...) "{{{3$/;"	f
pim#SelectDateCallback	src/vimtlib/autoload/pim.vim	/^    function! pim#SelectDateCallback(day, month, year, week, dir) "{{{3$/;"	f
pim#SetBufferMaps	src/vimtlib/autoload/pim.vim	/^function! pim#SetBufferMaps() "{{{3$/;"	f
pim#StartEndTime	src/vimtlib/autoload/pim.vim	/^function! pim#StartEndTime(line, tstart, tend, tdur) "{{{3$/;"	f
pim#StartEndTimeCleanUp	src/vimtlib/autoload/pim.vim	/^function! pim#StartEndTimeCleanUp(tstart, tend, tdur)$/;"	f
pim#Today	src/vimtlib/autoload/pim.vim	/^function! pim#Today(bang, date) "{{{3$/;"	f
pim#UpdateIndex	src/vimtlib/autoload/pim.vim	/^function! pim#UpdateIndex(...) "{{{3$/;"	f
pim#Viki	src/vimtlib/autoload/pim.vim	/^function! pim#Viki() "{{{3$/;"	f
pim#Week	src/vimtlib/autoload/pim.vim	/^function! pim#Week(bang, date) "{{{3$/;"	f
plain_text	bundle/conque-term/autoload/conque_term/conque.py	/^    def plain_text(self, input):$/;"	m	class:Conque
plain_text	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def plain_text(self, line_nr, text, attributes, stats):$/;"	m	class:ConqueSole
plot	src/vimtlib/ruby/tcalc.rb	/^    def plot(ydim, xdim, yvals, register)$/;"	f
plug	plugin/supertab.vim	/^        let plug = substitute(map, '.\\{-}\\(<Plug>\\w\\+\\).*', '\\1', '')$/;"	v
plug_map	plugin/supertab.vim	/^        let plug_map = maparg(plug, 'i')$/;"	v
pluginEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:pluginEdit(cmd,...)$/;"	f
pluginEdit	junk/rails.vim	/^function! s:pluginEdit(cmd,...)$/;"	f
pluginList	bundle/vim-rails/autoload/rails.vim	/^function! s:pluginList(A,L,P)$/;"	f
pluginList	junk/rails.vim	/^function! s:pluginList(A,L,P)$/;"	f
pop_command	bundle/vim-rails/autoload/rails.vim	/^function! s:pop_command()$/;"	f
pop_command	junk/rails.vim	/^function! s:pop_command()$/;"	f
post_install	src/vimtlib/ruby/vimball.rb	/^    def post_install$/;"	f
postprocess	src/vimtlib/ruby/EvalSelection.rb	/^    def postprocess(text)$/;"	f	class:EvalSelectionAbstractInterpreter
prefix	ruby/command-t/Makefile	/^prefix = $(DESTDIR)\/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr$/;"	m
preload	ruby/command-t/Makefile	/^preload = $/;"	m
prephelp	bundle/vim-rails/autoload/rails.vim	/^function! s:prephelp()$/;"	f
prephelp	junk/rails.vim	/^function! s:prephelp()$/;"	f
preprocess_selectCrossref	src/vimtlib/ruby/tbibtools.rb	/^        def preprocess_selectCrossref(e)$/;"	f	class:TBibTools.Configuration
preprocess_unselectCrossref	src/vimtlib/ruby/tbibtools.rb	/^        def preprocess_unselectCrossref(e)$/;"	f	class:TBibTools.Configuration
press_enter	src/vimtlib/ruby/tcalc.rb	/^    def press_enter$/;"	f
previewNode	plugin/NERD_tree.vim	/^function! s:previewNode(openNewWin)$/;"	f
previewNode	src/nerdtree/plugin/NERD_tree.vim	/^function! s:previewNode(openNewWin)$/;"	f
print_array	src/vimtlib/ruby/tcalc.rb	/^    def print_array(arr, reversed=true, align=true)$/;"	f
print_error	ruby/command-t/match_window.rb	/^    def print_error msg$/;"	f	class:CommandT.MatchWindow
print_match	ruby/command-t/match_window.rb	/^    def print_match idx$/;"	f	class:CommandT.MatchWindow
print_matches	ruby/command-t/match_window.rb	/^    def print_matches$/;"	f	class:CommandT.MatchWindow
print_no_such_file_or_directory	ruby/command-t/match_window.rb	/^    def print_no_such_file_or_directory$/;"	f	class:CommandT.MatchWindow
proc	bundle/conque-term/autoload/conque_term/conque.py	/^    proc = None$/;"	v	class:Conque
proc	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        proc = ConqueSoleSubprocess()$/;"	v
proc	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    proc = None$/;"	v	class:ConqueSoleWrapper
process	bundle/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process	junk/surround.vim	/^function! s:process(string)$/;"	f
process	src/vimtlib/ruby/tbibtools.rb	/^    def process(args)$/;"	f
process	src/vimtlib/ruby/vimtips2help.rb	/^    def process$/;"	f
process_range	src/vimtlib/ruby/tvimtools.rb	/^    def process_range(from, to, &block)$/;"	f	class:TVimTools
prompt	bundle/session.vim/autoload/xolox/session.vim	/^function! s:prompt(msg, var) " {{{2$/;"	f
promptToDelBuffer	nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToDelBuffer	plugin/NERD_tree.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToDelBuffer	plugin/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToDelBuffer	src/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToDelBuffer	src/nerdtree/plugin/NERD_tree.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
prototype.AssessName	src/vimtlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.AssessName(world, name) dict "{{{3$/;"	f
prototype.BuildTable	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.BuildTable() dict "{{{3$/;"	f
prototype.CleanFilter	src/vimtlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	src/vimtlib/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	src/vimtlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	src/vimtlib/autoload/tlib/Filter_seq.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.ClearAllMarks	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.ClearAllMarks() dict "{{{3$/;"	f
prototype.CloseScratch	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.CloseScratch(...) dict "{{{3$/;"	f
prototype.CurrentItem	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.CurrentItem() dict "{{{3$/;"	f
prototype.DisplayFilter	src/vimtlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.DisplayFilter(filter) dict "{{{3$/;"	f
prototype.DisplayFilter	src/vimtlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.DisplayFilter(filter) dict "{{{3$/;"	f
prototype.DisplayFilter	src/vimtlib/autoload/tlib/Filter_seq.vim	/^function! s:prototype.DisplayFilter(filter) dict "{{{3$/;"	f
prototype.DisplayFilter	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.DisplayFilter() dict "{{{3$/;"	f
prototype.DisplayHelp	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.DisplayHelp() dict "{{{3$/;"	f
prototype.DisplayList	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.DisplayList(query, ...) dict "{{{3$/;"	f
prototype.DisplayListMark	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.DisplayListMark(x, y, mark) dict "{{{3$/;"	f
prototype.Dummy	src/vimtlib/autoload/tlib/Test.vim	/^function! s:prototype.Dummy() dict "{{{3$/;"	f
prototype.Dummy	src/vimtlib/autoload/tlib/TestChild.vim	/^function! s:prototype.Dummy() dict "{{{3$/;"	f
prototype.Extend	src/vimtlib/autoload/tlib/Object.vim	/^function! s:prototype.Extend(dictionary) dict "{{{3$/;"	f
prototype.FilterIsEmpty	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.FilterIsEmpty() dict "{{{3$/;"	f
prototype.FilterRxPrefix	src/vimtlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.FilterRxPrefix() dict "{{{3$/;"	f
prototype.FilterRxPrefix	src/vimtlib/autoload/tlib/Filter_seq.vim	/^function! s:prototype.FilterRxPrefix() dict "{{{3$/;"	f
prototype.FilterRxPrefix	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.FilterRxPrefix() dict "{{{3$/;"	f
prototype.FollowCursor	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.FollowCursor() dict "{{{3$/;"	f
prototype.FormatArgs	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.FormatArgs(format_string, arg) dict "{{{3$/;"	f
prototype.FormatFilename	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.FormatFilename(file) dict "{{{3$/;"	f
prototype.FormatName	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.FormatName(format, value) dict "{{{3$/;"	f
prototype.GetBaseIdx	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.GetBaseIdx(idx) dict "{{{3$/;"	f
prototype.GetBaseIdx0	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.GetBaseIdx0(idx) dict "{{{3$/;"	f
prototype.GetBaseItem	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.GetBaseItem(idx) dict "{{{3$/;"	f
prototype.GetItem	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.GetItem(idx) dict "{{{3$/;"	f
prototype.GetListIdx	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.GetListIdx(baseidx) dict "{{{3$/;"	f
prototype.GetRx	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.GetRx(filter) dict "{{{3$/;"	f
prototype.GetRx0	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.GetRx0(...) dict "{{{3$/;"	f
prototype.GetSelectedItems	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.GetSelectedItems(current) dict "{{{3$/;"	f
prototype.Highlight_filename	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.Highlight_filename() dict "{{{3$/;"	f
prototype.Inherit	src/vimtlib/autoload/tlib/Object.vim	/^function! s:prototype.Inherit(object) dict "{{{3$/;"	f
prototype.IsA	src/vimtlib/autoload/tlib/Object.vim	/^function! s:prototype.IsA(class) dict "{{{3$/;"	f
prototype.IsRelated	src/vimtlib/autoload/tlib/Object.vim	/^function! s:prototype.IsRelated(object) dict "{{{3$/;"	f
prototype.IsValidFilter	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.IsValidFilter() dict "{{{3$/;"	f
prototype.MarkCurrent	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.MarkCurrent(y) dict "{{{3$/;"	f
prototype.Match	src/vimtlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Match(world, text) dict "{{{3$/;"	f
prototype.Match	src/vimtlib/autoload/tlib/Filter_seq.vim	/^function! s:prototype.Match(world, text) dict "{{{3$/;"	f
prototype.MatchBaseIdx	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.MatchBaseIdx(idx) dict "{{{3$/;"	f
prototype.Methods	src/vimtlib/autoload/tlib/Object.vim	/^function! s:prototype.Methods(...) dict "{{{3$/;"	f
prototype.New	src/vimtlib/autoload/tlib/Object.vim	/^function! s:prototype.New(...) dict "{{{3$/;"	f
prototype.PopFilter	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.PopFilter() dict "{{{3$/;"	f
prototype.PushFrontFilter	src/vimtlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	src/vimtlib/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	src/vimtlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	src/vimtlib/autoload/tlib/Filter_seq.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.PushFrontFilter(char) dict "{{{3$/;"	f
prototype.ReduceFilter	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.ReduceFilter() dict "{{{3$/;"	f
prototype.ReduceFrontFilter	src/vimtlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.ReduceFrontFilter	src/vimtlib/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.ReduceFrontFilter	src/vimtlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.ReduceFrontFilter	src/vimtlib/autoload/tlib/Filter_seq.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.Reset	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.Reset(...) dict "{{{3$/;"	f
prototype.ResetSelected	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.ResetSelected() dict "{{{3$/;"	f
prototype.Resize	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.Resize(hsize, vsize) dict "{{{3$/;"	f
prototype.RespondTo	src/vimtlib/autoload/tlib/Object.vim	/^function! s:prototype.RespondTo(name) dict "{{{3$/;"	f
prototype.RestoreOrigin	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.RestoreOrigin(...) dict "{{{3$/;"	f
prototype.Retrieve	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.Retrieve(anyway) dict "{{{3$/;"	f
prototype.SelectItem	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.SelectItem(mode, index) dict "{{{3$/;"	f
prototype.SetBaseItem	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.SetBaseItem(idx, item) dict "{{{3$/;"	f
prototype.SetFilter	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.SetFilter() dict "{{{3$/;"	f
prototype.SetFrontFilter	src/vimtlib/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	src/vimtlib/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	src/vimtlib/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	src/vimtlib/autoload/tlib/Filter_seq.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.SetFrontFilter(pattern) dict "{{{3$/;"	f
prototype.SetInitialFilter	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.SetInitialFilter(filter) dict "{{{3$/;"	f
prototype.SetMatchMode	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.SetMatchMode(match_mode) dict "{{{3$/;"	f
prototype.SetOffset	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.SetOffset() dict "{{{3$/;"	f
prototype.SetOrigin	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.SetOrigin(...) dict "{{{3$/;"	f
prototype.SetPrefIdx	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.SetPrefIdx() dict "{{{3$/;"	f
prototype.SetStatusline	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.SetStatusline(query) dict "{{{3$/;"	f
prototype.Set_display_format	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.Set_display_format(value) dict "{{{3$/;"	f
prototype.Set_highlight_filename	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.Set_highlight_filename() dict "{{{3$/;"	f
prototype.Super	src/vimtlib/autoload/tlib/Object.vim	/^function! s:prototype.Super(method, arglist) dict "{{{3$/;"	f
prototype.SwitchWindow	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.SwitchWindow(where) dict "{{{3$/;"	f
prototype.UseInputListScratch	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.UseInputListScratch() dict "{{{3$/;"	f
prototype.UseScratch	src/vimtlib/autoload/tlib/World.vim	/^function! s:prototype.UseScratch() dict "{{{3$/;"	f
prune_colors	bundle/conque-term/autoload/conque_term/conque.py	/^    def prune_colors(self):$/;"	m	class:Conque
psdir	ruby/command-t/Makefile	/^psdir = $(docdir)$/;"	m
pstats	bundle/conque-term/tests/profile.py	/^import pstats$/;"	i
pty	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^import pty$/;"	i
push_chdir	bundle/vim-rails/autoload/rails.vim	/^function! s:push_chdir(...)$/;"	f
push_chdir	junk/rails.vim	/^function! s:push_chdir(...)$/;"	f
putCursorInTreeWin	plugin/NERD_tree.vim	/^function! s:putCursorInTreeWin()$/;"	f
putCursorInTreeWin	src/nerdtree/plugin/NERD_tree.vim	/^function! s:putCursorInTreeWin()$/;"	f
putCursorOnBookmarkTable	plugin/NERD_tree.vim	/^function! s:putCursorOnBookmarkTable()$/;"	f
putCursorOnBookmarkTable	src/nerdtree/plugin/NERD_tree.vim	/^function! s:putCursorOnBookmarkTable()$/;"	f
pwd	ruby/command-t/vim.rb	/^    def self.pwd$/;"	F	class:CommandT.VIM
pwd	ruby/vim.rb	/^  def self.pwd$/;"	F	class:VIM
q	src/vimtlib/ftplugin/glark.vim	/^inoremap <silent> <buffer> q <c-o>:wincmd c<cr>$/;"	m
q	src/vimtlib/ftplugin/glark.vim	/^noremap  <silent> <buffer> q :wincmd c<cr>$/;"	m
query	src/vimtlib/ruby/tbibtools.rb	/^        def query(value)$/;"	f	class:TBibTools.Configuration
quit?	src/vimtlib/ruby/tcalc.rb	/^    def quit?(input)$/;"	f
quit?	src/vimtlib/ruby/tcalc.rb	/^    def quit?(input)$/;"	f	class:TCalc
r	src/vimtlib/ftplugin/glark.vim	/^inoremap <silent> <buffer> r <c-o>:call GlarkJump('r')<cr>$/;"	m
r	src/vimtlib/ftplugin/glark.vim	/^noremap  <silent> <buffer> r :call GlarkJump('r')<cr>$/;"	m
rails#STATUSLINE	bundle/vim-rails/autoload/rails.vim	/^function! rails#STATUSLINE(...)$/;"	f
rails#STATUSLINE	junk/rails.vim	/^function! rails#STATUSLINE(...)$/;"	f
rails#app	bundle/vim-rails/autoload/rails.vim	/^function! rails#app(...)$/;"	f
rails#app	junk/rails.vim	/^function! rails#app(...)$/;"	f
rails#buffer	bundle/vim-rails/autoload/rails.vim	/^function! rails#buffer(...)$/;"	f
rails#buffer	junk/rails.vim	/^function! rails#buffer(...)$/;"	f
rails#cache_clear	bundle/vim-rails/autoload/rails.vim	/^function! rails#cache_clear(...)$/;"	f
rails#cache_clear	junk/rails.vim	/^function! rails#cache_clear(...)$/;"	f
rails#camelize	bundle/vim-rails/autoload/rails.vim	/^function! rails#camelize(str)$/;"	f
rails#camelize	junk/rails.vim	/^function! rails#camelize(str)$/;"	f
rails#log_syntax	bundle/vim-rails/autoload/rails.vim	/^function! rails#log_syntax()$/;"	f
rails#log_syntax	junk/rails.vim	/^function! rails#log_syntax()$/;"	f
rails#new_app_command	bundle/vim-rails/autoload/rails.vim	/^function! rails#new_app_command(bang,...)$/;"	f
rails#new_app_command	junk/rails.vim	/^function! rails#new_app_command(bang,...)$/;"	f
rails#pluralize	bundle/vim-rails/autoload/rails.vim	/^function! rails#pluralize(word)$/;"	f
rails#pluralize	junk/rails.vim	/^function! rails#pluralize(word)$/;"	f
rails#singularize	bundle/vim-rails/autoload/rails.vim	/^function! rails#singularize(word)$/;"	f
rails#singularize	junk/rails.vim	/^function! rails#singularize(word)$/;"	f
rails#statusline	bundle/vim-rails/autoload/rails.vim	/^function! rails#statusline(...)$/;"	f
rails#statusline	junk/rails.vim	/^function! rails#statusline(...)$/;"	f
rails#underscore	bundle/vim-rails/autoload/rails.vim	/^function! rails#underscore(str)$/;"	f
rails#underscore	junk/rails.vim	/^function! rails#underscore(str)$/;"	f
railsPluginAbolish	bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginAbolish$/;"	a
railsPluginAuto	bundle/vim-rails/autoload/rails.vim	/^augroup railsPluginAuto$/;"	a
railsPluginAuto	junk/rails.vim	/^augroup railsPluginAuto$/;"	a
railsPluginDetect	bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginDetect$/;"	a
railsPluginMenu	bundle/vim-rails/plugin/rails.vim	/^augroup railsPluginMenu$/;"	a
rcmd	src/vimtlib/plugin/tGpg.vim	/^        let rcmd = exists('*s:TGpgRead_'. g) ? 's:TGpgRead_'. g : 's:TGpgRead'$/;"	v
re	bundle/conque-term/autoload/conque_term/conque.py	/^import re$/;"	i
re	bundle/conque-term/autoload/conque_term/conque_globals.py	/^import re$/;"	i
re	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^import re$/;"	i
read	bundle/conque-term/autoload/conque_term/conque.py	/^    def read(self, timeout=1, set_cursor=True, return_output=False, update_buffer=True):$/;"	m	class:Conque
read	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def read(self, timeout=1, set_cursor=True, return_output=False, update_buffer=True):$/;"	m	class:ConqueSole
read	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    def read(self, chars=1, start=0):$/;"	m	class:ConqueSoleSharedMemory
read	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def read(self):$/;"	m	class:ConqueSoleSubprocess
read	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    def read(self, start_line, num_lines, timeout=0):$/;"	m	class:ConqueSoleWrapper
read	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^    def read(self, timeout=1):$/;"	m	class:ConqueSubprocess
read_buffered_input	src/vimtlib/ruby/tcalc.rb	/^    def read_buffered_input(*args)$/;"	f
read_config	src/vimtlib/ruby/vimball.rb	/^        def read_config(config)$/;"	f	class:Vimball
read_count	bundle/conque-term/autoload/conque_term/conque.py	/^    read_count = 0$/;"	v	class:Conque
read_input	src/vimtlib/ruby/tcalc.rb	/^            def read_input(prompt='> ')$/;"	f	class:setup
read_input	src/vimtlib/ruby/tcalc.rb	/^    def read_input(prompt='> ')$/;"	f
read_input	src/vimtlib/ruby/tcalc.rb	/^    def read_input(prompt='> ', index=0, string=@buffer)$/;"	f
read_vimball	src/vimtlib/ruby/vimball.rb	/^    def read_vimball(file)$/;"	f
readable_app	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_app() dict abort$/;"	f
readable_app	junk/rails.vim	/^function! s:readable_app() dict abort$/;"	f
readable_calculate_file_type	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_calculate_file_type() dict abort$/;"	f
readable_calculate_file_type	junk/rails.vim	/^function! s:readable_calculate_file_type() dict abort$/;"	f
readable_controller_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_controller_name(...) dict abort$/;"	f
readable_controller_name	junk/rails.vim	/^function! s:readable_controller_name(...) dict abort$/;"	f
readable_default_rake_task	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_default_rake_task(lnum) dict abort$/;"	f
readable_default_rake_task	junk/rails.vim	/^function! s:readable_default_rake_task(lnum) dict abort$/;"	f
readable_define_pattern	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_define_pattern() dict abort$/;"	f
readable_define_pattern	junk/rails.vim	/^function! s:readable_define_pattern() dict abort$/;"	f
readable_end_of	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_end_of(lnum) dict abort$/;"	f
readable_end_of	junk/rails.vim	/^function! s:readable_end_of(lnum) dict abort$/;"	f
readable_last_format	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_format(start) dict abort$/;"	f
readable_last_format	junk/rails.vim	/^function! s:readable_last_format(start) dict abort$/;"	f
readable_last_method	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method(start) dict abort$/;"	f
readable_last_method	junk/rails.vim	/^function! s:readable_last_method(start) dict abort$/;"	f
readable_last_method_line	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_method_line(start) dict abort$/;"	f
readable_last_method_line	junk/rails.vim	/^function! s:readable_last_method_line(start) dict abort$/;"	f
readable_last_opening_line	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_last_opening_line(start,pattern,limit) dict abort$/;"	f
readable_last_opening_line	junk/rails.vim	/^function! s:readable_last_opening_line(start,pattern,limit) dict abort$/;"	f
readable_line_count	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_line_count() dict abort$/;"	f
readable_line_count	junk/rails.vim	/^function! s:readable_line_count() dict abort$/;"	f
readable_model_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_model_name(...) dict abort$/;"	f
readable_model_name	junk/rails.vim	/^function! s:readable_model_name(...) dict abort$/;"	f
readable_preview_urls	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_preview_urls(lnum) dict abort$/;"	f
readable_preview_urls	junk/rails.vim	/^function! s:readable_preview_urls(lnum) dict abort$/;"	f
readable_related	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_related(...) dict abort$/;"	f
readable_related	junk/rails.vim	/^function! s:readable_related(...) dict abort$/;"	f
readable_type_name	bundle/vim-rails/autoload/rails.vim	/^function! s:readable_type_name() dict abort$/;"	f
readable_type_name	junk/rails.vim	/^function! s:readable_type_name() dict abort$/;"	f
readfile	bundle/vim-rails/autoload/rails.vim	/^function! s:readfile(path,...)$/;"	f
readfile	junk/rails.vim	/^function! s:readfile(path,...)$/;"	f
ready?	src/vimtlib/ruby/vimball.rb	/^    def ready?$/;"	f
recursive_match	ruby/command-t/match.c	/^double recursive_match(matchinfo_t *m,  \/\/ sharable meta-data$/;"	f
redraw	bundle/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
redraw	junk/surround.vim	/^function! s:redraw()$/;"	f
redraw	ruby/command-t/prompt.rb	/^    def redraw$/;"	f	class:CommandT.Prompt
refreshCurrent	plugin/NERD_tree.vim	/^function! s:refreshCurrent()$/;"	f
refreshCurrent	src/nerdtree/plugin/NERD_tree.vim	/^function! s:refreshCurrent()$/;"	f
refreshRoot	plugin/NERD_tree.vim	/^function! s:refreshRoot()$/;"	f
refreshRoot	src/nerdtree/plugin/NERD_tree.vim	/^function! s:refreshRoot()$/;"	f
register_for_key_presses	ruby/command-t/controller.rb	/^    def register_for_key_presses$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
reindent	bundle/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
reindent	junk/surround.vim	/^function! s:reindent() " {{{1$/;"	f
relative_path_under_working_directory	ruby/command-t/vim/path_utilities.rb	/^      def relative_path_under_working_directory path$/;"	f	class:CommandT.VIM.PathUtilities
relglob	bundle/vim-rails/autoload/rails.vim	/^function! s:relglob(...)$/;"	f
relglob	junk/rails.vim	/^function! s:relglob(...)$/;"	f
remove_menu	src/vimtlib/ruby/EvalSelection.rb	/^    def remove_menu$/;"	f	class:EvalSelectionAbstractInterpreter
remove_menu	src/vimtlib/ruby/EvalSelection.rb	/^    def remove_menu(id)$/;"	f	class:EvalSelection
remove_space_mappings	plugin/space.vim	/^function! s:remove_space_mappings()$/;"	f
remove_space_mappings	src/vim-space/plugin/space.vim	/^function! s:remove_space_mappings()$/;"	f
renderBookmarks	plugin/NERD_tree.vim	/^function! s:renderBookmarks()$/;"	f
renderBookmarks	src/nerdtree/plugin/NERD_tree.vim	/^function! s:renderBookmarks()$/;"	f
renderView	plugin/NERD_tree.vim	/^function! s:renderView()$/;"	f
renderView	src/nerdtree/plugin/NERD_tree.vim	/^function! s:renderView()$/;"	f
renderViewSavingPosition	plugin/NERD_tree.vim	/^function! s:renderViewSavingPosition()$/;"	f
renderViewSavingPosition	src/nerdtree/plugin/NERD_tree.vim	/^function! s:renderViewSavingPosition()$/;"	f
repeat	bundle/vim-surround/plugin/surround.vim	/^function! s:repeat(str,count)$/;"	f
repeat	junk/surround.vim	/^function! s:repeat(str,count)$/;"	f
repl	src/vimtlib/ruby/tcalc.rb	/^        def repl(initial_args)$/;"	f	class:TCalc
repl	src/vimtlib/ruby/tcalc.rb	/^    def repl(initial=[])$/;"	f	class:TCalc
replace_yy	src/vimtlib/ruby/tbibtools.rb	/^    def replace_yy(text)$/;"	f
repo	junk/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo	plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_bare	junk/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_bare	plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_bare	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_dir	junk/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dir	plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dir	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	junk/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_dirglob	plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_dirglob	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	junk/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp	plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	junk/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_chomp_in_tree	plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_chomp_in_tree	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	junk/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_git_command	plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_git_command	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head_ref	plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	junk/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_keywordprg	plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_keywordprg	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	junk/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_rev_parse	plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_rev_parse	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	junk/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_superglob	plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_superglob	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	junk/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_translate	plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_translate	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	junk/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_tree	plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_tree	src/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
res	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        res = proc.open(cmd_line, mem_key, options)$/;"	v
rescan!	ruby/fuzzy_file_finder.rb	/^  def rescan!$/;"	f	class:FuzzyFileFinder
reset	src/vimtlib/ruby/tcalc.rb	/^        def reset$/;"	f	class:TCalc
reset	src/vimtlib/ruby/tcalc.rb	/^    def reset$/;"	f	class:TCalc
reset_console	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def reset_console(self, buf_info, add_block=True):$/;"	m	class:ConqueSoleSubprocess
reset_size	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def reset_size(self, line):$/;"	m	class:ConqueScreen
reset_words	src/vimtlib/ruby/tcalc.rb	/^    def reset_words(initial=false)$/;"	f	class:TCalc
resetomnicomplete	bundle/vim-rails/autoload/rails.vim	/^function! s:resetomnicomplete()$/;"	f
resetomnicomplete	junk/rails.vim	/^function! s:resetomnicomplete()$/;"	f
restore	ruby/command-t/settings.rb	/^    def restore$/;"	f	class:CommandT.Settings
restoreScreenState	plugin/NERD_tree.vim	/^function! s:restoreScreenState()$/;"	f
restoreScreenState	src/nerdtree/plugin/NERD_tree.vim	/^function! s:restoreScreenState()$/;"	f
restore_window_dimensions	ruby/command-t/match_window.rb	/^    def restore_window_dimensions$/;"	f	class:CommandT.MatchWindow
resume	bundle/conque-term/autoload/conque_term/conque.py	/^    def resume(self):$/;"	m	class:Conque
resume	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def resume(self):$/;"	m	class:ConqueSole
resume	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    def resume(self):$/;"	m	class:ConqueSoleWrapper
revealBookmark	plugin/NERD_tree.vim	/^function! s:revealBookmark(name)$/;"	f
revealBookmark	src/nerdtree/plugin/NERD_tree.vim	/^function! s:revealBookmark(name)$/;"	f
rgb	colors/github256.vim	/^	fun <SID>rgb(rgb)$/;"	f
rgb_color	colors/github256.vim	/^	fun <SID>rgb_color(x, y, z)$/;"	f
rgb_level	colors/github256.vim	/^	fun <SID>rgb_level(n)$/;"	f
rgb_number	colors/github256.vim	/^	fun <SID>rgb_number(x)$/;"	f
root?	ruby/fuzzy_file_finder.rb	/^    def root?$/;"	f	class:FuzzyFileFinder.Directory
rquote	bundle/vim-rails/autoload/rails.vim	/^function! s:rquote(str)$/;"	f
rquote	junk/rails.vim	/^function! s:rquote(str)$/;"	f
ruby	ruby/command-t/Makefile	/^ruby = \/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr\/bin\/ruby$/;"	m
ruby_inspect	ruby/command-t/ext.h	/^#define ruby_inspect(/;"	d
ruby_minlines	syntax/ruby.vim	/^    let ruby_minlines = 50$/;"	v
ruby_version	ruby/command-t/Makefile	/^ruby_version = 1.8$/;"	m
rubycomplete#Complete	autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubylibdir	ruby/command-t/Makefile	/^rubylibdir = $(libdir)\/ruby\/$(ruby_version)$/;"	m
run	src/vimtlib/ruby/vimball.rb	/^    def run$/;"	f
s	bundle/vim-surround/plugin/surround.vim	/^      vmap  s    <Plug>Vsurround$/;"	m
s	junk/colorize.vim	/^noremap s :highlight Normal guibg=lightyellow<cr>s$/;"	m
s	junk/surround.vim	/^            vmap  s    <Plug>Vsurround$/;"	m
s	src/vimtlib/test/tlib.vim	/^    let s = printf('%sfoo%sbar%s', c, c, c)$/;"	v
s:	src/vimtlib/plugin/tGpg.vim	/^        let s:{s:var} = g:{s:var}$/;"	v
s:ABBR_TRUNCATION_MARK	plugin/fuzzyfinder.vim	/^let s:ABBR_TRUNCATION_MARK = '...'$/;"	v
s:Bookmark	plugin/NERD_tree.vim	/^let s:Bookmark = {}$/;"	v
s:Bookmark	src/nerdtree/plugin/NERD_tree.vim	/^let s:Bookmark = {}$/;"	v
s:ERROR	autoload/vimball.vim	/^ let s:ERROR   = 2$/;"	v
s:InfoFileManager	plugin/fuzzyfinder.vim	/^let s:InfoFileManager = { 'originals' : {} }$/;"	v
s:InterVikiRx	src/vimtlib/autoload/viki.vim	/^let s:InterVikiRx = '^\\(['. g:vikiUpperCharacters .']\\+\\)::\\(.*\\)$'$/;"	v
s:InterVikis	src/vimtlib/autoload/viki.vim	/^let s:InterVikis  = []$/;"	v
s:KeyMap	plugin/NERD_tree.vim	/^let s:KeyMap = {}$/;"	v
s:KeyMap	src/nerdtree/plugin/NERD_tree.vim	/^let s:KeyMap = {}$/;"	v
s:MATCHING_RATE_BASE	plugin/fuzzyfinder.vim	/^let s:MATCHING_RATE_BASE = 1000000$/;"	v
s:MRU_Exclude_List	plugin/bufexplorer.vim	/^let s:MRU_Exclude_List = ["[BufExplorer]","__MRU_Files__"]$/;"	v
s:MenuController	plugin/NERD_tree.vim	/^let s:MenuController = {}$/;"	v
s:MenuController	src/nerdtree/plugin/NERD_tree.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	plugin/NERD_tree.vim	/^let s:MenuItem = {}$/;"	v
s:MenuItem	src/nerdtree/plugin/NERD_tree.vim	/^let s:MenuItem = {}$/;"	v
s:NERDFileNameEscape	junk/NERD_commenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDFileNameEscape	src/nerdcommenter/plugin/NERD_commenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDTreeBufName	plugin/NERD_tree.vim	/^let s:NERDTreeBufName = 'NERD_tree_'$/;"	v
s:NERDTreeBufName	src/nerdtree/plugin/NERD_tree.vim	/^let s:NERDTreeBufName = 'NERD_tree_'$/;"	v
s:NERDTreeSortStarIndex	plugin/NERD_tree.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NERDTreeSortStarIndex	src/nerdtree/plugin/NERD_tree.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NERD_tree_version	plugin/NERD_tree.vim	/^let s:NERD_tree_version = '4.1.0'$/;"	v
s:NERD_tree_version	src/nerdtree/plugin/NERD_tree.vim	/^let s:NERD_tree_version = '4.1.0'$/;"	v
s:OPEN_MODE_CURRENT	plugin/fuzzyfinder.vim	/^let s:OPEN_MODE_CURRENT = 1$/;"	v
s:OPEN_MODE_SPLIT	plugin/fuzzyfinder.vim	/^let s:OPEN_MODE_SPLIT   = 2$/;"	v
s:OPEN_MODE_TAB	plugin/fuzzyfinder.vim	/^let s:OPEN_MODE_TAB     = 4$/;"	v
s:OPEN_MODE_VSPLIT	plugin/fuzzyfinder.vim	/^let s:OPEN_MODE_VSPLIT  = 3$/;"	v
s:OptionManager	plugin/fuzzyfinder.vim	/^let s:OptionManager = { 'originals' : {} }$/;"	v
s:PATH_SEPARATOR	plugin/fuzzyfinder.vim	/^let s:PATH_SEPARATOR = (has('win32') || has('win64') ? '\\' : '\/')$/;"	v
s:Path	plugin/NERD_tree.vim	/^let s:Path = {}$/;"	v
s:Path	src/nerdtree/plugin/NERD_tree.vim	/^let s:Path = {}$/;"	v
s:TabularCommands	plugin/Tabular.vim	/^let s:TabularCommands = {}$/;"	v
s:TabularCommands	src/tabular/plugin/Tabular.vim	/^let s:TabularCommands = {}$/;"	v
s:Tlist_Skip_Refresh	junk/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	plugin/NERD_tree.vim	/^let s:TreeDirNode = copy(s:TreeFileNode)$/;"	v
s:TreeDirNode	src/nerdtree/plugin/NERD_tree.vim	/^let s:TreeDirNode = copy(s:TreeFileNode)$/;"	v
s:TreeFileNode	plugin/NERD_tree.vim	/^let s:TreeFileNode = {}$/;"	v
s:TreeFileNode	src/nerdtree/plugin/NERD_tree.vim	/^let s:TreeFileNode = {}$/;"	v
s:USAGE	autoload/vimball.vim	/^ let s:USAGE   = 0$/;"	v
s:WARNING	autoload/vimball.vim	/^ let s:WARNING = 1$/;"	v
s:WindowManager	plugin/fuzzyfinder.vim	/^let s:WindowManager = { 'buf_nr' : -1 }$/;"	v
s:aFile	src/vimtlib/plugin/TortoiseSVN.vim	/^let s:aFile = '<A FILE>'$/;"	v
s:abstract_prototype	junk/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:abstract_prototype	plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:abstract_prototype	src/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:app	plugin/colorx.vim	/^	let s:app = 'MacVim.app'$/;"	v
s:app	plugin/colorx.vim	/^let s:app = 'Terminal.app'$/;"	v
s:app_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype = {}$/;"	v
s:app_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:app_prototype.cache = s:cache_prototype$/;"	v
s:app_prototype	junk/rails.vim	/^let s:app_prototype = {}$/;"	v
s:app_prototype	junk/rails.vim	/^let s:app_prototype.cache = s:cache_prototype$/;"	v
s:apps	bundle/vim-rails/autoload/rails.vim	/^  let s:apps = {}$/;"	v
s:apps	junk/rails.vim	/^  let s:apps = {}$/;"	v
s:ascrpt	plugin/colorx.vim	/^let s:ascrpt = ['-e "tell application \\"' . s:app . '\\""', $/;"	v
s:assert	src/vimtlib/plugin/07tassert.vim	/^let s:assert = g:TASSERT$/;"	v
s:assignment_keywords	bundle/vim-coffee-script/indent/coffee.vim	/^let s:assignment_keywords = s:RegexpGroup(':', '=')$/;"	v
s:attributes	indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	src/vim-haml/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:b	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:back	bundle/vim-colors-solarized/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:bar	src/vimtlib/test/tlib.vim	/^let s:bar = 4$/;"	v
s:base	src/vimtlib/autoload/tlib/signs.vim	/^let s:base = 2327$/;"	v
s:base	src/vimtlib/plugin/quickfixsigns.vim	/^let s:base = 5272$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:bb	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:bmru	src/vimtlib/autoload/tlib/buffer.vim	/^let s:bmru = []$/;"	v
s:bright	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:browsefilter	ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	src/vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	src/vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	src/vim-haml/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:buffer	src/vimtlib/plugin/cmdlinehelp.vim	/^let s:buffer = ''$/;"	v
s:buffer_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	junk/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	junk/rails.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	src/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:bufnr	src/vimtlib/plugin/cmdlinehelp.vim	/^let s:bufnr = -1$/;"	v
s:c	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:cache_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:cache_prototype = {'dict': {}}$/;"	v
s:cache_prototype	junk/rails.vim	/^let s:cache_prototype = {'dict': {}}$/;"	v
s:cm1	src/vimtlib/syntax/viki.vim	/^      let s:cm1="Dark"$/;"	v
s:cm1	src/vimtlib/syntax/viki.vim	/^      let s:cm1="Light"$/;"	v
s:cm2	src/vimtlib/syntax/viki.vim	/^      let s:cm2="Dark"$/;"	v
s:cm2	src/vimtlib/syntax/viki.vim	/^      let s:cm2="Light"$/;"	v
s:cmi	src/vimtlib/plugin/quickfixsigns.vim	/^    let s:cmi = index(g:quickfixsigns_marks_def.event, 'CursorMovedI')$/;"	v
s:cmn	src/vimtlib/plugin/quickfixsigns.vim	/^    let s:cmn = index(g:quickfixsigns_marks_def.event, 'CursorMoved')$/;"	v
s:colorscheme_list	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:commands	junk/fugitive.vim	/^let s:commands = []$/;"	v
s:commands	plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:commands	src/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:continuations	bundle/vim-coffee-script/indent/coffee.vim	/^let s:continuations = s:RegexpGroup('-\\@<!>', '=\\@<!>', '-\\@<!-', '+\\@<!+',$/;"	v
s:cpo_save	bundle/vim-rails/autoload/rails.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/vim-surround/plugin/surround.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	junk/grep.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	junk/rails.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	junk/surround.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	junk/taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	src/vimtlib/compiler/deplate.vim	/^let s:cpo_save = &cpo$/;"	v
s:cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:data	src/vimtlib/autoload/loremipsum.vim	/^let s:data = expand('<sfile>:p:h') .'\/loremipsum.txt'$/;"	v
s:defaultCommentString	autoload/tcomment.vim	/^let s:defaultCommentString = s:DefaultValue('commentstring')$/;"	v
s:defaultCommentString	src/vimtlib/autoload/tcomment.vim	/^let s:defaultCommentString = s:DefaultValue('commentstring')$/;"	v
s:defaultComments	autoload/tcomment.vim	/^let s:defaultComments      = s:DefaultValue('comments')$/;"	v
s:defaultComments	src/vimtlib/autoload/tcomment.vim	/^let s:defaultComments      = s:DefaultValue('comments')$/;"	v
s:defaults_list	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:delhilink	src/vimtlib/syntax/texmath.vim	/^    let s:delhilink = 0$/;"	v
s:delhilink	src/vimtlib/syntax/texmath.vim	/^    let s:delhilink = 1$/;"	v
s:did_snip_helper	ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snip_helper	src/snipmate.vim/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:did_snips_mappings	src/snipmate.vim/after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:dir	src/vimtlib/autoload/linglang.vim	/^let s:dir = expand('<sfile>:p:h')$/;"	v
s:dir_stack	src/vimtlib/autoload/tlib/dir.vim	/^let s:dir_stack = []$/;"	v
s:directory	bundle/session.vim/plugin/session.vim	/^let s:directory = fnamemodify(g:session_directory, ':p')$/;"	v
s:disabled	bundle/vim-bufsurf/plugin/bufsurf.vim	/^let s:disabled = 0$/;"	v
s:done_bundles	autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:done_bundles	src/vim-pathogen/autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:dont_outdent_after	bundle/vim-coffee-script/indent/coffee.vim	/^let s:dont_outdent_after = '\\<' . s:RegexpGroup('if', 'unless') . '\\>'$/;"	v
s:echo_constraints	src/vimtlib/autoload/ttagecho.vim	/^let s:echo_constraints = ''$/;"	v
s:echo_index	src/vimtlib/autoload/ttagecho.vim	/^let s:echo_index       = -1$/;"	v
s:echo_tags	src/vimtlib/autoload/ttagecho.vim	/^let s:echo_tags        = []$/;"	v
s:efm	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^let s:efm='%-G%\\\\d%\\\\+)%.%#,'$/;"	v
s:efm	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^let s:efm=s:efm . '%D(in\\ %f),'$/;"	v
s:efm	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^let s:efm=s:efm$/;"	v
s:efm_backtrace	bundle/vim-rails/autoload/rails.vim	/^let s:efm_backtrace='%D(in\\ %f),'$/;"	v
s:efm_backtrace	junk/rails.vim	/^let s:efm_backtrace='%D(in\\ %f),'$/;"	v
s:efm_backtrace	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^let s:efm_backtrace='%D(in\\ %f),'$/;"	v
s:efm_ruby	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^let s:efm_ruby='\\%-E-e:%.%#,\\%+E%f:%l:\\ parse\\ error,%W%f:%l:\\ warning:\\ %m,%E%f:%l:in\\ %*[^:]:\\ %m,%E%f:%l:\\ %m,%-C%\\tfrom\\ %f:%l:in\\ %.%#,%-Z%\\tfrom\\ %f:%l,%-Z%p^'$/;"	v
s:escape_chars	plugin/NERD_tree.vim	/^    let s:escape_chars =  " \\\\`\\|\\"#%&,?()\\*^<>"$/;"	v
s:escape_chars	plugin/NERD_tree.vim	/^    let s:escape_chars =  " `\\|\\"#%&,?()\\*^<>"$/;"	v
s:escape_chars	src/nerdtree/plugin/NERD_tree.vim	/^    let s:escape_chars =  " \\\\`\\|\\"#%&,?()\\*^<>"$/;"	v
s:escape_chars	src/nerdtree/plugin/NERD_tree.vim	/^    let s:escape_chars =  " `\\|\\"#%&,?()\\*^<>"$/;"	v
s:ev_set	src/vimtlib/plugin/quickfixsigns.vim	/^    let s:ev_set = []$/;"	v
s:evalSelLogBufNr	src/vimtlib/plugin/EvalSelection.vim	/^let s:evalSelLogBufNr  = -1$/;"	v
s:evalSelModes	src/vimtlib/plugin/EvalSelection.vim	/^let s:evalSelModes     = "xeparl"$/;"	v
s:evalSelectionSchemeCmdLine	src/vimtlib/plugin/EvalSelection.vim	/^            let s:evalSelectionSchemeCmdLine = 'gosh'$/;"	v
s:evalSelectionSchemePrint	src/vimtlib/plugin/EvalSelection.vim	/^        let s:evalSelectionSchemePrint = $/;"	v
s:evalSelectionSchemePrint	src/vimtlib/plugin/EvalSelection.vim	/^        let s:evalSelectionSchemePrint = '(display (begin %{BODY})) (display #\\escape) (flush)'$/;"	v
s:fg_pdef	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:file	bundle/vim-rails/autoload/rails.vim	/^let s:file = expand('<sfile>:p')$/;"	v
s:file	junk/rails.vim	/^let s:file = expand('<sfile>:p')$/;"	v
s:file_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:file_prototype = {}$/;"	v
s:file_prototype	junk/rails.vim	/^let s:file_prototype = {}$/;"	v
s:foo	src/vimtlib/autoload/should/test.vim	/^let s:foo = 123$/;"	v
s:format	src/vimtlib/autoload/tlib/progressbar.vim	/^let s:format = []$/;"	v
s:formatelempat	autoload/tabular.vim	/^let s:formatelempat = '\\%([lrc]\\d\\+\\)'$/;"	v
s:formatelempat	src/tabular/autoload/tabular.vim	/^let s:formatelempat = '\\%([lrc]\\d\\+\\)'$/;"	v
s:green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:grep_rx	src/vimtlib/autoload/trag.vim	/^let s:grep_rx = ''$/;"	v
s:has_reltime	bundle/session.vim/autoload/xolox/misc/timer.vim	/^let s:has_reltime = has('reltime')$/;"	v
s:hdfont	src/vimtlib/syntax/viki.vim	/^      let s:hdfont = " font=". g:vikiHeadingFont$/;"	v
s:hdfont	src/vimtlib/syntax/viki.vim	/^      let s:hdfont = ""$/;"	v
s:hookcursormoved_oldpos	src/vimtlib/autoload/viki.vim	/^let s:hookcursormoved_oldpos = []$/;"	v
s:hooks	bundle/conque-term/autoload/conque_term.vim	/^let s:hooks = { 'after_startup': [], 'buffer_enter': [], 'buffer_leave': [], 'after_keymap': [] }$/;"	v
s:i	bundle/vim-bufsurf/plugin/bufsurf.vim	/^    let s:i += 1$/;"	v
s:i	bundle/vim-bufsurf/plugin/bufsurf.vim	/^let s:i = 1$/;"	v
s:i	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:id_counter	src/vimtlib/autoload/tlib/Object.vim	/^let s:id_counter = 0$/;"	v
s:ignore	src/vimtlib/plugin/cmdlinehelp.vim	/^let s:ignore = 0$/;"	v
s:ignore_buffers	bundle/vim-bufsurf/plugin/bufsurf.vim	/^let s:ignore_buffers = split(g:BufSurfIgnore, ',')$/;"	v
s:indent_after	bundle/vim-coffee-script/indent/coffee.vim	/^let s:indent_after = s:RegexpJoin([s:indent_after_keywords,$/;"	v
s:indent_after_keywords	bundle/vim-coffee-script/indent/coffee.vim	/^let s:indent_after_keywords = '^'$/;"	v
s:indent_after_literals	bundle/vim-coffee-script/indent/coffee.vim	/^let s:indent_after_literals = s:RegexpGroup('\\[', '{', '(', '->', '=>', ':', '=')$/;"	v
s:initialized	bundle/conque-term/autoload/conque_term.vim	/^let s:initialized = 0$/;"	v
s:initialized	src/vimtlib/autoload/tskeleton.vim	/^let s:initialized      = []$/;"	v
s:java_mod	src/vimtlib/plugin/trag.vim	/^let s:java_mod = '\\(\\<\\(final\\|public\\|protected\\|private\\|synchronized\\|volatile\\|abstract\\)\\s\\+\\)*'$/;"	v
s:java_type	src/vimtlib/plugin/trag.vim	/^let s:java_type = '\\(boolean\\|byte\\|short\\|int\\|long\\|float\\|double\\|char\\|void\\|\\u[[:alnum:]_.]*\\)\\s\\+'$/;"	v
s:keepcpo	autoload/vimball.vim	/^let s:keepcpo        = &cpo$/;"	v
s:keepcpo	junk/Align.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	junk/AlignMaps.vim	/^let s:keepcpo         = &cpo$/;"	v
s:keepcpo	junk/AlignPlugin.vim	/^let s:keepcpo            = &cpo$/;"	v
s:keepcpo	junk/cecutil.vim	/^let s:keepcpo        = &cpo$/;"	v
s:keepcpo	plugin/vimballPlugin.vim	/^let s:keepcpo              = &cpo$/;"	v
s:l	sessions/default.vim	/^let s:l = 99 - ((3 * winheight(0) + 26) \/ 53)$/;"	v
s:language_rx	src/vimtlib/autoload/linglang.vim	/^let s:language_rx = {}$/;"	v
s:last_access	src/vimtlib/plugin/tGpg.vim	/^let s:last_access = 0$/;"	v
s:last_run	src/vimtlib/plugin/quickfixsigns.vim	/^let s:last_run = {}$/;"	v
s:lastdate	src/vimtlib/autoload/pim.vim	/^let s:lastdate       = ''$/;"	v
s:laststatus	src/vimtlib/autoload/tlib/progressbar.vim	/^let s:laststatus = []$/;"	v
s:lazycat_list	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:lenSpaceStr	junk/NERD_commenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:lenSpaceStr	src/nerdcommenter/plugin/NERD_commenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:lf_re	plugin/space.vim	/^let s:lf_re = 'l\\%(' .$/;"	v
s:lf_re	src/vim-space/plugin/space.vim	/^let s:lf_re = 'l\\%(' .$/;"	v
s:lines	bundle/vim-coffee-script/syntax/eco.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:list	plugin/scrollcolor.vim	/^let s:list = ""$/;"	v
s:livetimeinit	src/vimtlib/plugin/livetimestamp.vim	/^let s:livetimeinit  = 0$/;"	v
s:livetimestamp	src/vimtlib/plugin/livetimestamp.vim	/^let s:livetimestamp = 0$/;"	v
s:loaded_delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^let s:loaded_delimitMate = 1$/;"	v
s:loaded_delimitMate	junk/delimitMate.vim	/^let s:loaded_delimitMate = 1 " }}}1$/;"	v
s:loaded_evalselection	src/vimtlib/plugin/EvalSelection.vim	/^let s:loaded_evalselection = 16$/;"	v
s:loaded_localvariables	src/vimtlib/plugin/localvariables.vim	/^let s:loaded_localvariables = 1$/;"	v
s:localVariablesAllowExec	src/vimtlib/plugin/localvariables.vim	/^let s:localVariablesAllowExec=1$/;"	v
s:local_marks	src/vimtlib/autoload/tmarks.vim	/^let s:local_marks = split('abcdefghijklmnopqrstuvwxyz', '\\zs')$/;"	v
s:lock_files	bundle/session.vim/autoload/xolox/session.vim	/^  let s:lock_files = []$/;"	v
s:magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:match_words	ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	src/vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	src/vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	src/vim-haml/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:max	src/vimtlib/autoload/tlib/progressbar.vim	/^let s:max = []$/;"	v
s:menu	plugin/nerdtree_plugin/git_menu.vim	/^let s:menu = NERDTreeAddSubmenu({$/;"	v
s:menu_char_prefix	junk/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:modes	plugin/supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	plugin/supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:modifier	junk/cecutil.vim	/^ let s:modifier= "sil "$/;"	v
s:modifier	junk/cecutil.vim	/^ let s:modifier= "sil keepj "$/;"	v
s:molokai_original	colors/molokai.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	colors/molokai.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:molokai_original	colors/monokai_modified.vim	/^    let s:molokai_original = 0$/;"	v
s:molokai_original	colors/monokai_modified.vim	/^    let s:molokai_original = g:molokai_original$/;"	v
s:moria_fontface	colors/moria.vim	/^    let s:moria_fontface = "plain"$/;"	v
s:moria_fontface	colors/moria.vim	/^    let s:moria_fontface = g:moria_fontface$/;"	v
s:moria_monochrome	colors/moria.vim	/^    let s:moria_monochrome = 0$/;"	v
s:moria_monochrome	colors/moria.vim	/^    let s:moria_monochrome = g:moria_monochrome$/;"	v
s:moria_style	colors/moria.vim	/^    let s:moria_style = &background $/;"	v
s:moria_style	colors/moria.vim	/^    let s:moria_style = &background$/;"	v
s:moria_style	colors/moria.vim	/^    let s:moria_style = g:moria_style$/;"	v
s:msg	bundle/session.vim/plugin/session.vim	/^  let s:msg = "session.vim %s: The sessions directory %s isn't writable!"$/;"	v
s:n	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:name	plugin/bufexplorer.vim	/^let s:name = '[BufExplorer]'$/;"	v
s:next_buffer_number	plugin/NERD_tree.vim	/^let s:next_buffer_number = 1$/;"	v
s:next_buffer_number	src/nerdtree/plugin/NERD_tree.vim	/^let s:next_buffer_number = 1$/;"	v
s:none	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:none	src/vimtlib/autoload/tsession.vim	/^let s:none = '*** NONE ***'$/;"	v
s:nullCommentString	autoload/tcomment.vim	/^let s:nullCommentString    = '%s'$/;"	v
s:nullCommentString	src/vimtlib/autoload/tcomment.vim	/^let s:nullCommentString    = '%s'$/;"	v
s:ob	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:old_cpo	plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_cpo	src/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:option_blacklist	src/vimtlib/autoload/spec/speckiller.vim	/^let s:option_blacklist = [$/;"	v
s:option_file	src/vimtlib/autoload/spec/speckiller.vim	/^let s:option_file = expand('<sfile>:p:h') .'\/options_default_'. hostname() .'.dat'$/;"	v
s:options_list	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:options_list=[$/;"	v
s:orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:originBuffer	plugin/bufexplorer.vim	/^let s:originBuffer = 0$/;"	v
s:ou	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:outdent	bundle/vim-coffee-script/indent/coffee.vim	/^let s:outdent = '^'$/;"	v
s:outdent_after	bundle/vim-coffee-script/indent/coffee.vim	/^let s:outdent_after = '^'$/;"	v
s:pimClasses	src/vimtlib/autoload/pim.vim	/^let s:pimClasses     = []$/;"	v
s:pimNoclass	src/vimtlib/autoload/pim.vim	/^let s:pimNoclass     = fnamemodify(g:pimHome, ':h:t')$/;"	v
s:pos	src/vimtlib/plugin/cmdlinehelp.vim	/^let s:pos = -1$/;"	v
s:property	indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:property	src/vim-haml/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:prototype	src/vimtlib/autoload/tlib/Filter_cnf.vim	/^let s:prototype = tlib#Object#New({'_class': ['Filter_cnf'], 'name': 'cnf'}) "{{{2$/;"	v
s:prototype	src/vimtlib/autoload/tlib/Filter_cnfd.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_cnfd'], 'name': 'cnfd'}) "{{{2$/;"	v
s:prototype	src/vimtlib/autoload/tlib/Filter_fuzzy.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_fuzzy'], 'name': 'fuzzy'}) "{{{2$/;"	v
s:prototype	src/vimtlib/autoload/tlib/Filter_seq.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_seq'], 'name': 'seq'}) "{{{2$/;"	v
s:prototype	src/vimtlib/autoload/tlib/Object.vim	/^let s:prototype  = {'_class': ['object'], '_super': [], '_id': 0} "{{{2$/;"	v
s:prototype	src/vimtlib/autoload/tlib/Test.vim	/^let s:prototype = tlib#Object#New({'_class': ['Test']}) "{{{2$/;"	v
s:prototype	src/vimtlib/autoload/tlib/TestChild.vim	/^let s:prototype = tlib#Test#New({'_class': ['TestChild']}) "{{{2$/;"	v
s:prototype	src/vimtlib/autoload/tlib/World.vim	/^let s:prototype = tlib#Object#New({$/;"	v
s:qf_re	plugin/space.vim	/^let s:qf_re = '\\%(' .$/;"	v
s:qf_re	src/vim-space/plugin/space.vim	/^let s:qf_re = '\\%(' .$/;"	v
s:quickfix_mappings	plugin/space.vim	/^    let s:quickfix_mappings = 0$/;"	v
s:quickfix_mappings	plugin/space.vim	/^    let s:quickfix_mappings = 1$/;"	v
s:quickfix_mappings	src/vim-space/plugin/space.vim	/^    let s:quickfix_mappings = 0$/;"	v
s:quickfix_mappings	src/vim-space/plugin/space.vim	/^    let s:quickfix_mappings = 1$/;"	v
s:r	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:readable_prototype	bundle/vim-rails/autoload/rails.vim	/^let s:readable_prototype = {}$/;"	v
s:readable_prototype	junk/rails.vim	/^let s:readable_prototype = {}$/;"	v
s:red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:refreshBufferList	plugin/bufexplorer.vim	/^let s:refreshBufferList = 1$/;"	v
s:register	src/vimtlib/autoload/tlib/signs.vim	/^let s:register = {}$/;"	v
s:register	src/vimtlib/plugin/quickfixsigns.vim	/^let s:register = {}$/;"	v
s:repo_prototype	junk/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repo_prototype	plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repo_prototype	src/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	junk/fugitive.vim	/^let s:repos = {}$/;"	v
s:repos	plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:repos	src/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:rewrite_should	src/vimtlib/autoload/spec.vim	/^let s:rewrite_should = '\\(be\\|throw\\|yield\\|finish\\)'$/;"	v
s:rewrite_table	src/vimtlib/autoload/spec.vim	/^let s:rewrite_table = [$/;"	v
s:rott_list	src/vimtlib/plugin/tGpg.vim	/^let s:rott_list = split(s:rotta, '\\ze')$/;"	v
s:rott_n	src/vimtlib/plugin/tGpg.vim	/^        let s:rott_n = -s:rott_n$/;"	v
s:rott_n	src/vimtlib/plugin/tGpg.vim	/^    let s:rott_n = (97613 * s:rott_n) % 79181$/;"	v
s:rott_n	src/vimtlib/plugin/tGpg.vim	/^let s:rott_n = localtime() % 79181$/;"	v
s:rotta	src/vimtlib/plugin/tGpg.vim	/^let s:rotta = join(map(range(32,126), 'nr2char(v:val)'), '')$/;"	v
s:rottb	src/vimtlib/plugin/tGpg.vim	/^    let s:rottb .= remove(s:rott_list, s:rott_n % len(s:rott_list))$/;"	v
s:rottb	src/vimtlib/plugin/tGpg.vim	/^let s:rottb = ''$/;"	v
s:rubycomplete_rails_loaded	autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:running	plugin/bufexplorer.vim	/^let s:running = 0$/;"	v
s:running_windows	plugin/NERD_tree.vim	/^let s:running_windows = has("win16") || has("win32") || has("win64")$/;"	v
s:running_windows	src/nerdtree/plugin/NERD_tree.vim	/^let s:running_windows = has("win16") || has("win32") || has("win64")$/;"	v
s:s	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:save_cpo	after/plugin/TabularMaps.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugin/supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	src/tabular/after/plugin/TabularMaps.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vim-haml/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vim-rubyredgreen/plugin/rubyredgreen.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/concordance.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/linglang.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/loremipsum.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/setsyntax.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/should.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/should/be.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/should/finish.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/should/maintain.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/should/test.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/should/throw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/should/yield.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/spec.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/spec/speckiller.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tEchoPair.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tassert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlib/Filter_cnf.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlib/Filter_cnfd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlib/Filter_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlib/Filter_seq.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlib/autocmdgroup.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlib/comments.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlib/map.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlib/normal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlib/notify.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlib/signs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlib/syntax.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tlog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tmarks.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/trag/general.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/trag/java.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/trag/rename.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/trag/viki.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tskeleton/completefunc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/tskeleton/omnicomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/ttoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/autoload/viki_viki.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/macros/spec.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/macros/tassert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/02tlib.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/07tassert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/cmdlinehelp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/concordance.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/hookcursormoved.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/linglang.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/loremipsum.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/quickfixsigns.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/setsyntax.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/shymenu.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/spec.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/tcalc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/tmarks.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/trag.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/tregisters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/tsession.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/ttagcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/ttagecho.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/ttags.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/plugin/ttoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/spec/pluginkiller.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/spec/rewrite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/spec/should_be.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/spec/should_finish.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/spec/should_throw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/spec/should_yield.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/spec/spec.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/spec/speckiller.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/spec/speckiller_vim.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/tassert/is.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/tassert/tassert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/tlib/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	src/vimtlib/spec/tlib/input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_updatetime	bundle/conque-term/autoload/conque_term.vim	/^let s:save_updatetime = &updatetime$/;"	v
s:savecpo	autoload/tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:savecpo	plugin/Tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:savecpo	src/tabular/autoload/tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:savecpo	src/tabular/plugin/Tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:saved_cpoptions	junk/vimacs-0.93.vim	/^let s:saved_cpoptions = &cpoptions$/;"	v
s:saved_terminals	bundle/conque-term/autoload/conque_term.vim	/^        let s:saved_terminals = {}$/;"	v
s:scaleFontCols	src/vimtlib/plugin/scalefont.vim	/^let s:scaleFontCols        = 0$/;"	v
s:scaleFontLines	src/vimtlib/plugin/scalefont.vim	/^let s:scaleFontLines       = 0$/;"	v
s:scaleFontMode	src/vimtlib/plugin/scalefont.vim	/^let s:scaleFontMode        = ''$/;"	v
s:scaleFontScaledSize	src/vimtlib/plugin/scalefont.vim	/^let s:scaleFontScaledSize  = 0$/;"	v
s:scaleFontScaledWidth	src/vimtlib/plugin/scalefont.vim	/^let s:scaleFontScaledWidth = 0$/;"	v
s:scaleFontWinHeight	src/vimtlib/plugin/scalefont.vim	/^let s:scaleFontWinHeight   = 0$/;"	v
s:scaleFontWinWidth	src/vimtlib/plugin/scalefont.vim	/^let s:scaleFontWinWidth    = 0$/;"	v
s:scaleMenuBuilt	src/vimtlib/plugin/scalefont.vim	/^let s:scaleMenuBuilt       = 0$/;"	v
s:scratch_name	src/vimtlib/autoload/tmboxbrowser.vim	/^let s:scratch_name = '__MBOX_Browser__'$/;"	v
s:scriptdir	bundle/conque-term/autoload/conque_term.vim	/^let s:scriptdir = expand("<sfile>:h") . '\/'$/;"	v
s:scriptdirpy	bundle/conque-term/autoload/conque_term.vim	/^let s:scriptdirpy = expand("<sfile>:h") . '\/conque_term\/'$/;"	v
s:search_mappings	plugin/space.vim	/^    let s:search_mappings = 0$/;"	v
s:search_mappings	plugin/space.vim	/^    let s:search_mappings = 1$/;"	v
s:search_mappings	src/vim-space/plugin/space.vim	/^    let s:search_mappings = 0$/;"	v
s:search_mappings	src/vim-space/plugin/space.vim	/^    let s:search_mappings = 1$/;"	v
s:select_files_files	src/vimtlib/autoload/tselectfiles.vim	/^let s:select_files_files = {}$/;"	v
s:self_file	src/vimtlib/plugin/07tassert.vim	/^        let s:self_file = escape(expand('<sfile>:p'), " \\t\\n*?[{`$\\\\%#'\\"|!<")$/;"	v
s:self_file	src/vimtlib/plugin/07tassert.vim	/^        let s:self_file = fnameescape(expand('<sfile>:p'))$/;"	v
s:show_menu	src/vimtlib/plugin/shymenu.vim	/^let s:show_menu = s:ShowMenu()$/;"	v
s:sid	bundle/vim-rails/autoload/rails.vim	/^let s:sid = s:sub(maparg("<SID>xx"),'xx$','')$/;"	v
s:sid	junk/rails.vim	/^let s:sid = s:sub(maparg("<SID>xx"),'xx$','')$/;"	v
s:signs	src/vimtlib/plugin/quickfixsigns.vim	/^let s:signs = split(s:signss, '\\n')$/;"	v
s:slate_style	colors/slate.vim	/^    let s:slate_style = 'slate'$/;"	v
s:slate_style	colors/slate.vim	/^    let s:slate_style = g:slate_style$/;"	v
s:snippets	plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:snippets	src/snipmate.vim/plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:so_save	sessions/default.vim	/^let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0$/;"	v
s:solarized_termtrans_default	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sort_by	plugin/bufexplorer.vim	/^let s:sort_by = ["number", "name", "fullpath", "mru", "extension"]$/;"	v
s:source	src/vimtlib/plugin/tbibtools.vim	/^let s:source = expand('<sfile>:p:h:h')$/;"	v
s:sp_back	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:spaceStr	junk/NERD_commenter.vim	/^let s:spaceStr = ' '$/;"	v
s:spaceStr	src/nerdcommenter/plugin/NERD_commenter.vim	/^let s:spaceStr = ' '$/;"	v
s:splitMode	plugin/bufexplorer.vim	/^let s:splitMode = ""$/;"	v
s:statusline	src/vimtlib/autoload/tlib/progressbar.vim	/^let s:statusline = []$/;"	v
s:statuslineflag	colors/spicycode.vim	/^  let s:statuslineflag = 0 $/;"	v
s:sx	sessions/default.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:tEchoPairStyles	src/vimtlib/autoload/tEchoPair.vim	/^let s:tEchoPairStyles = []$/;"	v
s:t_none	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tabHelp	plugin/supertab.vim	/^  let s:tabHelp =$/;"	v
s:tag	indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	src/vim-haml/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag_defs	src/vimtlib/autoload/tskeleton/tags.vim	/^let s:tag_defs = {}$/;"	v
s:tags	src/vimtlib/autoload/ttags.vim	/^let s:tags = {}$/;"	v
s:temp00	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:term_obj	bundle/conque-term/autoload/conque_term.vim	/^let s:term_obj = {'idx': 1, 'var': '', 'is_buffer': 1, 'active': 1, 'buffer_name': '', 'command': ''}$/;"	v
s:terminal_italic	bundle/vim-colors-solarized/colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	bundle/vim-colors-solarized/colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:timestamp	src/vimtlib/autoload/tlib/progressbar.vim	/^let s:timestamp = -1$/;"	v
s:tlist_app_name	junk/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	junk/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	junk/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	junk/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	junk/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	junk/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	junk/taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	junk/taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	junk/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	junk/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	junk/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	junk/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	junk/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	junk/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	junk/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	junk/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	junk/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	junk/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	junk/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	junk/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	junk/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	junk/taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	junk/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	junk/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	junk/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	junk/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	junk/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	junk/taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	junk/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	junk/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	junk/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	junk/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	junk/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	junk/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	junk/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	junk/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	junk/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	junk/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	junk/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	junk/taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	junk/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	junk/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	junk/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	junk/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	junk/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	junk/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	junk/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	junk/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	junk/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	junk/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	junk/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	junk/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	junk/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:tree_markup_reg	plugin/NERD_tree.vim	/^let s:tree_markup_reg = '^[ `|]*[\\-+~]'$/;"	v
s:tree_markup_reg	src/nerdtree/plugin/NERD_tree.vim	/^let s:tree_markup_reg = '^[ `|]*[\\-+~]'$/;"	v
s:tree_up_dir_line	plugin/NERD_tree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:tree_up_dir_line	src/nerdtree/plugin/NERD_tree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:tree_wid	plugin/NERD_tree.vim	/^let s:tree_wid = 2$/;"	v
s:tree_wid	src/nerdtree/plugin/NERD_tree.vim	/^let s:tree_wid = 2$/;"	v
s:tskelBuiltMenu	src/vimtlib/autoload/tskeleton.vim	/^let s:tskelBuiltMenu   = 0$/;"	v
s:tskelCol	src/vimtlib/autoload/tskeleton.vim	/^let s:tskelCol         = 0$/;"	v
s:tskelConditions	src/vimtlib/autoload/tskeleton.vim	/^let s:tskelConditions  = []$/;"	v
s:tskelDestBufNr	src/vimtlib/autoload/tskeleton.vim	/^let s:tskelDestBufNr   = -1$/;"	v
s:tskelLine	src/vimtlib/autoload/tskeleton.vim	/^let s:tskelLine        = 0$/;"	v
s:tskelLoops	src/vimtlib/autoload/tskeleton.vim	/^let s:tskelLoops       = []$/;"	v
s:tskelProcessing	src/vimtlib/autoload/tskeleton.vim	/^let s:tskelProcessing  = 0$/;"	v
s:tskelScratchIdx	src/vimtlib/autoload/tskeleton.vim	/^let s:tskelScratchIdx  = 0$/;"	v
s:tskelScratchMax	src/vimtlib/autoload/tskeleton.vim	/^let s:tskelScratchMax  = 0$/;"	v
s:tskelScratchVars	src/vimtlib/autoload/tskeleton.vim	/^let s:tskelScratchVars = []$/;"	v
s:tskel_filetype	src/vimtlib/syntax/tskeleton.vim	/^let s:tskel_filetype=expand("%:p:h:t")$/;"	v
s:ttogglemenu	src/vimtlib/plugin/shymenu.vim	/^let s:ttogglemenu = 0$/;"	v
s:twfont	src/vimtlib/syntax/viki.vim	/^      let s:twfont = " font=". g:vikiTypewriterFont$/;"	v
s:twfont	src/vimtlib/syntax/viki.vim	/^      let s:twfont = ""$/;"	v
s:types	plugin/bufexplorer.vim	/^let s:types = {"fullname": ':p', "path": ':p:h', "relativename": ':~:.', "relativepath": ':~:.:h', "shortname": ':t'}$/;"	v
s:types	plugin/supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	plugin/supertab.vim	/^  let s:types =$/;"	v
s:types	src/vimtlib/autoload/should/be.vim	/^let s:types = ['number', 'string', 'funcref', 'list', 'dictionary']$/;"	v
s:types	src/vimtlib/macros/tassert.vim	/^let s:types = ['number', 'string', 'funcref', 'list', 'dictionary']$/;"	v
s:u	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:undo_ftplugin	ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	src/vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	src/vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	src/vim-haml/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:units	bundle/session.vim/autoload/xolox/misc/timer.vim	/^let s:units = [['day', 60 * 60 * 24], ['hour', 60 * 60], ['minute', 60], ['second', 1]]$/;"	v
s:unknown_hooks	src/vimtlib/autoload/hookcursormoved.vim	/^let s:unknown_hooks = []$/;"	v
s:user_options	plugin/fuzzyfinder.vim	/^let s:user_options = (exists('g:FuzzyFinderOptions') ? g:FuzzyFinderOptions : {})$/;"	v
s:value	src/vimtlib/autoload/tlib/progressbar.vim	/^let s:value = []$/;"	v
s:vars	src/vimtlib/spec/spec/spec.vim	/^let s:vars = len(g:)$/;"	v
s:view_types	bundle/vim-rails/autoload/rails.vim	/^let s:view_types = split('rhtml,erb,rxml,builder,rjs,mab,liquid,haml,dryml,mn,slim',',')$/;"	v
s:view_types	junk/rails.vim	/^let s:view_types = 'rhtml,erb,rxml,builder,rjs,mab,liquid,haml,dryml,mn'$/;"	v
s:violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:vmode	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:width	src/vimtlib/autoload/tlib/progressbar.vim	/^let s:width = []$/;"	v
s:window_history	bundle/vim-bufsurf/plugin/bufsurf.vim	/^let s:window_history = {}$/;"	v
s:window_history_index	bundle/vim-bufsurf/plugin/bufsurf.vim	/^let s:window_history_index = {}$/;"	v
s:windows	src/vimtlib/plugin/EvalSelection.vim	/^let s:windows = has("win32") || has("win64") || has("win16")$/;"	v
s:windows_compatible	bundle/session.vim/autoload/xolox/misc/path.vim	/^let s:windows_compatible = has('win32') || has('win64')$/;"	v
s:windows_vk	bundle/conque-term/autoload/conque_term.vim	/^let s:windows_vk = {$/;"	v
s:wipebuf	sessions/default.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
s:yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	bundle/vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s:yr_buffer_id	plugin/yankring.vim	/^let s:yr_buffer_id         = -1$/;"	v
s:yr_buffer_last	plugin/yankring.vim	/^let s:yr_buffer_last       = -1$/;"	v
s:yr_buffer_last_winnr	plugin/yankring.vim	/^let s:yr_buffer_last_winnr = -1$/;"	v
s:yr_buffer_name	plugin/yankring.vim	/^let s:yr_buffer_name       = '[YankRing]'$/;"	v
s:yr_has_voperator	plugin/yankring.vim	/^    let s:yr_has_voperator = 1$/;"	v
s:yr_has_voperator	plugin/yankring.vim	/^let s:yr_has_voperator     = 0$/;"	v
s:yr_history_file_v1	plugin/yankring.vim	/^let s:yr_history_file_v1   = $/;"	v
s:yr_history_file_v2	plugin/yankring.vim	/^let s:yr_history_file_v2   = $/;"	v
s:yr_history_last_upd	plugin/yankring.vim	/^let s:yr_history_last_upd  = 0$/;"	v
s:yr_history_v1_nl	plugin/yankring.vim	/^let s:yr_history_v1_nl     = '@@@'$/;"	v
s:yr_history_v1_nl_pat	plugin/yankring.vim	/^let s:yr_history_v1_nl_pat = '\\%(\\\\\\)\\@<!@@@'$/;"	v
s:yr_history_v2_nl	plugin/yankring.vim	/^let s:yr_history_v2_nl     = "\\2" " Use double quotes for a special character$/;"	v
s:yr_history_v2_nl_pat	plugin/yankring.vim	/^let s:yr_history_v2_nl_pat = "\\2"$/;"	v
s:yr_history_version	plugin/yankring.vim	/^let s:yr_history_version   = 'v2'$/;"	v
s:yr_maps_created	plugin/yankring.vim	/^let s:yr_maps_created      = 0$/;"	v
s:yr_maps_created_zap	plugin/yankring.vim	/^let s:yr_maps_created_zap  = 0$/;"	v
s:yr_remove_omap_dot	plugin/yankring.vim	/^let s:yr_remove_omap_dot   = 0$/;"	v
s:yr_search	plugin/yankring.vim	/^let s:yr_search            = ''$/;"	v
s:yr_winsize_chgd	plugin/yankring.vim	/^let s:yr_winsize_chgd      = 0$/;"	v
sanitize_path_string	ruby/command-t/controller.rb	/^    def sanitize_path_string str$/;"	f	class:CommandT.Controller
save	ruby/command-t/settings.rb	/^    def save$/;"	f	class:CommandT.Settings
saveScreenState	plugin/NERD_tree.vim	/^function! s:saveScreenState()$/;"	f
saveScreenState	src/nerdtree/plugin/NERD_tree.vim	/^function! s:saveScreenState()$/;"	f
say	src/vimtlib/ruby/EvalSelection.rb	/^    def say(body) $/;"	f	class:EvalSelectionInterpreter
sbindir	ruby/command-t/Makefile	/^sbindir = $(exec_prefix)\/sbin$/;"	m
scanlineforuris	bundle/vim-rails/autoload/rails.vim	/^function! s:scanlineforuris(line)$/;"	f
scanlineforuris	junk/rails.vim	/^function! s:scanlineforuris(line)$/;"	f
scope_begin	src/vimtlib/ruby/tcalc.rb	/^    def scope_begin$/;"	f	class:TCalc
scope_end	src/vimtlib/ruby/tcalc.rb	/^    def scope_end$/;"	f	class:TCalc
screen	bundle/conque-term/autoload/conque_term/conque.py	/^    screen = None$/;"	v	class:Conque
screen_encoding	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    screen_encoding = 'utf-8'$/;"	v	class:ConqueScreen
screen_height	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    screen_height = 80$/;"	v	class:ConqueScreen
screen_redraw_ct	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    screen_redraw_ct = 1$/;"	v	class:ConqueSole
screen_redraw_ct	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    screen_redraw_ct = 0$/;"	v	class:ConqueSoleSubprocess
screen_top	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    screen_top = 1$/;"	v	class:ConqueScreen
screen_width	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    screen_width = 80$/;"	v	class:ConqueScreen
scrub	bundle/vim-rails/autoload/rails.vim	/^function! s:scrub(collection,item)$/;"	f
scrub	junk/rails.vim	/^function! s:scrub(collection,item)$/;"	f
search	ruby/fuzzy_file_finder.rb	/^  def search(pattern, &block)$/;"	f	class:FuzzyFileFinder
select	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^import select$/;"	i
select	ruby/command-t/vim/window.rb	/^      def self.select window$/;"	F	class:CommandT.VIM.Window
select	ruby/vim/window.rb	/^    def select$/;"	f	class:VIM.Window
select_name	bundle/session.vim/autoload/xolox/session.vim	/^function! s:select_name(name, action) " {{{2$/;"	f
select_next	ruby/command-t/controller.rb	/^    def select_next$/;"	f	class:CommandT.Controller
select_next	ruby/command-t/match_window.rb	/^    def select_next$/;"	f	class:CommandT.MatchWindow
select_prev	ruby/command-t/controller.rb	/^    def select_prev$/;"	f	class:CommandT.Controller
select_prev	ruby/command-t/match_window.rb	/^    def select_prev$/;"	f	class:CommandT.MatchWindow
selected?	ruby/vim/window.rb	/^    def selected?$/;"	f	class:VIM.Window.select
selection	ruby/command-t/match_window.rb	/^    def selection$/;"	f	class:CommandT.MatchWindow
selectiveexpand	bundle/vim-rails/autoload/rails.vim	/^function! s:selectiveexpand(pat,good,default,...)$/;"	f
selectiveexpand	junk/rails.vim	/^function! s:selectiveexpand(pat,good,default,...)$/;"	f
serialize	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    serialize = False$/;"	v	class:ConqueSoleSharedMemory
session_is_locked	bundle/session.vim/autoload/xolox/session.vim	/^function! s:session_is_locked(session_path, ...)$/;"	f
set_bool	ruby/command-t/settings.rb	/^    def set_bool setting, value$/;"	f	class:CommandT.Settings
set_buffer	src/vimtlib/ruby/tvimtools.rb	/^    def set_buffer(buffer=nil)$/;"	f	class:TVimTools
set_cursor	bundle/conque-term/autoload/conque_term/conque.py	/^    def set_cursor(self, line, col):$/;"	m	class:Conque
set_cursor	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def set_cursor(self, line, column):$/;"	m	class:ConqueScreen
set_cursor	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def set_cursor(self, line, column):$/;"	m	class:ConqueSole
set_format	src/vimtlib/ruby/tbibtools.rb	/^        def set_format(acc, *value)$/;"	f
set_level	src/vimtlib/ruby/vimball.rb	/^        def self.set_level$/;"	F	class:Vimball.AppLog
set_level	src/vimtlib/ruby/vimtips2help.rb	/^        def self.set_level$/;"	F	class:Vimtips2Help.AppLog
set_number	ruby/command-t/settings.rb	/^    def set_number setting, value$/;"	f	class:CommandT.Settings
set_screen_width	bundle/conque-term/autoload/conque_term/conque_screen.py	/^    def set_screen_width(self, width):$/;"	m	class:ConqueScreen
set_status	ruby/command-t/prompt.rb	/^    def set_status *args$/;"	f	class:CommandT.Prompt
set_up_file_finder	ruby/command-t/controller.rb	/^    def set_up_file_finder$/;"	f	class:CommandT.Controller
set_up_max_height	ruby/command-t/controller.rb	/^    def set_up_max_height$/;"	f	class:CommandT.Controller
set_window_size	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def set_window_size(self, width, height):$/;"	m	class:ConqueSoleSubprocess
set_word	src/vimtlib/ruby/tcalc.rb	/^    def set_word(word, value)$/;"	f	class:TCalc
setopt	bundle/vim-rails/autoload/rails.vim	/^function! s:setopt(opt,val)$/;"	f
setopt	junk/rails.vim	/^function! s:setopt(opt,val)$/;"	f
setsyntax#Initialize	src/vimtlib/autoload/setsyntax.vim	/^function! setsyntax#Initialize() "{{{3$/;"	f
setsyntax#Set	src/vimtlib/autoload/setsyntax.vim	/^function! setsyntax#Set(mode, ...) "{{{3$/;"	f
setsyntax#SetSyntax	src/vimtlib/autoload/setsyntax.vim	/^function! setsyntax#SetSyntax(syntax_names, ...) "{{{3$/;"	f
setup	src/vimtlib/ruby/EvalSelection.rb	/^    def setup $/;"	f	class:EvalSelectionAbstractInterpreter
setup	src/vimtlib/ruby/EvalSelection.rb	/^    def setup(name, interpreterClass, quiet=false)$/;"	f	class:EvalSelection
setup	src/vimtlib/ruby/tcalc.rb	/^    def setup$/;"	f
setup	src/vimtlib/ruby/tcalc.rb	/^    def setup$/;"	f	class:TCalc
setupStatusline	plugin/NERD_tree.vim	/^function! s:setupStatusline()$/;"	f
setupStatusline	src/nerdtree/plugin/NERD_tree.vim	/^function! s:setupStatusline()$/;"	f
setupSyntaxHighlighting	plugin/NERD_tree.vim	/^function! s:setupSyntaxHighlighting()$/;"	f
setupSyntaxHighlighting	src/nerdtree/plugin/NERD_tree.vim	/^function! s:setupSyntaxHighlighting()$/;"	f
setup_space	plugin/space.vim	/^function! s:setup_space(type, command)$/;"	f
setup_space	src/vim-space/plugin/space.vim	/^function! s:setup_space(type, command)$/;"	f
sharedstatedir	ruby/command-t/Makefile	/^sharedstatedir = $(prefix)\/com$/;"	m
shellesc	junk/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc	plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc	src/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	plugin/fugitive.vim	/^function! s:shellslash(path)$/;"	f
shlex	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^import shlex$/;"	i
shm	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    shm = None$/;"	v	class:ConqueSoleSharedMemory
shm_attributes	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    shm_attributes = None$/;"	v	class:ConqueSoleSubprocess
shm_attributes	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    shm_attributes = None$/;"	v	class:ConqueSoleWrapper
shm_command	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        shm_command = ConqueSoleSharedMemory(CONQUE_SOLE_COMMANDS_SIZE, 'command', mem_key, serialize=True)$/;"	v
shm_command	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    shm_command = None$/;"	v	class:ConqueSoleSubprocess
shm_command	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    shm_command = None$/;"	v	class:ConqueSoleWrapper
shm_input	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    shm_input = None$/;"	v	class:ConqueSoleSubprocess
shm_input	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    shm_input = None$/;"	v	class:ConqueSoleWrapper
shm_key	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    shm_key = ''$/;"	v	class:ConqueSoleWrapper
shm_output	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    shm_output = None$/;"	v	class:ConqueSoleSubprocess
shm_output	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    shm_output = None$/;"	v	class:ConqueSoleWrapper
shm_rescroll	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    shm_rescroll = None$/;"	v	class:ConqueSoleSubprocess
shm_rescroll	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    shm_rescroll = None$/;"	v	class:ConqueSoleWrapper
shm_resize	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    shm_resize = None$/;"	v	class:ConqueSoleSubprocess
shm_resize	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    shm_resize = None$/;"	v	class:ConqueSoleWrapper
shm_stats	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    shm_stats = None$/;"	v	class:ConqueSoleSubprocess
shm_stats	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    shm_stats = None$/;"	v	class:ConqueSoleWrapper
shortcut	src/vimtlib/ruby/tbibtools.rb	/^        def shortcut(hash)$/;"	f	class:TBibTools.Configuration
shortcut_	src/vimtlib/ruby/tbibtools.rb	/^                def shortcut_#{name}(acc=nil)$/;"	f	class:TBibTools.Configuration.shortcut
shortcut_ls	src/vimtlib/ruby/tbibtools.rb	/^        def shortcut_ls(acc=nil)$/;"	f	class:TBibTools.Configuration
shortcut_tml	src/vimtlib/ruby/tbibtools.rb	/^        def shortcut_tml(acc=nil)$/;"	f	class:TBibTools.Configuration
should#__ClearReasons	src/vimtlib/autoload/should.vim	/^fun! should#__ClearReasons() "{{{3$/;"	f
should#__Eval	src/vimtlib/autoload/should.vim	/^function! should#__Eval(expr) "{{{3$/;"	f
should#__Explain	src/vimtlib/autoload/should.vim	/^fun! should#__Explain(reason)$/;"	f
should#__Init	src/vimtlib/autoload/should.vim	/^fun! should#__Init() "{{{3$/;"	f
should#__InsertReason	src/vimtlib/autoload/should.vim	/^fun! should#__InsertReason(reason) "{{{3$/;"	f
should#__Reasons	src/vimtlib/autoload/should.vim	/^fun! should#__Reasons() "{{{3$/;"	f
should#__Require	src/vimtlib/autoload/should.vim	/^function! should#__Require(what) "{{{3$/;"	f
should#be#A	src/vimtlib/autoload/should/be.vim	/^function! should#be#A(expr, type)$/;"	f
should#be#Dictionary	src/vimtlib/autoload/should/be.vim	/^function! should#be#Dictionary(expr)$/;"	f
should#be#Empty	src/vimtlib/autoload/should/be.vim	/^function! should#be#Empty(expr)$/;"	f
should#be#Equal	src/vimtlib/autoload/should/be.vim	/^function! should#be#Equal(expr, expected)$/;"	f
should#be#Existent	src/vimtlib/autoload/should/be.vim	/^function! should#be#Existent(expr)$/;"	f
should#be#Funcref	src/vimtlib/autoload/should/be.vim	/^function! should#be#Funcref(expr)$/;"	f
should#be#Greater	src/vimtlib/autoload/should/be.vim	/^function! should#be#Greater(a, b) "{{{3$/;"	f
should#be#GreaterEqual	src/vimtlib/autoload/should/be.vim	/^function! should#be#GreaterEqual(a, b) "{{{3$/;"	f
should#be#Less	src/vimtlib/autoload/should/be.vim	/^function! should#be#Less(a, b) "{{{3$/;"	f
should#be#LessEqual	src/vimtlib/autoload/should/be.vim	/^function! should#be#LessEqual(a, b) "{{{3$/;"	f
should#be#Like	src/vimtlib/autoload/should/be.vim	/^function! should#be#Like(string, rx, ...) "{{{3$/;"	f
should#be#List	src/vimtlib/autoload/should/be.vim	/^function! should#be#List(expr)$/;"	f
should#be#Match	src/vimtlib/autoload/should/be.vim	/^function! should#be#Match(expr, expected)$/;"	f
should#be#NotEmpty	src/vimtlib/autoload/should/be.vim	/^function! should#be#NotEmpty(expr)$/;"	f
should#be#NotMatch	src/vimtlib/autoload/should/be.vim	/^function! should#be#NotMatch(expr, expected)$/;"	f
should#be#Number	src/vimtlib/autoload/should/be.vim	/^function! should#be#Number(expr)$/;"	f
should#be#String	src/vimtlib/autoload/should/be.vim	/^function! should#be#String(expr)$/;"	f
should#be#Type	src/vimtlib/autoload/should/be.vim	/^function! should#be#Type(expr, type)$/;"	f
should#be#Unequal	src/vimtlib/autoload/should/be.vim	/^function! should#be#Unequal(expr, expected)$/;"	f
should#be#Unlike	src/vimtlib/autoload/should/be.vim	/^function! should#be#Unlike(string, rx, ...) "{{{3$/;"	f
should#finish#InMicroSecs	src/vimtlib/autoload/should/finish.vim	/^function! should#finish#InMicroSecs(expr, msecs) "{{{3$/;"	f
should#finish#InSecs	src/vimtlib/autoload/should/finish.vim	/^function! should#finish#InSecs(expr, secs) "{{{3$/;"	f
should#maintain#WindowLayout	src/vimtlib/autoload/should/maintain.vim	/^function! should#maintain#WindowLayout(layout) "{{{3$/;"	f
should#test#Init	src/vimtlib/autoload/should/test.vim	/^function! should#test#Init() "{{{3$/;"	f
should#throw#Exception	src/vimtlib/autoload/should/throw.vim	/^fun! should#throw#Exception(expr, expected)$/;"	f
should#throw#Something	src/vimtlib/autoload/should/throw.vim	/^fun! should#throw#Something(expr)$/;"	f
should#yield#Buffer	src/vimtlib/autoload/should/yield.vim	/^function! should#yield#Buffer(expr, filename) "{{{3$/;"	f
should#yield#SqueezedBuffer	src/vimtlib/autoload/should/yield.vim	/^function! should#yield#SqueezedBuffer(expr, filename) "{{{3$/;"	f
show	ruby/command-t/controller.rb	/^    def show$/;"	f	class:CommandT.Controller
showMenu	plugin/NERD_tree.vim	/^function! s:showMenu()$/;"	f
showMenu	src/nerdtree/plugin/NERD_tree.vim	/^function! s:showMenu()$/;"	f
show_buffer_finder	ruby/command-t/controller.rb	/^    def show_buffer_finder$/;"	f	class:CommandT.Controller
show_cursor	ruby/command-t/match_window.rb	/^    def show_cursor$/;"	f	class:CommandT.MatchWindow
show_file_finder	ruby/command-t/controller.rb	/^    def show_file_finder$/;"	f	class:CommandT.Controller
show_file_finder	ruby/command-t/stub.rb	/^    def show_file_finder$/;"	f	class:CommandT.Stub
show_message	bundle/session.vim/autoload/xolox/misc/msg.vim	/^function! s:show_message(hlgroup, args)$/;"	f
signal	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^    def signal(self, signum):$/;"	m	class:ConqueSubprocess
signal	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^import signal$/;"	i
simple_bibtex_parser	src/vimtlib/ruby/tbibtools.rb	/^    def simple_bibtex_parser(text, strings_expansion=true)$/;"	f
simple_bibtex_reader	src/vimtlib/ruby/tbibtools.rb	/^    def simple_bibtex_reader(bibfiles)$/;"	f
sitearch	ruby/command-t/Makefile	/^sitearch = universal-darwin10.0$/;"	m
sitearchdir	ruby/command-t/Makefile	/^sitearchdir = $(sitelibdir)\/$(sitearch)$/;"	m
sitedir	ruby/command-t/Makefile	/^sitedir = $(DESTDIR)\/Library\/Ruby\/Site$/;"	m
sitelibdir	ruby/command-t/Makefile	/^sitelibdir = $(sitedir)\/$(ruby_version)$/;"	m
sleep	bundle/conque-term/tests/profile.py	/^from time import sleep$/;"	i
sleep_time	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^        sleep_time = 0.01$/;"	v
sname	bundle/vim-rails/autoload/rails.vim	/^function! s:sname()$/;"	f
sname	junk/rails.vim	/^function! s:sname()$/;"	f
snipMate#expandSnip	autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#expandSnip	src/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#jumpTabStop	autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snipMate#jumpTabStop	src/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snippets_dir	plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
snippets_dir	src/snipmate.vim/plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
sort_case	src/vimtlib/ruby/tbibtools.rb	/^        def sort_case(value)$/;"	f	class:TBibTools.Configuration
sort_key	src/vimtlib/ruby/tbibtools.rb	/^        def sort_key(value)$/;"	f	class:TBibTools.Configuration
sorted_matches_for	ruby/command-t/finder.rb	/^    def sorted_matches_for str, options = {}$/;"	f	class:CommandT.Finder
spec#CloseScratch	src/vimtlib/autoload/spec.vim	/^function! spec#CloseScratch() "{{{3$/;"	f
spec#Feedkeys	src/vimtlib/autoload/spec.vim	/^function! spec#Feedkeys(sequence) "{{{3$/;"	f
spec#Include	src/vimtlib/autoload/spec.vim	/^function! spec#Include(filename, top_spec) "{{{3$/;"	f
spec#OpenScratch	src/vimtlib/autoload/spec.vim	/^function! spec#OpenScratch(...) "{{{3$/;"	f
spec#Replay	src/vimtlib/autoload/spec.vim	/^function! spec#Replay(macro) "{{{3$/;"	f
spec#RewriteRule	src/vimtlib/autoload/spec.vim	/^function! spec#RewriteRule(rx, subst) "{{{3$/;"	f
spec#Val	src/vimtlib/autoload/spec.vim	/^fun! spec#Val(expr)$/;"	f
spec#__AddQFL	src/vimtlib/autoload/spec.vim	/^function! spec#__AddQFL(expr, reason)$/;"	f
spec#__Begin	src/vimtlib/autoload/spec.vim	/^function! spec#__Begin(args, sfile) "{{{3$/;"	f
spec#__Comment	src/vimtlib/autoload/spec.vim	/^function! spec#__Comment(string, ...) "{{{3$/;"	f
spec#__End	src/vimtlib/autoload/spec.vim	/^function! spec#__End(args) "{{{3$/;"	f
spec#__InitSNR	src/vimtlib/autoload/spec.vim	/^fun! spec#__InitSNR(update)$/;"	f
spec#__Rewrite	src/vimtlib/autoload/spec.vim	/^function! spec#__Rewrite(string) "{{{3$/;"	f
spec#__Run	src/vimtlib/autoload/spec.vim	/^function! spec#__Run(path, file, bang) "{{{3$/;"	f
spec#__Setup	src/vimtlib/autoload/spec.vim	/^function! spec#__Setup() "{{{3$/;"	f
spec#__Teardown	src/vimtlib/autoload/spec.vim	/^function! spec#__Teardown() "{{{3$/;"	f
spec#speckiller#OptionSets	src/vimtlib/autoload/spec/speckiller.vim	/^function! spec#speckiller#OptionSets(options, i) "{{{3$/;"	f
spec#speckiller#Reset	src/vimtlib/autoload/spec/speckiller.vim	/^function! spec#speckiller#Reset() "{{{3$/;"	f
specEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:specEdit(cmd,...)$/;"	f
specEdit	junk/rails.vim	/^function! s:specEdit(cmd,...)$/;"	f
specList	bundle/vim-rails/autoload/rails.vim	/^function! s:specList(A,L,P)$/;"	f
specList	junk/rails.vim	/^function! s:specList(A,L,P)$/;"	f
sprintf1	src/vimtlib/autoload/tskeleton.vim	/^function! s:sprintf1(string, arg) "{{{3$/;"	f
sprintf1	src/vimtlib/autoload/viki.vim	/^function! s:sprintf1(string, arg) "{{{3$/;"	f
srcdir	ruby/command-t/Makefile	/^srcdir = .$/;"	m
stack	src/vimtlib/ruby/tcalc.rb	/^    def stack$/;"	f	class:TCalc
stack_empty?	src/vimtlib/ruby/tcalc.rb	/^    def stack_empty?$/;"	f	class:TCalc
stack_get	src/vimtlib/ruby/tcalc.rb	/^    def stack_get(pos)$/;"	f	class:TCalc
stack_pop	src/vimtlib/ruby/tcalc.rb	/^    def stack_pop$/;"	f	class:TCalc
stack_push	src/vimtlib/ruby/tcalc.rb	/^    def stack_push(*args)$/;"	f	class:TCalc
stack_reset	src/vimtlib/ruby/tcalc.rb	/^    def stack_reset(val=[])$/;"	f	class:TCalc
stack_set	src/vimtlib/ruby/tcalc.rb	/^    def stack_set(pos, arg)$/;"	f	class:TCalc
startswith	bundle/vim-rails/autoload/rails.vim	/^function! s:startswith(string,prefix)$/;"	f
startswith	junk/rails.vim	/^function! s:startswith(string,prefix)$/;"	f
state_filter	bundle/session.vim/autoload/xolox/session.vim	/^function! s:state_filter(line)$/;"	f
stdin	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    stdin = None$/;"	v	class:ConqueSoleSubprocess
stdout	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    stdout = None$/;"	v	class:ConqueSoleSubprocess
stepmatch	ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
stepmatch	src/vim-cucumber/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
steps	ftplugin/cucumber.vim	/^function! s:steps(step)$/;"	f
steps	src/vim-cucumber/ftplugin/cucumber.vim	/^function! s:steps(step)$/;"	f
str_len	ruby/command-t/match.c	/^    long    str_len;                \/\/ length of same$/;"	m	struct:__anon1	file:
str_p	ruby/command-t/match.c	/^    char    *str_p;                 \/\/ pointer to string to be searched$/;"	m	struct:__anon1	file:
strip	src/vimtlib/ruby/tbibtools.rb	/^        def strip(*value)$/;"	f	class:TBibTools.Configuration
stripMarkupFromLine	plugin/NERD_tree.vim	/^function! s:stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
stripMarkupFromLine	src/nerdtree/plugin/NERD_tree.vim	/^function! s:stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
strip_prelude	src/vimtlib/ruby/tbibtools.rb	/^        def strip_prelude(value=true)$/;"	f	class:TBibTools.Configuration
struct	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^import struct$/;"	i
stylesheetEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetEdit(cmd,...)$/;"	f
stylesheetEdit	junk/rails.vim	/^function! s:stylesheetEdit(cmd,...)$/;"	f
stylesheetList	bundle/vim-rails/autoload/rails.vim	/^function! s:stylesheetList(A,L,P)$/;"	f
stylesheetList	junk/rails.vim	/^function! s:stylesheetList(A,L,P)$/;"	f
sub	bundle/conque-term/tests/api.vim	/^let sub = conque_term#subprocess('bash')$/;"	v
sub	bundle/vim-rails/autoload/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sub	bundle/vim-rails/plugin/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sub	junk/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	junk/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
sub	plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	src/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sys	bundle/conque-term/autoload/conque_term/conque_globals.py	/^import sys$/;"	i
sys	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^import sys$/;"	i
sys	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^import sys$/;"	i
sysconfdir	ruby/command-t/Makefile	/^sysconfdir = $(prefix)\/etc$/;"	m
t	plugin/space.vim	/^    noremap <expr> <silent> t <SID>setup_space("char", "t")$/;"	m
t	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> t <SID>setup_space("char", "t")$/;"	m
tEchoPair#CollectStyles	src/vimtlib/autoload/tEchoPair.vim	/^fun! tEchoPair#CollectStyles()$/;"	f
tEchoPair#Do_close_indicate	src/vimtlib/autoload/tEchoPair.vim	/^fun! tEchoPair#Do_close_indicate(what, text, c0, l0, c1, l1)$/;"	f
tEchoPair#Do_close_inner	src/vimtlib/autoload/tEchoPair.vim	/^fun! tEchoPair#Do_close_inner(what, text, c0, l0, c1, l1)$/;"	f
tEchoPair#Do_open_indicate	src/vimtlib/autoload/tEchoPair.vim	/^fun! tEchoPair#Do_open_indicate(what, text, c0, l0, c1, l1)$/;"	f
tEchoPair#Do_open_inner	src/vimtlib/autoload/tEchoPair.vim	/^fun! tEchoPair#Do_open_inner(what, text, c0, l0, c1, l1)$/;"	f
tEchoPair#Echo	src/vimtlib/autoload/tEchoPair.vim	/^fun! tEchoPair#Echo(backwards, type, ...)$/;"	f
tEchoPair#Install	src/vimtlib/autoload/tEchoPair.vim	/^fun! tEchoPair#Install(pattern, ...)$/;"	f
tEchoPair#Reset	src/vimtlib/autoload/tEchoPair.vim	/^fun! tEchoPair#Reset()$/;"	f
tGpg	src/vimtlib/plugin/tGpg.vim	/^augroup tGpg$/;"	a
tSkeleton	src/vimtlib/plugin/tSkeleton.vim	/^augroup tSkeleton$/;"	a
tabpagevar	plugin/NERD_tree.vim	/^function! s:tabpagevar(tabnr, var)$/;"	f
tabpagevar	src/nerdtree/plugin/NERD_tree.vim	/^function! s:tabpagevar(tabnr, var)$/;"	f
tabstops	bundle/conque-term/autoload/conque_term/conque.py	/^    tabstops = []$/;"	v	class:Conque
tabular#ElementFormatPattern	autoload/tabular.vim	/^function! tabular#ElementFormatPattern()$/;"	f
tabular#ElementFormatPattern	src/tabular/autoload/tabular.vim	/^function! tabular#ElementFormatPattern()$/;"	f
tabular#PipeRange	autoload/tabular.vim	/^function! tabular#PipeRange(includepat, ...) range$/;"	f
tabular#PipeRange	src/tabular/autoload/tabular.vim	/^function! tabular#PipeRange(includepat, ...) range$/;"	f
tabular#TabularizeStrings	autoload/tabular.vim	/^function! tabular#TabularizeStrings(strings, delim, ...)$/;"	f
tabular#TabularizeStrings	src/tabular/autoload/tabular.vim	/^function! tabular#TabularizeStrings(strings, delim, ...)$/;"	f
tag_name	src/vimtlib/ruby/vimtips2help.rb	/^    def tag_name(title, marker='*')$/;"	f	class:output_pages
tail_default	src/vimtlib/ruby/tbibtools.rb	/^        def tail_default(e)$/;"	f	class:TBibTools
tail_list	src/vimtlib/ruby/tbibtools.rb	/^        def tail_list(e)$/;"	f	class:TBibTools
talk	src/vimtlib/ruby/EvalSelection.rb	/^    def talk(id, text) $/;"	f	class:EvalSelection
talk	src/vimtlib/ruby/EvalSelection.rb	/^    def talk(text)$/;"	f	class:EvalSelectionAbstractInterpreter
target_prefix	ruby/command-t/Makefile	/^target_prefix = $/;"	m
taskEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:taskEdit(cmd,...)$/;"	f
taskEdit	junk/rails.vim	/^function! s:taskEdit(cmd,...)$/;"	f
taskList	bundle/vim-rails/autoload/rails.vim	/^function! s:taskList(A,L,P)$/;"	f
taskList	junk/rails.vim	/^function! s:taskList(A,L,P)$/;"	f
taskpaper	ftdetect/taskpaper.vim	/^augroup taskpaper$/;"	a
tassert#Comment	src/vimtlib/autoload/tassert.vim	/^function! tassert#Comment(line1, line2, bang) "{{{3$/;"	f
tassert#Uncomment	src/vimtlib/autoload/tassert.vim	/^function! tassert#Uncomment(line1, line2, bang) "{{{3$/;"	f
tbak	src/vimtlib/plugin/tbak.vim	/^augroup tbak$/;"	a
tbak#TBak	src/vimtlib/autoload/tbak.vim	/^fun! tbak#TBak(...) "{{{3$/;"	f
tbak#TBakCleanup	src/vimtlib/autoload/tbak.vim	/^fun! tbak#TBakCleanup(maxversion, ...) "{{{3$/;"	f
tbak#TBakRevert	src/vimtlib/autoload/tbak.vim	/^fun! tbak#TBakRevert(vers, global) "{{{3$/;"	f
tbak#TBakView	src/vimtlib/autoload/tbak.vim	/^fun! tbak#TBakView(vers, ...) "{{{3$/;"	f
tcalc#Calculator	src/vimtlib/autoload/tcalc.vim	/^function! tcalc#Calculator(reset, initial_args) "{{{3$/;"	f
tcalc#Complete	src/vimtlib/autoload/tcalc.vim	/^function! tcalc#Complete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcalc#Eval	src/vimtlib/autoload/tcalc.vim	/^function! tcalc#Eval(initial_args) "{{{3$/;"	f
tcomment#CollectFileTypes	autoload/tcomment.vim	/^function! tcomment#CollectFileTypes()$/;"	f
tcomment#CollectFileTypes	src/vimtlib/autoload/tcomment.vim	/^function! tcomment#CollectFileTypes()$/;"	f
tcomment#Comment	autoload/tcomment.vim	/^function! tcomment#Comment(beg, end, ...)$/;"	f
tcomment#Comment	src/vimtlib/autoload/tcomment.vim	/^function! tcomment#Comment(beg, end, ...)$/;"	f
tcomment#CommentAs	autoload/tcomment.vim	/^function! tcomment#CommentAs(beg, end, commentAnyway, filetype, ...)$/;"	f
tcomment#CommentAs	src/vimtlib/autoload/tcomment.vim	/^function! tcomment#CommentAs(beg, end, commentAnyway, filetype, ...)$/;"	f
tcomment#FileTypes	autoload/tcomment.vim	/^function! tcomment#FileTypes(ArgLead, CmdLine, CursorPos)$/;"	f
tcomment#FileTypes	src/vimtlib/autoload/tcomment.vim	/^function! tcomment#FileTypes(ArgLead, CmdLine, CursorPos)$/;"	f
tcomment#Operator	autoload/tcomment.vim	/^function! tcomment#Operator(type, ...) "{{{3$/;"	f
tcomment#Operator	src/vimtlib/autoload/tcomment.vim	/^function! tcomment#Operator(type, ...) "{{{3$/;"	f
tcomment#OperatorAnyway	autoload/tcomment.vim	/^function! tcomment#OperatorAnyway(type) "{{{3$/;"	f
tcomment#OperatorAnyway	src/vimtlib/autoload/tcomment.vim	/^function! tcomment#OperatorAnyway(type) "{{{3$/;"	f
tcomment#OperatorLine	autoload/tcomment.vim	/^function! tcomment#OperatorLine(type) "{{{3$/;"	f
tcomment#OperatorLine	src/vimtlib/autoload/tcomment.vim	/^function! tcomment#OperatorLine(type) "{{{3$/;"	f
tcomment#OperatorLineAnyway	autoload/tcomment.vim	/^function! tcomment#OperatorLineAnyway(type) "{{{3$/;"	f
tcomment#OperatorLineAnyway	src/vimtlib/autoload/tcomment.vim	/^function! tcomment#OperatorLineAnyway(type) "{{{3$/;"	f
tear_down	src/vimtlib/ruby/EvalSelection.rb	/^    def tear_down $/;"	f	class:EvalSelectionInterpreter
tear_down	src/vimtlib/ruby/EvalSelection.rb	/^    def tear_down$/;"	f	class:EvalSelectionAbstractInterpreter
tear_down	src/vimtlib/ruby/EvalSelection.rb	/^    def tear_down$/;"	f	class:EvalSelectionOLE
tear_down	src/vimtlib/ruby/EvalSelection.rb	/^    def tear_down(id)$/;"	f	class:EvalSelection
tear_down_all	src/vimtlib/ruby/EvalSelection.rb	/^    def tear_down_all$/;"	f	class:EvalSelection
template	src/vimtlib/plugin/tGpg.vim	/^command template$/;"	c
term_obj.close	bundle/conque-term/autoload/conque_term.vim	/^function! s:term_obj.close() dict " {{{$/;"	f
term_obj.focus	bundle/conque-term/autoload/conque_term.vim	/^function! s:term_obj.focus() dict " {{{$/;"	f
term_obj.read	bundle/conque-term/autoload/conque_term.vim	/^function! s:term_obj.read(...) dict " {{{$/;"	f
term_obj.set_callback	bundle/conque-term/autoload/conque_term.vim	/^function! s:term_obj.set_callback(callback_func) dict " {{{$/;"	f
term_obj.write	bundle/conque-term/autoload/conque_term.vim	/^function! s:term_obj.write(...) dict " {{{$/;"	f
term_obj.writeln	bundle/conque-term/autoload/conque_term.vim	/^function! s:term_obj.writeln(...) dict " {{{$/;"	f
termios	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^import termios$/;"	i
test	src/vimtlib/test/tlib.vim	/^let test = tlib#Test#New()$/;"	v
test1	src/vimtlib/test/tlib.vim	/^let test1 = tlib#Test#New()$/;"	v
testc	src/vimtlib/test/tlib.vim	/^let testc = tlib#TestChild#New()$/;"	v
testworld	src/vimtlib/test/tlib.vim	/^let testworld = tlib#World#New()$/;"	v
throw	junk/fugitive.vim	/^function! s:throw(string) abort$/;"	f
throw	plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
throw	src/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
time	bundle/conque-term/autoload/conque_term/conque.py	/^import time # DEBUG$/;"	i
time	bundle/conque-term/autoload/conque_term/conque_sole_communicator.py	/^import time$/;"	i
time	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^import time$/;"	i
time	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^import time$/;"	i
tlib#Filter_cnf#New	src/vimtlib/autoload/tlib/Filter_cnf.vim	/^function! tlib#Filter_cnf#New(...) "{{{3$/;"	f
tlib#Filter_cnfd#New	src/vimtlib/autoload/tlib/Filter_cnfd.vim	/^function! tlib#Filter_cnfd#New(...) "{{{3$/;"	f
tlib#Filter_fuzzy#New	src/vimtlib/autoload/tlib/Filter_fuzzy.vim	/^function! tlib#Filter_fuzzy#New(...) "{{{3$/;"	f
tlib#Filter_seq#New	src/vimtlib/autoload/tlib/Filter_seq.vim	/^function! tlib#Filter_seq#New(...) "{{{3$/;"	f
tlib#Object#New	src/vimtlib/autoload/tlib/Object.vim	/^function! tlib#Object#New(...) "{{{3$/;"	f
tlib#Test#New	src/vimtlib/autoload/tlib/Test.vim	/^function! tlib#Test#New(...) "{{{3$/;"	f
tlib#TestChild#New	src/vimtlib/autoload/tlib/TestChild.vim	/^function! tlib#TestChild#New(...) "{{{3$/;"	f
tlib#World#New	src/vimtlib/autoload/tlib/World.vim	/^function! tlib#World#New(...)$/;"	f
tlib#agent#AND	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#AND(world, selected) "{{{3$/;"	f
tlib#agent#Copy	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Copy(world, selected) "{{{3$/;"	f
tlib#agent#CopyItems	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#CopyItems(world, selected) "{{{3$/;"	f
tlib#agent#Cut	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Cut(world, selected) "{{{3$/;"	f
tlib#agent#Debug	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Debug(world, selected) "{{{3$/;"	f
tlib#agent#DeleteItems	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#DeleteItems(world, selected) "{{{3$/;"	f
tlib#agent#DoAtLine	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#DoAtLine(world, selected) "{{{3$/;"	f
tlib#agent#Down	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Down(world, selected, ...) "{{{3$/;"	f
tlib#agent#DownN	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#DownN(world, selected) "{{{3$/;"	f
tlib#agent#EditFile	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditFile(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInSplit	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInSplit(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInTab	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInTab(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInVSplit	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInVSplit(world, selected) "{{{3$/;"	f
tlib#agent#EditItem	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditItem(world, selected) "{{{3$/;"	f
tlib#agent#EditReturnValue	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#EditReturnValue(world, rv) "{{{3$/;"	f
tlib#agent#Exit	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Exit(world, selected) "{{{3$/;"	f
tlib#agent#GotoLine	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#GotoLine(world, selected) "{{{3$/;"	f
tlib#agent#Help	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Help(world, selected) "{{{3$/;"	f
tlib#agent#Input	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Input(world, selected) "{{{3$/;"	f
tlib#agent#NewItem	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#NewItem(world, selected) "{{{3$/;"	f
tlib#agent#OR	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#OR(world, selected) "{{{3$/;"	f
tlib#agent#PageDown	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#PageDown(world, selected) "{{{3$/;"	f
tlib#agent#PageUp	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#PageUp(world, selected) "{{{3$/;"	f
tlib#agent#Paste	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Paste(world, selected) "{{{3$/;"	f
tlib#agent#PopFilter	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#PopFilter(world, selected) "{{{3$/;"	f
tlib#agent#PreviewLine	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#PreviewLine(world, selected) "{{{3$/;"	f
tlib#agent#ReduceFilter	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#ReduceFilter(world, selected) "{{{3$/;"	f
tlib#agent#Reset	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Reset(world, selected) "{{{3$/;"	f
tlib#agent#Select	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Select(world, selected) "{{{3$/;"	f
tlib#agent#SelectAll	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#SelectAll(world, selected) "{{{3$/;"	f
tlib#agent#SelectDown	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#SelectDown(world, selected) "{{{3$/;"	f
tlib#agent#SelectUp	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#SelectUp(world, selected) "{{{3$/;"	f
tlib#agent#ShiftLeft	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#ShiftLeft(world, selected) "{{{3$/;"	f
tlib#agent#ShiftRight	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#ShiftRight(world, selected) "{{{3$/;"	f
tlib#agent#ShowInfo	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#ShowInfo(world, selected)$/;"	f
tlib#agent#Suspend	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Suspend(world, selected) "{{{3$/;"	f
tlib#agent#SuspendToParentWindow	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#SuspendToParentWindow(world, selected) "{{{3$/;"	f
tlib#agent#ToggleScrollbind	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleScrollbind(world, selected) "{{{3$/;"	f
tlib#agent#ToggleStickyList	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleStickyList(world, selected) "{{{3$/;"	f
tlib#agent#Up	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#Up(world, selected, ...) "{{{3$/;"	f
tlib#agent#UpN	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#UpN(world, selected) "{{{3$/;"	f
tlib#agent#ViewFile	src/vimtlib/autoload/tlib/agent.vim	/^function! tlib#agent#ViewFile(world, selected) "{{{3$/;"	f
tlib#arg#Ex	src/vimtlib/autoload/tlib/arg.vim	/^function! tlib#arg#Ex(arg, ...) "{{{3$/;"	f
tlib#arg#Get	src/vimtlib/autoload/tlib/arg.vim	/^function! tlib#arg#Get(n, var, ...) "{{{3$/;"	f
tlib#arg#Key	src/vimtlib/autoload/tlib/arg.vim	/^function! tlib#arg#Key(list, ...) "{{{3$/;"	f
tlib#arg#Let	src/vimtlib/autoload/tlib/arg.vim	/^function! tlib#arg#Let(list, ...) "{{{3$/;"	f
tlib#arg#StringAsKeyArgs	src/vimtlib/autoload/tlib/arg.vim	/^function! tlib#arg#StringAsKeyArgs(string, ...) "{{{1$/;"	f
tlib#autocmdgroup#Init	src/vimtlib/autoload/tlib/autocmdgroup.vim	/^function! tlib#autocmdgroup#Init() "{{{3$/;"	f
tlib#buffer#BufDo	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#BufDo(exec) "{{{3$/;"	f
tlib#buffer#CurrentByte	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#CurrentByte() "{{{3$/;"	f
tlib#buffer#DeleteRange	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#DeleteRange(line1, line2) "{{{3$/;"	f
tlib#buffer#DisableMRU	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#DisableMRU() "{{{3$/;"	f
tlib#buffer#EnableMRU	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#EnableMRU() "{{{3$/;"	f
tlib#buffer#Eval	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#Eval(buffer, code) "{{{3$/;"	f
tlib#buffer#GetList	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#GetList(...)$/;"	f
tlib#buffer#HighlightLine	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#HighlightLine(line) "{{{3$/;"	f
tlib#buffer#InsertText	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#InsertText(text, ...) "{{{3$/;"	f
tlib#buffer#InsertText0	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#InsertText0(text, ...) "{{{3$/;"	f
tlib#buffer#KeepCursorPosition	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#KeepCursorPosition(cmd) "{{{3$/;"	f
tlib#buffer#ReplaceRange	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#ReplaceRange(line1, line2, lines)$/;"	f
tlib#buffer#ScratchEnd	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#ScratchEnd() "{{{3$/;"	f
tlib#buffer#ScratchStart	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#ScratchStart() "{{{3$/;"	f
tlib#buffer#Set	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#Set(buffer) "{{{3$/;"	f
tlib#buffer#ViewLine	src/vimtlib/autoload/tlib/buffer.vim	/^function! tlib#buffer#ViewLine(line, ...) "{{{3$/;"	f
tlib#cache#Filename	src/vimtlib/autoload/tlib/cache.vim	/^function! tlib#cache#Filename(type, ...) "{{{3$/;"	f
tlib#cache#Get	src/vimtlib/autoload/tlib/cache.vim	/^function! tlib#cache#Get(cfile) "{{{3$/;"	f
tlib#cache#Save	src/vimtlib/autoload/tlib/cache.vim	/^function! tlib#cache#Save(cfile, dictionary) "{{{3$/;"	f
tlib#char#Get	src/vimtlib/autoload/tlib/char.vim	/^function! tlib#char#Get(...) "{{{3$/;"	f
tlib#char#GetWithTimeout	src/vimtlib/autoload/tlib/char.vim	/^function! tlib#char#GetWithTimeout(timeout, ...) "{{{3$/;"	f
tlib#char#IsAvailable	src/vimtlib/autoload/tlib/char.vim	/^function! tlib#char#IsAvailable() "{{{3$/;"	f
tlib#cmd#BrowseOutput	src/vimtlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#BrowseOutput(command) "{{{3$/;"	f
tlib#cmd#OutputAsList	src/vimtlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#OutputAsList(command) "{{{3$/;"	f
tlib#cmd#Time	src/vimtlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#Time(cmd) "{{{3$/;"	f
tlib#cmd#UseVertical	src/vimtlib/autoload/tlib/cmd.vim	/^function! tlib#cmd#UseVertical(...) "{{{3$/;"	f
tlib#comments#Comments	src/vimtlib/autoload/tlib/comments.vim	/^function! tlib#comments#Comments(...)$/;"	f
tlib#dir#CD	src/vimtlib/autoload/tlib/dir.vim	/^function! tlib#dir#CD(dir, ...) "{{{3$/;"	f
tlib#dir#CanonicName	src/vimtlib/autoload/tlib/dir.vim	/^function! tlib#dir#CanonicName(dirname) "{{{3$/;"	f
tlib#dir#Ensure	src/vimtlib/autoload/tlib/dir.vim	/^function! tlib#dir#Ensure(dir) "{{{3$/;"	f
tlib#dir#MyRuntime	src/vimtlib/autoload/tlib/dir.vim	/^function! tlib#dir#MyRuntime() "{{{3$/;"	f
tlib#dir#PlainName	src/vimtlib/autoload/tlib/dir.vim	/^function! tlib#dir#PlainName(dirname) "{{{3$/;"	f
tlib#dir#Pop	src/vimtlib/autoload/tlib/dir.vim	/^function! tlib#dir#Pop() "{{{3$/;"	f
tlib#dir#Push	src/vimtlib/autoload/tlib/dir.vim	/^function! tlib#dir#Push(dir, ...) "{{{3$/;"	f
tlib#eval#FormatValue	src/vimtlib/autoload/tlib/eval.vim	/^function! tlib#eval#FormatValue(value, ...) "{{{3$/;"	f
tlib#file#Join	src/vimtlib/autoload/tlib/file.vim	/^function! tlib#file#Join(filename_parts, ...) "{{{3$/;"	f
tlib#file#Relative	src/vimtlib/autoload/tlib/file.vim	/^function! tlib#file#Relative(filename, basedir) "{{{3$/;"	f
tlib#file#Split	src/vimtlib/autoload/tlib/file.vim	/^function! tlib#file#Split(filename) "{{{3$/;"	f
tlib#file#With	src/vimtlib/autoload/tlib/file.vim	/^function! tlib#file#With(fcmd, bcmd, files, ...) "{{{3$/;"	f
tlib#hook#Run	src/vimtlib/autoload/tlib/hook.vim	/^function! tlib#hook#Run(hook, ...) "{{{3$/;"	f
tlib#input#CommandSelect	src/vimtlib/autoload/tlib/input.vim	/^function! tlib#input#CommandSelect(command, ...) "{{{3$/;"	f
tlib#input#Edit	src/vimtlib/autoload/tlib/input.vim	/^function! tlib#input#Edit(name, value, callback, ...) "{{{3$/;"	f
tlib#input#EditList	src/vimtlib/autoload/tlib/input.vim	/^function! tlib#input#EditList(query, list, ...) "{{{3$/;"	f
tlib#input#List	src/vimtlib/autoload/tlib/input.vim	/^function! tlib#input#List(type, ...) "{{{3$/;"	f
tlib#input#ListD	src/vimtlib/autoload/tlib/input.vim	/^function! tlib#input#ListD(dict) "{{{3$/;"	f
tlib#input#ListW	src/vimtlib/autoload/tlib/input.vim	/^function! tlib#input#ListW(world, ...) "{{{3$/;"	f
tlib#input#Resume	src/vimtlib/autoload/tlib/input.vim	/^function! tlib#input#Resume(name, pick) "{{{3$/;"	f
tlib#list#All	src/vimtlib/autoload/tlib/list.vim	/^function! tlib#list#All(list, expr) "{{{3$/;"	f
tlib#list#Any	src/vimtlib/autoload/tlib/list.vim	/^function! tlib#list#Any(list, expr) "{{{3$/;"	f
tlib#list#Compact	src/vimtlib/autoload/tlib/list.vim	/^function! tlib#list#Compact(list) "{{{3$/;"	f
tlib#list#Find	src/vimtlib/autoload/tlib/list.vim	/^function! tlib#list#Find(list, filter, ...) "{{{3$/;"	f
tlib#list#FindAll	src/vimtlib/autoload/tlib/list.vim	/^function! tlib#list#FindAll(list, filter, ...) "{{{3$/;"	f
tlib#list#Flatten	src/vimtlib/autoload/tlib/list.vim	/^function! tlib#list#Flatten(list) "{{{3$/;"	f
tlib#list#Inject	src/vimtlib/autoload/tlib/list.vim	/^function! tlib#list#Inject(list, value, Function) "{{{3$/;"	f
tlib#list#Remove	src/vimtlib/autoload/tlib/list.vim	/^function! tlib#list#Remove(list, element) "{{{3$/;"	f
tlib#list#RemoveAll	src/vimtlib/autoload/tlib/list.vim	/^function! tlib#list#RemoveAll(list, element) "{{{3$/;"	f
tlib#list#Uniq	src/vimtlib/autoload/tlib/list.vim	/^function! tlib#list#Uniq(list, ...) "{{{3$/;"	f
tlib#list#Zip	src/vimtlib/autoload/tlib/list.vim	/^function! tlib#list#Zip(lists, ...) "{{{3$/;"	f
tlib#map#PumAccept	src/vimtlib/autoload/tlib/map.vim	/^function! tlib#map#PumAccept(key) "{{{3$/;"	f
tlib#normal#WithRegister	src/vimtlib/autoload/tlib/normal.vim	/^function! tlib#normal#WithRegister(cmd, ...) "{{{3$/;"	f
tlib#notify#Echo	src/vimtlib/autoload/tlib/notify.vim	/^function! tlib#notify#Echo(text, ...) "{{{3$/;"	f
tlib#notify#TrimMessage	src/vimtlib/autoload/tlib/notify.vim	/^function! tlib#notify#TrimMessage(message) "{{{3$/;"	f
tlib#progressbar#Display	src/vimtlib/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Display(value, ...) "{{{3$/;"	f
tlib#progressbar#Init	src/vimtlib/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Init(max, ...) "{{{3$/;"	f
tlib#progressbar#Restore	src/vimtlib/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Restore() "{{{3$/;"	f
tlib#rx#Escape	src/vimtlib/autoload/tlib/rx.vim	/^function! tlib#rx#Escape(text, ...) "{{{3$/;"	f
tlib#rx#EscapeReplace	src/vimtlib/autoload/tlib/rx.vim	/^function! tlib#rx#EscapeReplace(text, ...) "{{{3$/;"	f
tlib#rx#Suffixes	src/vimtlib/autoload/tlib/rx.vim	/^function! tlib#rx#Suffixes(...) "{{{3$/;"	f
tlib#scratch#CloseScratch	src/vimtlib/autoload/tlib/scratch.vim	/^function! tlib#scratch#CloseScratch(keyargs, ...) "{{{3$/;"	f
tlib#scratch#UseScratch	src/vimtlib/autoload/tlib/scratch.vim	/^function! tlib#scratch#UseScratch(...) "{{{3$/;"	f
tlib#signs#ClearAll	src/vimtlib/autoload/tlib/signs.vim	/^function! tlib#signs#ClearAll(sign) "{{{3$/;"	f
tlib#signs#ClearBuffer	src/vimtlib/autoload/tlib/signs.vim	/^function! tlib#signs#ClearBuffer(sign, bufnr) "{{{3$/;"	f
tlib#signs#Mark	src/vimtlib/autoload/tlib/signs.vim	/^function! tlib#signs#Mark(sign, list) "{{{3$/;"	f
tlib#string#Chomp	src/vimtlib/autoload/tlib/string.vim	/^function! tlib#string#Chomp(string) "{{{3$/;"	f
tlib#string#Count	src/vimtlib/autoload/tlib/string.vim	/^function! tlib#string#Count(string, rx) "{{{3$/;"	f
tlib#string#Format	src/vimtlib/autoload/tlib/string.vim	/^function! tlib#string#Format(template, dict) "{{{3$/;"	f
tlib#string#Printf1	src/vimtlib/autoload/tlib/string.vim	/^function! tlib#string#Printf1(format, string) "{{{3$/;"	f
tlib#string#RemoveBackslashes	src/vimtlib/autoload/tlib/string.vim	/^function! tlib#string#RemoveBackslashes(text, ...) "{{{3$/;"	f
tlib#string#Strip	src/vimtlib/autoload/tlib/string.vim	/^function! tlib#string#Strip(string) "{{{3$/;"	f
tlib#string#TrimLeft	src/vimtlib/autoload/tlib/string.vim	/^function! tlib#string#TrimLeft(string) "{{{3$/;"	f
tlib#string#TrimRight	src/vimtlib/autoload/tlib/string.vim	/^function! tlib#string#TrimRight(string) "{{{3$/;"	f
tlib#syntax#Collect	src/vimtlib/autoload/tlib/syntax.vim	/^function! tlib#syntax#Collect() "{{{3$/;"	f
tlib#syntax#Names	src/vimtlib/autoload/tlib/syntax.vim	/^function! tlib#syntax#Names(...) "{{{3$/;"	f
tlib#tab#BufMap	src/vimtlib/autoload/tlib/tab.vim	/^function! tlib#tab#BufMap() "{{{3$/;"	f
tlib#tab#Set	src/vimtlib/autoload/tlib/tab.vim	/^function! tlib#tab#Set(tabnr) "{{{3$/;"	f
tlib#tab#TabWinNr	src/vimtlib/autoload/tlib/tab.vim	/^function! tlib#tab#TabWinNr(buffer) "{{{3$/;"	f
tlib#tag#Collect	src/vimtlib/autoload/tlib/tag.vim	/^function! tlib#tag#Collect(constraints, ...) "{{{3$/;"	f
tlib#tag#Format	src/vimtlib/autoload/tlib/tag.vim	/^function! tlib#tag#Format(tag) "{{{3$/;"	f
tlib#tag#Retrieve	src/vimtlib/autoload/tlib/tag.vim	/^function! tlib#tag#Retrieve(rx, ...) "{{{3$/;"	f
tlib#time#Diff	src/vimtlib/autoload/tlib/time.vim	/^function! tlib#time#Diff(a, b, ...) "{{{3$/;"	f
tlib#time#DiffMSecs	src/vimtlib/autoload/tlib/time.vim	/^function! tlib#time#DiffMSecs(a, b, ...) "{{{3$/;"	f
tlib#time#MSecs	src/vimtlib/autoload/tlib/time.vim	/^function! tlib#time#MSecs() "{{{3$/;"	f
tlib#time#Now	src/vimtlib/autoload/tlib/time.vim	/^function! tlib#time#Now() "{{{3$/;"	f
tlib#type#IsDictionary	src/vimtlib/autoload/tlib/type.vim	/^function! tlib#type#IsDictionary(expr)$/;"	f
tlib#type#IsFuncref	src/vimtlib/autoload/tlib/type.vim	/^function! tlib#type#IsFuncref(expr)$/;"	f
tlib#type#IsList	src/vimtlib/autoload/tlib/type.vim	/^function! tlib#type#IsList(expr)$/;"	f
tlib#type#IsNumber	src/vimtlib/autoload/tlib/type.vim	/^function! tlib#type#IsNumber(expr)$/;"	f
tlib#type#IsString	src/vimtlib/autoload/tlib/type.vim	/^function! tlib#type#IsString(expr)$/;"	f
tlib#url#Decode	src/vimtlib/autoload/tlib/url.vim	/^function! tlib#url#Decode(url) "{{{3$/;"	f
tlib#url#DecodeChar	src/vimtlib/autoload/tlib/url.vim	/^function! tlib#url#DecodeChar(char) "{{{3$/;"	f
tlib#url#Encode	src/vimtlib/autoload/tlib/url.vim	/^function! tlib#url#Encode(url, ...) "{{{3$/;"	f
tlib#url#EncodeChar	src/vimtlib/autoload/tlib/url.vim	/^function! tlib#url#EncodeChar(char) "{{{3$/;"	f
tlib#var#EGet	src/vimtlib/autoload/tlib/var.vim	/^function! tlib#var#EGet(var, namespace, ...) "{{{3$/;"	f
tlib#var#Get	src/vimtlib/autoload/tlib/var.vim	/^function! tlib#var#Get(var, namespace, ...) "{{{3$/;"	f
tlib#var#Let	src/vimtlib/autoload/tlib/var.vim	/^function! tlib#var#Let(name, val) "{{{3$/;"	f
tlib#var#List	src/vimtlib/autoload/tlib/var.vim	/^function! tlib#var#List(rx, ...) "{{{3$/;"	f
tlib#win#GetLayout	src/vimtlib/autoload/tlib/win.vim	/^function! tlib#win#GetLayout(...) "{{{3$/;"	f
tlib#win#List	src/vimtlib/autoload/tlib/win.vim	/^function! tlib#win#List() "{{{3$/;"	f
tlib#win#Set	src/vimtlib/autoload/tlib/win.vim	/^function! tlib#win#Set(winnr) "{{{3$/;"	f
tlib#win#SetLayout	src/vimtlib/autoload/tlib/win.vim	/^function! tlib#win#SetLayout(layout) "{{{3$/;"	f
tlib#win#Width	src/vimtlib/autoload/tlib/win.vim	/^function! tlib#win#Width(wnr) "{{{3$/;"	f
tlist_viki_settings	src/vimtlib/plugin/viki.vim	/^    let tlist_viki_settings="deplate;s:structure"$/;"	v
tlog#Comment	src/vimtlib/autoload/tlog.vim	/^function! tlog#Comment(line1, line2) "{{{3$/;"	f
tlog#Debug	src/vimtlib/autoload/tlog.vim	/^fun! tlog#Debug(text)$/;"	f
tlog#Display_Decho	src/vimtlib/autoload/tlog.vim	/^fun! tlog#Display_Decho(text)$/;"	f
tlog#Display_echo	src/vimtlib/autoload/tlog.vim	/^fun! tlog#Display_echo(text)$/;"	f
tlog#Display_echom	src/vimtlib/autoload/tlog.vim	/^fun! tlog#Display_echom(text)$/;"	f
tlog#Display_file	src/vimtlib/autoload/tlog.vim	/^fun! tlog#Display_file(text)$/;"	f
tlog#Log	src/vimtlib/autoload/tlog.vim	/^fun! tlog#Log(text)$/;"	f
tlog#Style	src/vimtlib/autoload/tlog.vim	/^fun! tlog#Style(style, text)$/;"	f
tlog#Uncomment	src/vimtlib/autoload/tlog.vim	/^function! tlog#Uncomment(line1, line2) "{{{3$/;"	f
tlog#Var	src/vimtlib/autoload/tlog.vim	/^fun! tlog#Var(caller, var, ...)$/;"	f
tmarks#AgentDeleteMark	src/vimtlib/autoload/tmarks.vim	/^function! tmarks#AgentDeleteMark(world, selected) "{{{3$/;"	f
tmarks#DeleteAllMarks	src/vimtlib/autoload/tmarks.vim	/^function! tmarks#DeleteAllMarks() "{{{3$/;"	f
tmarks#DeleteInRange	src/vimtlib/autoload/tmarks.vim	/^function! tmarks#DeleteInRange(...) "{{{3$/;"	f
tmarks#List	src/vimtlib/autoload/tmarks.vim	/^function! tmarks#List() "{{{3$/;"	f
tmarks#PlaceNextMarkAtLine	src/vimtlib/autoload/tmarks.vim	/^function! tmarks#PlaceNextMarkAtLine(...) "{{{3$/;"	f
tmboxbrowser#Convert_image_jpeg	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! tmboxbrowser#Convert_image_jpeg(line1, line2)$/;"	f
tmboxbrowser#Decode_base64	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! tmboxbrowser#Decode_base64(infile, outfile)$/;"	f
tmboxbrowser#TMBoxBrowse	src/vimtlib/autoload/tmboxbrowser.vim	/^fun! tmboxbrowser#TMBoxBrowse(...)$/;"	f
tmboxbrowser#TMBoxSelect	src/vimtlib/autoload/tmboxbrowser.vim	/^function! tmboxbrowser#TMBoxSelect(bang)$/;"	f
tmru	src/vimtlib/plugin/tmru.vim	/^augroup tmru$/;"	a
to_s	ruby/fuzzy_file_finder.rb	/^    def to_s$/;"	f	class:FuzzyFileFinder.CharacterRun
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CHAR_INFO
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CHAR_UNION
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CONSOLE_SCREEN_BUFFER_INFO
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:COORD
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:FOCUS_EVENT_RECORD
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:INPUT_RECORD
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:INPUT_UNION
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:KEY_EVENT_RECORD
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MEMORY_BASIC_INFORMATION
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MENU_EVENT_RECORD
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MOUSE_EVENT_RECORD
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:PROCESS_INFORMATION
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:SECURITY_ATTRIBUTES
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:SMALL_RECT
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:STARTUPINFO
to_str	bundle/conque-term/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:WINDOW_BUFFER_SIZE_RECORD
toggle	plugin/NERD_tree.vim	/^function! s:toggle(dir)$/;"	f
toggle	src/nerdtree/plugin/NERD_tree.vim	/^function! s:toggle(dir)$/;"	f
toggleIgnoreFilter	plugin/NERD_tree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleIgnoreFilter	src/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	plugin/NERD_tree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowBookmarks	src/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	plugin/NERD_tree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowFiles	src/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	plugin/NERD_tree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleShowHidden	src/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	plugin/NERD_tree.vim	/^function! s:toggleZoom()$/;"	f
toggleZoom	src/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleZoom()$/;"	f
toggle_focus	ruby/command-t/controller.rb	/^    def toggle_focus$/;"	f	class:CommandT.Controller
togglebg#map	bundle/vim-colors-solarized/autoload/togglebg.vim	/^function! togglebg#map(mapActivation)$/;"	f
tokenize	src/vimtlib/ruby/tcalc.rb	/^    def tokenize(string)$/;"	f	class:TCalc
top	bundle/conque-term/autoload/conque_term/conque.py	/^    top = 1 # relative to top of screen$/;"	v	class:Conque
top	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    top = 0$/;"	v	class:ConqueSoleSubprocess
topdir	ruby/command-t/Makefile	/^topdir = \/System\/Library\/Frameworks\/Ruby.framework\/Versions\/1.8\/usr\/lib\/ruby\/1.8\/universal-darwin10.0$/;"	m
traceback	bundle/conque-term/autoload/conque_term/conque_globals.py	/^import traceback # DEBUG$/;"	i
trag#AddFiles	src/vimtlib/autoload/trag.vim	/^function! trag#AddFiles(files) "{{{3$/;"	f
trag#AgentEditQFE	src/vimtlib/autoload/trag.vim	/^function! trag#AgentEditQFE(world, selected, ...) "{{{3$/;"	f
trag#AgentGotoQFE	src/vimtlib/autoload/trag.vim	/^function! trag#AgentGotoQFE(world, selected) "{{{3$/;"	f
trag#AgentPreviewQFE	src/vimtlib/autoload/trag.vim	/^function! trag#AgentPreviewQFE(world, selected) "{{{3$/;"	f
trag#AgentRefactor	src/vimtlib/autoload/trag.vim	/^function! trag#AgentRefactor(world, selected) "{{{3$/;"	f
trag#AgentSplitBuffer	src/vimtlib/autoload/trag.vim	/^function! trag#AgentSplitBuffer(world, selected) "{{{3$/;"	f
trag#AgentTabBuffer	src/vimtlib/autoload/trag.vim	/^function! trag#AgentTabBuffer(world, selected) "{{{3$/;"	f
trag#AgentVSplitBuffer	src/vimtlib/autoload/trag.vim	/^function! trag#AgentVSplitBuffer(world, selected) "{{{3$/;"	f
trag#AgentWithSelected	src/vimtlib/autoload/trag.vim	/^function! trag#AgentWithSelected(world, selected) "{{{3$/;"	f
trag#CWord	src/vimtlib/autoload/trag.vim	/^function! trag#CWord() "{{{3$/;"	f
trag#ClearCachedRx	src/vimtlib/autoload/trag.vim	/^function! trag#ClearCachedRx() "{{{3$/;"	f
trag#ClearFiles	src/vimtlib/autoload/trag.vim	/^function! trag#ClearFiles() "{{{3$/;"	f
trag#Edit	src/vimtlib/autoload/trag.vim	/^function! trag#Edit() "{{{3$/;"	f
trag#FindGitRepos	src/vimtlib/autoload/trag.vim	/^function! trag#FindGitRepos() "{{{3$/;"	f
trag#GetGitFiles	src/vimtlib/autoload/trag.vim	/^function! trag#GetGitFiles(repos) "{{{3$/;"	f
trag#GetProjectFiles	src/vimtlib/autoload/trag.vim	/^function! trag#GetProjectFiles(manifest) "{{{3$/;"	f
trag#Grep	src/vimtlib/autoload/trag.vim	/^function! trag#Grep(args, ...) "{{{3$/;"	f
trag#LocList	src/vimtlib/autoload/trag.vim	/^function! trag#LocList(...) "{{{3$/;"	f
trag#QuickList	src/vimtlib/autoload/trag.vim	/^function! trag#QuickList(...) "{{{3$/;"	f
trag#RefactorRename	src/vimtlib/autoload/trag.vim	/^function! trag#RefactorRename(world, selected) "{{{3$/;"	f
trag#RunCmdOnSelected	src/vimtlib/autoload/trag.vim	/^function! trag#RunCmdOnSelected(world, selected, cmd) "{{{3$/;"	f
trag#SetFiles	src/vimtlib/autoload/trag.vim	/^function! trag#SetFiles(...) "{{{3$/;"	f
trag#SetFollowCursor	src/vimtlib/autoload/trag.vim	/^function! trag#SetFollowCursor(world, selected) "{{{3$/;"	f
trag#SetGitFiles	src/vimtlib/autoload/trag.vim	/^function! trag#SetGitFiles(repos) "{{{3$/;"	f
trag#general#Rename	src/vimtlib/autoload/trag/general.vim	/^function! trag#general#Rename(world, selected, rx, subst) "{{{3$/;"	f
trag#java#Rename	src/vimtlib/autoload/trag/java.vim	/^function! trag#java#Rename(world, selected, from, to) "{{{3$/;"	f
trag#rename#Rename	src/vimtlib/autoload/trag/rename.vim	/^function! trag#rename#Rename(world, selected, from, to, suffix) "{{{3$/;"	f
trag#viki#Rename	src/vimtlib/autoload/trag/viki.vim	/^function! trag#viki#Rename(world, selected, from, to) "{{{3$/;"	f
translate_color	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def translate_color(self, attr):$/;"	m	class:ConqueSole
treeExistsForBuf	plugin/NERD_tree.vim	/^function! s:treeExistsForBuf()$/;"	f
treeExistsForBuf	src/nerdtree/plugin/NERD_tree.vim	/^function! s:treeExistsForBuf()$/;"	f
treeExistsForTab	plugin/NERD_tree.vim	/^function! s:treeExistsForTab()$/;"	f
treeExistsForTab	src/nerdtree/plugin/NERD_tree.vim	/^function! s:treeExistsForTab()$/;"	f
truncated_match	ruby/command-t/match_window.rb	/^    def truncated_match str$/;"	f	class:CommandT.MatchWindow
try	bundle/vim-rails/autoload/rails.vim	/^function! s:try(cmd) abort$/;"	f
try	junk/rails.vim	/^function! s:try(cmd) abort$/;"	f
tselectfiles#AgentBatchRenameFile	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#AgentBatchRenameFile(world, selected)$/;"	f
tselectfiles#AgentCopyFile	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#AgentCopyFile(world, selected)$/;"	f
tselectfiles#AgentDeleteFile	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#AgentDeleteFile(world, selected)$/;"	f
tselectfiles#AgentHide	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#AgentHide(world, selected)$/;"	f
tselectfiles#AgentOpenDir	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#AgentOpenDir(world, selected)$/;"	f
tselectfiles#AgentPostprocess	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#AgentPostprocess(world, result)$/;"	f
tselectfiles#AgentPreviewFile	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#AgentPreviewFile(world, selected)$/;"	f
tselectfiles#AgentRenameFile	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#AgentRenameFile(world, selected)$/;"	f
tselectfiles#AgentReset	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#AgentReset(world, selected) "{{{3$/;"	f
tselectfiles#AgentSelectBackups	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#AgentSelectBackups(world, selected)$/;"	f
tselectfiles#BaseFilter	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#BaseFilter(...) "{{{3$/;"	f
tselectfiles#FormatEntry	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#FormatEntry(world, filename) "{{{3$/;"	f
tselectfiles#FormatFilter	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#FormatFilter(world, filename) "{{{3$/;"	f
tselectfiles#FormatFirstLine	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#FormatFirstLine(filename) "{{{3$/;"	f
tselectfiles#FormatVikiMetaDataOrFirstLine	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#FormatVikiMetaDataOrFirstLine(filename) "{{{3$/;"	f
tselectfiles#GetFileList	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#GetFileList(world, mode, ...)$/;"	f
tselectfiles#Grep	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#Grep(world, selected)$/;"	f
tselectfiles#Highlight	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#Highlight(world) "{{{3$/;"	f
tselectfiles#SelectFiles	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#SelectFiles(mode, ...)$/;"	f
tselectfiles#ViewFile	src/vimtlib/autoload/tselectfiles.vim	/^function! tselectfiles#ViewFile(world, selected) "{{{3$/;"	f
tsession#AgentDeleteSession	src/vimtlib/autoload/tsession.vim	/^function! tsession#AgentDeleteSession(world, selected) "{{{3$/;"	f
tsession#AgentNewSession	src/vimtlib/autoload/tsession.vim	/^function! tsession#AgentNewSession(world, selected) "{{{3$/;"	f
tsession#AgentSaveSession	src/vimtlib/autoload/tsession.vim	/^function! tsession#AgentSaveSession(world, selected) "{{{3$/;"	f
tsession#Browse	src/vimtlib/autoload/tsession.vim	/^function! tsession#Browse(...) "{{{3$/;"	f
tsession#Collect	src/vimtlib/autoload/tsession.vim	/^function! tsession#Collect() "{{{3$/;"	f
tsession#Load	src/vimtlib/autoload/tsession.vim	/^function! tsession#Load(...) "{{{3$/;"	f
tsession#Save	src/vimtlib/autoload/tsession.vim	/^function! tsession#Save(...) "{{{3$/;"	f
tsession#Sessions	src/vimtlib/autoload/tsession.vim	/^function! tsession#Sessions() "{{{3$/;"	f
tskeleton#Bit	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Bit(bit, ...) "{{{3$/;"	f
tskeleton#BitDef	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#BitDef(name, ...) "{{{3$/;"	f
tskeleton#BuildBufferMenu	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#BuildBufferMenu(prepareBits) "{{{3$/;"	f
tskeleton#CleanUpBibEntry	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#CleanUpBibEntry() "{{{3$/;"	f
tskeleton#CollectTemplates	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#CollectTemplates() "{{{3$/;"	f
tskeleton#Complete	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Complete(findstart, base)$/;"	f
tskeleton#Complete_scan_tags	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Complete_scan_tags(bit, completions) "{{{3$/;"	f
tskeleton#Complete_scan_words	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Complete_scan_words(bit, completions) "{{{3$/;"	f
tskeleton#Complete_use_completefunc	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Complete_use_completefunc(bit, completions) "{{{3$/;"	f
tskeleton#Complete_use_omnifunc	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Complete_use_omnifunc(bit, completions) "{{{3$/;"	f
tskeleton#CursorMarker	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#CursorMarker(...) "{{{3$/;"	f
tskeleton#DefineAutoCmd	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#DefineAutoCmd(template) "{{{3$/;"	f
tskeleton#Edit	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Edit(...) "{{{3$/;"	f
tskeleton#EditBit	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#EditBit(bit) "{{{3$/;"	f
tskeleton#EditBitCompletion	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#EditBitCompletion(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tskeleton#EvalInDestBuffer	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#EvalInDestBuffer(code) "{{{3$/;"	f
tskeleton#ExecInDestBuffer	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#ExecInDestBuffer(code) "{{{3$/;"	f
tskeleton#ExpandBitUnderCursor	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#ExpandBitUnderCursor(mode, ...) "{{{3$/;"	f
tskeleton#ExpandedAbbreviationTemplate	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#ExpandedAbbreviationTemplate() "{{{3$/;"	f
tskeleton#ExtractMeta	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#ExtractMeta(text)$/;"	f
tskeleton#FetchMiniBits	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#FetchMiniBits(dict, filename, buildmenu) "{{{3$/;"	f
tskeleton#FillIn	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#FillIn(bit, ...) "{{{3$/;"	f
tskeleton#FindTemplate	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#FindTemplate(template) "{{{3$/;"	f
tskeleton#GetCompletions	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#GetCompletions(func, bit) "{{{3$/;"	f
tskeleton#GetVar	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#GetVar(name, ...) "{{{3$/;"	f
tskeleton#GlobBits	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#GlobBits(path, ...) "{{{3$/;"	f
tskeleton#GoToNextTag	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#GoToNextTag() "{{{3$/;"	f
tskeleton#Highlight	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Highlight()$/;"	f
tskeleton#HyperComplete_pum	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#HyperComplete_pum(mode, default) "{{{3$/;"	f
tskeleton#HyperComplete_query	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#HyperComplete_query(mode, default) "{{{3$/;"	f
tskeleton#IncreaseRevisionNumber	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#IncreaseRevisionNumber() "{{{3$/;"	f
tskeleton#Initialize	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Initialize(...) "{{{3$/;"	f
tskeleton#InsertTable	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#InsertTable(rows, cols, rowbeg, rowend, celljoin) "{{{3$/;"	f
tskeleton#IsScratchBuffer	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#IsScratchBuffer()$/;"	f
tskeleton#LateExpand	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#LateExpand() "{{{3$/;"	f
tskeleton#NewBufferMenuItem	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#NewBufferMenuItem(menu, bit, ...)$/;"	f
tskeleton#NewFile	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#NewFile(...) "{{{3$/;"	f
tskeleton#PrepareBits	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#PrepareBits(...) "{{{3$/;"	f
tskeleton#ProcessTag_functions_with_parentheses	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#ProcessTag_functions_with_parentheses(kinds, dict, tag, restargs)$/;"	f
tskeleton#PurifyBit	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#PurifyBit(bit) "{{{3$/;"	f
tskeleton#Repeat	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Repeat(n, string, ...) "{{{3$/;"	f
tskeleton#ReplacePrototypeArgs	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#ReplacePrototypeArgs(text, rest)$/;"	f
tskeleton#ResetBits	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#ResetBits(filetype) "{{{3$/;"	f
tskeleton#Retrieve	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Retrieve(name) "{{{3$/;"	f
tskeleton#SelectBit	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#SelectBit(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tskeleton#SelectTemplate	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#SelectTemplate(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tskeleton#SetCursor	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#SetCursor(from, to, ...) "{{{3$/;"	f
tskeleton#Setup	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#Setup(template, ...) "{{{3$/;"	f
tskeleton#TagRx	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#TagRx() "{{{3$/;"	f
tskeleton#WithSelection	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#WithSelection(pre) "{{{3$/;"	f
tskeleton#WrapMarker	src/vimtlib/autoload/tskeleton.vim	/^function! tskeleton#WrapMarker(text, ...) "{{{3$/;"	f
tskeleton#abbreviations#BufferBits	src/vimtlib/autoload/tskeleton/abbreviations.vim	/^function! tskeleton#abbreviations#BufferBits(dict, filetype) "{{{3$/;"	f
tskeleton#abbreviations#GetAbbreviations	src/vimtlib/autoload/tskeleton/abbreviations.vim	/^function! tskeleton#abbreviations#GetAbbreviations() "{{{3$/;"	f
tskeleton#abbreviations#Initialize	src/vimtlib/autoload/tskeleton/abbreviations.vim	/^function! tskeleton#abbreviations#Initialize() "{{{3$/;"	f
tskeleton#abbreviations#Reset	src/vimtlib/autoload/tskeleton/abbreviations.vim	/^function! tskeleton#abbreviations#Reset() "{{{3$/;"	f
tskeleton#abbreviations#Retrieve	src/vimtlib/autoload/tskeleton/abbreviations.vim	/^function! tskeleton#abbreviations#Retrieve(bit, indent, ft) "{{{3$/;"	f
tskeleton#completefunc#FiletypeBits	src/vimtlib/autoload/tskeleton/completefunc.vim	/^function! tskeleton#completefunc#FiletypeBits(dict, type) "{{{3$/;"	f
tskeleton#completefunc#Initialize	src/vimtlib/autoload/tskeleton/completefunc.vim	/^function! tskeleton#completefunc#Initialize() "{{{3$/;"	f
tskeleton#functions#FiletypeBits_vim	src/vimtlib/autoload/tskeleton/functions.vim	/^function! tskeleton#functions#FiletypeBits_vim(dict, filetype) "{{{3$/;"	f
tskeleton#functions#Initialize	src/vimtlib/autoload/tskeleton/functions.vim	/^function! tskeleton#functions#Initialize() "{{{3$/;"	f
tskeleton#mini#FiletypeBits	src/vimtlib/autoload/tskeleton/mini.vim	/^function! tskeleton#mini#FiletypeBits(dict, type) "{{{3$/;"	f
tskeleton#mini#Initialize	src/vimtlib/autoload/tskeleton/mini.vim	/^function! tskeleton#mini#Initialize() "{{{3$/;"	f
tskeleton#omnicomplete#FiletypeBits	src/vimtlib/autoload/tskeleton/omnicomplete.vim	/^function! tskeleton#omnicomplete#FiletypeBits(dict, type) "{{{3$/;"	f
tskeleton#omnicomplete#Initialize	src/vimtlib/autoload/tskeleton/omnicomplete.vim	/^function! tskeleton#omnicomplete#Initialize() "{{{3$/;"	f
tskeleton#skeleton#FiletypeBits	src/vimtlib/autoload/tskeleton/skeleton.vim	/^function! tskeleton#skeleton#FiletypeBits(dict, type) "{{{3$/;"	f
tskeleton#skeleton#Initialize	src/vimtlib/autoload/tskeleton/skeleton.vim	/^function! tskeleton#skeleton#Initialize() "{{{3$/;"	f
tskeleton#tags#BufferBits	src/vimtlib/autoload/tskeleton/tags.vim	/^function! tskeleton#tags#BufferBits(dict, filetype) "{{{3$/;"	f
tskeleton#tags#Initialize	src/vimtlib/autoload/tskeleton/tags.vim	/^function! tskeleton#tags#Initialize() "{{{3$/;"	f
tskeleton#tags#Process_c	src/vimtlib/autoload/tskeleton/tags.vim	/^function! tskeleton#tags#Process_c(dict, tag)$/;"	f
tskeleton#tags#Process_java	src/vimtlib/autoload/tskeleton/tags.vim	/^function! tskeleton#tags#Process_java(dict, tag)$/;"	f
tskeleton#tags#Process_ruby	src/vimtlib/autoload/tskeleton/tags.vim	/^function! tskeleton#tags#Process_ruby(dict, tag)$/;"	f
tskeleton#tags#Process_vim	src/vimtlib/autoload/tskeleton/tags.vim	/^function! tskeleton#tags#Process_vim(dict, tag)$/;"	f
ttagcomplete#Complete	src/vimtlib/autoload/ttagcomplete.vim	/^function! ttagcomplete#Complete(findstart, base) "{{{3$/;"	f
ttagcomplete#CompleteSkeletons	src/vimtlib/autoload/ttagcomplete.vim	/^function! ttagcomplete#CompleteSkeletons(...) "{{{3$/;"	f
ttagcomplete#FindJavaClass	src/vimtlib/autoload/ttagcomplete.vim	/^function! ttagcomplete#FindJavaClass(name) "{{{3$/;"	f
ttagcomplete#FindJavaClassInTags	src/vimtlib/autoload/ttagcomplete.vim	/^function! ttagcomplete#FindJavaClassInTags(name) "{{{3$/;"	f
ttagcomplete#Java	src/vimtlib/autoload/ttagcomplete.vim	/^function! ttagcomplete#Java(constraints, base, context) "{{{3$/;"	f
ttagcomplete#Off	src/vimtlib/autoload/ttagcomplete.vim	/^function! ttagcomplete#Off(...) "{{{3$/;"	f
ttagcomplete#On	src/vimtlib/autoload/ttagcomplete.vim	/^function! ttagcomplete#On(...) "{{{3$/;"	f
ttagecho#Balloon	src/vimtlib/autoload/ttagecho.vim	/^function! ttagecho#Balloon() "{{{3$/;"	f
ttagecho#Echo	src/vimtlib/autoload/ttagecho.vim	/^function! ttagecho#Echo(rx, many_lines, bang) "{{{3$/;"	f
ttagecho#EchoWord	src/vimtlib/autoload/ttagecho.vim	/^function! ttagecho#EchoWord(bang) "{{{3$/;"	f
ttagecho#EchoWords	src/vimtlib/autoload/ttagecho.vim	/^function! ttagecho#EchoWords(bang) "{{{3$/;"	f
ttagecho#Expr	src/vimtlib/autoload/ttagecho.vim	/^function! ttagecho#Expr(rx, ...) "{{{3$/;"	f
ttagecho#OverParanthesis	src/vimtlib/autoload/ttagecho.vim	/^function! ttagecho#OverParanthesis(mode) "{{{3$/;"	f
ttags#GotoTag	src/vimtlib/autoload/ttags.vim	/^function! ttags#GotoTag(world, selected) "{{{3$/;"	f
ttags#Highlight	src/vimtlib/autoload/ttags.vim	/^function! ttags#Highlight(tags) "{{{3$/;"	f
ttags#InsertTemplate	src/vimtlib/autoload/ttags.vim	/^function! ttags#InsertTemplate(world, selected) "{{{3$/;"	f
ttags#Kinds	src/vimtlib/autoload/ttags.vim	/^function! ttags#Kinds(...) "{{{3$/;"	f
ttags#List	src/vimtlib/autoload/ttags.vim	/^function! ttags#List(use_extra, ...) "{{{3$/;"	f
ttags#PreviewTag	src/vimtlib/autoload/ttags.vim	/^function! ttags#PreviewTag(world, selected) "{{{3$/;"	f
ttags#RewriteCygwinTag	src/vimtlib/autoload/ttags.vim	/^function! ttags#RewriteCygwinTag(filename) "{{{3$/;"	f
ttags#Select	src/vimtlib/autoload/ttags.vim	/^function! ttags#Select(use_extra, keyargs_as_string) "{{{3$/;"	f
ttags#SelectTags	src/vimtlib/autoload/ttags.vim	/^function! ttags#SelectTags(use_extra, constraints) "{{{3$/;"	f
ttoc#Autoword	src/vimtlib/autoload/ttoc.vim	/^function! ttoc#Autoword(onoff) "{{{3$/;"	f
ttoc#Collect	src/vimtlib/autoload/ttoc.vim	/^function! ttoc#Collect(world, return_index, ...) "{{{3$/;"	f
ttoc#FollowCursor	src/vimtlib/autoload/ttoc.vim	/^function! ttoc#FollowCursor(world, selected) "{{{3$/;"	f
ttoc#GotoLine	src/vimtlib/autoload/ttoc.vim	/^function! ttoc#GotoLine(world, selected) "{{{3$/;"	f
ttoc#SetFollowCursor	src/vimtlib/autoload/ttoc.vim	/^function! ttoc#SetFollowCursor(world, selected) "{{{3$/;"	f
ttoc#View	src/vimtlib/autoload/ttoc.vim	/^function! ttoc#View(rx, ...) "{{{3$/;"	f
tty	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^import tty$/;"	i
u	bundle/conque-term/autoload/conque_term/conque_globals.py	/^def u(str_val, str_encoding='utf-8', errors='strict'):$/;"	f
u	src/vimtlib/ftplugin/glark.vim	/^inoremap <silent> <buffer> u <c-o>:call GlarkUpdate()<cr>$/;"	m
u	src/vimtlib/ftplugin/glark.vim	/^noremap  <silent> <buffer> u :call GlarkUpdate()<cr>$/;"	m
uchr	bundle/conque-term/autoload/conque_term/conque_globals.py	/^def uchr(str):$/;"	f
unescape	bundle/session.vim/autoload/xolox/misc/option.vim	/^function! s:unescape(s)$/;"	f
unescape	bundle/session.vim/autoload/xolox/session.vim	/^function! s:unescape(s) " {{{2$/;"	f
unescape_tags	bundle/session.vim/autoload/xolox/misc/option.vim	/^function! s:unescape_tags(s)$/;"	f
unfocus	ruby/command-t/match_window.rb	/^    def unfocus$/;"	f	class:CommandT.MatchWindow
unfocus	ruby/command-t/prompt.rb	/^    def unfocus$/;"	f	class:CommandT.Prompt
uniq	bundle/vim-rails/autoload/rails.vim	/^function! s:uniq(list)$/;"	f
unique	plugin/NERD_tree.vim	/^function! s:unique(list)$/;"	f
unique	src/nerdtree/plugin/NERD_tree.vim	/^function! s:unique(list)$/;"	f
unittestEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:unittestEdit(cmd,...)$/;"	f
unittestEdit	junk/rails.vim	/^function! s:unittestEdit(cmd,...)$/;"	f
unittestList	bundle/vim-rails/autoload/rails.vim	/^function! s:unittestList(A,L,P)$/;"	f
unittestList	junk/rails.vim	/^function! s:unittestList(A,L,P)$/;"	f
unload	ruby/command-t/controller.rb	/^    def unload$/;"	f	class:CommandT.Controller
unload	ruby/command-t/match_window.rb	/^    def unload$/;"	f	class:CommandT.MatchWindow
unlock	ruby/command-t/match_window.rb	/^    def unlock$/;"	f	class:CommandT.MatchWindow
unlock_session	bundle/session.vim/autoload/xolox/session.vim	/^function! s:unlock_session(session_path)$/;"	f
unwrap_tables	bundle/conque-term/autoload/conque_term/conque.py	/^    unwrap_tables = True$/;"	v	class:Conque
upDir	plugin/NERD_tree.vim	/^function! s:upDir(keepState)$/;"	f
upDir	src/nerdtree/plugin/NERD_tree.vim	/^function! s:upDir(keepState)$/;"	f
update_menu	src/vimtlib/ruby/EvalSelection.rb	/^    def update_menu(id)$/;"	f	class:EvalSelection
update_window_size	bundle/conque-term/autoload/conque_term/conque.py	/^    def update_window_size(self, force=False):$/;"	m	class:Conque
update_window_size	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def update_window_size(self):$/;"	m	class:ConqueSole
use_readline	src/vimtlib/ruby/tcalc.rb	/^        def use_readline(val)$/;"	f	class:TCalc
vendorarchdir	ruby/command-t/Makefile	/^vendorarchdir = $(vendorlibdir)\/$(sitearch)$/;"	m
vendordir	ruby/command-t/Makefile	/^vendordir = $(libdir)\/ruby\/vendor_ruby$/;"	m
vendorlibdir	ruby/command-t/Makefile	/^vendorlibdir = $(vendordir)\/$(ruby_version)$/;"	m
viewEdit	bundle/vim-rails/autoload/rails.vim	/^function! s:viewEdit(cmd,...)$/;"	f
viewEdit	junk/rails.vim	/^function! s:viewEdit(cmd,...)$/;"	f
viewList	bundle/vim-rails/autoload/rails.vim	/^function! s:viewList(A,L,P)$/;"	f
viewList	junk/rails.vim	/^function! s:viewList(A,L,P)$/;"	f
viewspattern	bundle/vim-rails/autoload/rails.vim	/^function! s:viewspattern()$/;"	f
viewspattern	junk/rails.vim	/^function! s:viewspattern()$/;"	f
viki	src/vimtlib/plugin/viki.vim	/^augroup viki$/;"	a
viki#Browse	src/vimtlib/autoload/viki.vim	/^function! viki#Browse(name) "{{{3$/;"	f
viki#BrowseComplete	src/vimtlib/autoload/viki.vim	/^function! viki#BrowseComplete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
viki#CanonicFilename	src/vimtlib/autoload/viki.vim	/^function! viki#CanonicFilename(fname) "{{{3$/;"	f
viki#CheckInexistent	src/vimtlib/autoload/viki.vim	/^function! viki#CheckInexistent() "{{{3$/;"	f
viki#CollectFileWords	src/vimtlib/autoload/viki.vim	/^function! viki#CollectFileWords(table, simpleWikiName) "{{{3$/;"	f
viki#CollectHyperWords	src/vimtlib/autoload/viki.vim	/^function! viki#CollectHyperWords(table) "{{{3$/;"	f
viki#DebugCursorPosition	src/vimtlib/autoload/viki.vim	/^function! viki#DebugCursorPosition(...) "{{{3$/;"	f
viki#DecomposeUrl	src/vimtlib/autoload/viki.vim	/^function! viki#DecomposeUrl(dest) "{{{3$/;"	f
viki#Define	src/vimtlib/autoload/viki.vim	/^function! viki#Define(name, prefix, ...) "{{{3$/;"	f
viki#DirListing	src/vimtlib/autoload/viki.vim	/^fun! viki#DirListing(lhs, lhb, indent) "{{{3$/;"	f
viki#DispatchOnFamily	src/vimtlib/autoload/viki.vim	/^function! viki#DispatchOnFamily(fn, ...) "{{{3$/;"	f
viki#Edit	src/vimtlib/autoload/viki.vim	/^function! viki#Edit(name, ...) "{{{3$/;"	f
viki#EditComplete	src/vimtlib/autoload/viki.vim	/^function! viki#EditComplete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
viki#ExecExternal	src/vimtlib/autoload/viki.vim	/^function! viki#ExecExternal(cmd) "{{{3$/;"	f
viki#ExpandSimpleName	src/vimtlib/autoload/viki.vim	/^function! viki#ExpandSimpleName(dest, name, suffix) "{{{3$/;"	f
viki#ExtendedModifier	src/vimtlib/autoload/viki.vim	/^function! viki#ExtendedModifier(part)$/;"	f
viki#Family	src/vimtlib/autoload/viki.vim	/^function! viki#Family(...) "{{{3$/;"	f
viki#FilesCall	src/vimtlib/autoload/viki.vim	/^fun! viki#FilesCall(cmd, bang) "{{{3$/;"	f
viki#FilesCmd	src/vimtlib/autoload/viki.vim	/^fun! viki#FilesCmd(cmd, bang) "{{{3$/;"	f
viki#FilesExec	src/vimtlib/autoload/viki.vim	/^fun! viki#FilesExec(cmd, bang, ...) "{{{3$/;"	f
viki#FilesGetComment	src/vimtlib/autoload/viki.vim	/^fun! viki#FilesGetComment(t) "{{{3$/;"	f
viki#FilesGetFilename	src/vimtlib/autoload/viki.vim	/^fun! viki#FilesGetFilename(t) "{{{3$/;"	f
viki#FilesUpdate	src/vimtlib/autoload/viki.vim	/^fun! viki#FilesUpdate() "{{{3$/;"	f
viki#FilesUpdateAll	src/vimtlib/autoload/viki.vim	/^fun! viki#FilesUpdateAll() "{{{3$/;"	f
viki#FindFileWithSuffix	src/vimtlib/autoload/viki.vim	/^function! viki#FindFileWithSuffix(filename, suffixes) "{{{3$/;"	f
viki#FindNextHeading	src/vimtlib/autoload/viki.vim	/^function! viki#FindNextHeading()$/;"	f
viki#FindNextRegion	src/vimtlib/autoload/viki.vim	/^fun! viki#FindNextRegion(name) "{{{3$/;"	f
viki#FindPrevHeading	src/vimtlib/autoload/viki.vim	/^function! viki#FindPrevHeading()$/;"	f
viki#FindRx	src/vimtlib/autoload/viki.vim	/^function! viki#FindRx() "{{{3$/;"	f
viki#GetAnchorRx	src/vimtlib/autoload/viki.vim	/^function! viki#GetAnchorRx(anchor)$/;"	f
viki#GetIndent	src/vimtlib/autoload/viki.vim	/^fun! viki#GetIndent()$/;"	f
viki#GetLink	src/vimtlib/autoload/viki.vim	/^function! viki#GetLink(ignoreSyntax, ...) "{{{3$/;"	f
viki#GetSimpleRx4SimpleWikiName	src/vimtlib/autoload/viki.vim	/^function! viki#GetSimpleRx4SimpleWikiName() "{{{3$/;"	f
viki#GetSpecialFilesSuffixes	src/vimtlib/autoload/viki.vim	/^function! viki#GetSpecialFilesSuffixes() "{{{3$/;"	f
viki#GetSpecialFilesSuffixesRx	src/vimtlib/autoload/viki.vim	/^function! viki#GetSpecialFilesSuffixesRx(...) "{{{3$/;"	f
viki#GetWinNr	src/vimtlib/autoload/viki.vim	/^function! viki#GetWinNr(...) "{{{3$/;"	f
viki#GoBack	src/vimtlib/autoload/viki.vim	/^function! viki#GoBack(...) "{{{3$/;"	f
viki#GoParent	src/vimtlib/autoload/viki.vim	/^function! viki#GoParent() "{{{3$/;"	f
viki#HighlightInexistent	src/vimtlib/autoload/viki.vim	/^function! viki#HighlightInexistent() "{{{3$/;"	f
viki#HookCheckPreviousPosition	src/vimtlib/autoload/viki.vim	/^function! viki#HookCheckPreviousPosition(mode) "{{{3$/;"	f
viki#HyperWordValue	src/vimtlib/autoload/viki.vim	/^function! viki#HyperWordValue(word) "{{{3$/;"	f
viki#Index	src/vimtlib/autoload/viki.vim	/^function! viki#Index() "{{{3$/;"	f
viki#InterEditArg	src/vimtlib/autoload/viki.vim	/^function! viki#InterEditArg(iname, name) "{{{3$/;"	f
viki#InterVikiDest	src/vimtlib/autoload/viki.vim	/^function! viki#InterVikiDest(vikiname, ...)$/;"	f
viki#InterVikiName	src/vimtlib/autoload/viki.vim	/^function! viki#InterVikiName(vikiname)$/;"	f
viki#InterVikiPart	src/vimtlib/autoload/viki.vim	/^function! viki#InterVikiPart(vikiname)$/;"	f
viki#InterVikiSuffix	src/vimtlib/autoload/viki.vim	/^function! viki#InterVikiSuffix(vikiname, ...)$/;"	f
viki#IsHyperWord	src/vimtlib/autoload/viki.vim	/^function! viki#IsHyperWord(word) "{{{3$/;"	f
viki#IsInRegion	src/vimtlib/autoload/viki.vim	/^function! viki#IsInRegion(line) "{{{3$/;"	f
viki#IsInterViki	src/vimtlib/autoload/viki.vim	/^function! viki#IsInterViki(vikiname)$/;"	f
viki#IsSpecial	src/vimtlib/autoload/viki.vim	/^function! viki#IsSpecial(dest) "{{{3$/;"	f
viki#IsSpecialFile	src/vimtlib/autoload/viki.vim	/^function! viki#IsSpecialFile(dest) "{{{3$/;"	f
viki#IsSpecialProtocol	src/vimtlib/autoload/viki.vim	/^function! viki#IsSpecialProtocol(dest) "{{{3$/;"	f
viki#IsSupportedType	src/vimtlib/autoload/viki.vim	/^function! viki#IsSupportedType(type, ...) "{{{3$/;"	f
viki#LinkDefinition	src/vimtlib/autoload/viki.vim	/^function! viki#LinkDefinition(txt, col, compound, ignoreSyntax, type) "{{{3$/;"	f
viki#MakeDef	src/vimtlib/autoload/viki.vim	/^function! viki#MakeDef(v_name, v_dest, v_anchor, v_part, v_type) "{{{3$/;"	f
viki#MakeName	src/vimtlib/autoload/viki.vim	/^function! viki#MakeName(iviki, name, ...) "{{{3$/;"	f
viki#MakeUrl	src/vimtlib/autoload/viki.vim	/^function! viki#MakeUrl(dest, anchor) "{{{3$/;"	f
viki#MapFunctionality	src/vimtlib/autoload/viki.vim	/^function! viki#MapFunctionality(mf, key)$/;"	f
viki#MapMarkInexistent	src/vimtlib/autoload/viki.vim	/^function! viki#MapMarkInexistent(key, element) "{{{3$/;"	f
viki#MarkInexistentInElement	src/vimtlib/autoload/viki.vim	/^    function! viki#MarkInexistentInElement(elt) "{{{3$/;"	f
viki#MarkInexistentInRange	src/vimtlib/autoload/viki.vim	/^function! viki#MarkInexistentInRange(line1, line2) "{{{3$/;"	f
viki#MarkInexistentInitial	src/vimtlib/autoload/viki.vim	/^function! viki#MarkInexistentInitial() "{{{3$/;"	f
viki#MaybeFollowLink	src/vimtlib/autoload/viki.vim	/^function! viki#MaybeFollowLink(oldmap, ignoreSyntax, ...) "{{{3$/;"	f
viki#MinorModeReset	src/vimtlib/autoload/viki.vim	/^function! viki#MinorModeReset() "{{{3$/;"	f
viki#OpenLink	src/vimtlib/autoload/viki.vim	/^function! viki#OpenLink(filename, anchor, ...) "{{{3$/;"	f
viki#RestoreCursorPosition	src/vimtlib/autoload/viki.vim	/^function! viki#RestoreCursorPosition(...) "{{{3$/;"	f
viki#RxFromCollection	src/vimtlib/autoload/viki.vim	/^function! viki#RxFromCollection(coll) "{{{3$/;"	f
viki#SaveCache	src/vimtlib/autoload/viki.vim	/^function! viki#SaveCache(...) "{{{3$/;"	f
viki#SaveCursorPosition	src/vimtlib/autoload/viki.vim	/^function! viki#SaveCursorPosition() "{{{3$/;"	f
viki#SetAnchorMarks	src/vimtlib/autoload/viki.vim	/^function! viki#SetAnchorMarks() "{{{3$/;"	f
viki#SetBufferVar	src/vimtlib/autoload/viki.vim	/^function! viki#SetBufferVar(name, ...) "{{{3$/;"	f
viki#SetWindow	src/vimtlib/autoload/viki.vim	/^function! viki#SetWindow(winNr) "{{{3$/;"	f
viki#SplitDef	src/vimtlib/autoload/viki.vim	/^function! viki#SplitDef(def) "{{{3$/;"	f
viki#SubstituteArgs	src/vimtlib/autoload/viki.vim	/^function! viki#SubstituteArgs(str, ...) "{{{3$/;"	f
viki#WithSuffix	src/vimtlib/autoload/viki.vim	/^function! viki#WithSuffix(fname)$/;"	f
vikiPriorityListTodo	src/vimtlib/syntax/viki.vim	/^  let vikiPriorityListTodo = ' term=bold,underline cterm=bold gui=bold guifg=Black ctermfg=Black '$/;"	v
viki_anyword#DefineHighlighting	src/vimtlib/autoload/viki_anyword.vim	/^function! viki_anyword#DefineHighlighting(state, ...) "{{{3$/;"	f
viki_anyword#DefineMarkup	src/vimtlib/autoload/viki_anyword.vim	/^function! viki_anyword#DefineMarkup(state) "{{{3$/;"	f
viki_anyword#Find	src/vimtlib/autoload/viki_anyword.vim	/^function! viki_anyword#Find(flag, ...) "{{{3$/;"	f
viki_anyword#MinorMode	src/vimtlib/autoload/viki_anyword.vim	/^function! viki_anyword#MinorMode(state) "{{{3$/;"	f
viki_anyword#SetupBuffer	src/vimtlib/autoload/viki_anyword.vim	/^function! viki_anyword#SetupBuffer(state, ...) "{{{3$/;"	f
viki_latex#CheckFilename	src/vimtlib/autoload/viki_latex.vim	/^function! viki_latex#CheckFilename(filename, ...)$/;"	f
viki_latex#CompleteSimpleNameDef	src/vimtlib/autoload/viki_latex.vim	/^function! viki_latex#CompleteSimpleNameDef(def)$/;"	f
viki_latex#MinorMode	src/vimtlib/autoload/viki_latex.vim	/^function! viki_latex#MinorMode(state)$/;"	f
viki_latex#SetupBuffer	src/vimtlib/autoload/viki_latex.vim	/^function! viki_latex#SetupBuffer(state, ...)$/;"	f
viki_viki#CompleteCmdDef	src/vimtlib/autoload/viki_viki.vim	/^function! viki_viki#CompleteCmdDef(def) "{{{3$/;"	f
viki_viki#CompleteExtendedNameDef	src/vimtlib/autoload/viki_viki.vim	/^function! viki_viki#CompleteExtendedNameDef(def) "{{{3$/;"	f
viki_viki#CompleteSimpleNameDef	src/vimtlib/autoload/viki_viki.vim	/^function! viki_viki#CompleteSimpleNameDef(def) "{{{3$/;"	f
viki_viki#DefineHighlighting	src/vimtlib/autoload/viki_viki.vim	/^function! viki_viki#DefineHighlighting(state) "{{{3$/;"	f
viki_viki#DefineMarkup	src/vimtlib/autoload/viki_viki.vim	/^function! viki_viki#DefineMarkup(state) "{{{3$/;"	f
viki_viki#Find	src/vimtlib/autoload/viki_viki.vim	/^function! viki_viki#Find(flag, ...) "{{{3$/;"	f
viki_viki#FindAnchor	src/vimtlib/autoload/viki_viki.vim	/^function! viki_viki#FindAnchor(anchor) "{{{3$/;"	f
viki_viki#MapKeys	src/vimtlib/autoload/viki_viki.vim	/^function! viki_viki#MapKeys(state) "{{{3$/;"	f
viki_viki#MinorMode	src/vimtlib/autoload/viki_viki.vim	/^function! viki_viki#MinorMode(state) "{{{3$/;"	f
viki_viki#SetupBuffer	src/vimtlib/autoload/viki_viki.vim	/^function! viki_viki#SetupBuffer(state, ...) "{{{3$/;"	f
vim	bundle/conque-term/autoload/conque_term/conque.py	/^import vim$/;"	i
vim	bundle/conque-term/autoload/conque_term/conque_globals.py	/^    import vim$/;"	i
vim	bundle/conque-term/autoload/conque_term/conque_screen.py	/^import vim$/;"	i
vim	bundle/conque-term/autoload/conque_term/conque_sole.py	/^import vim$/;"	i
vim	bundle/conque-term/tests/profile.py	/^import vim$/;"	i
vim	junk/simple_pairs.vim	/^import vim$/;"	m
vimball#Decompress	autoload/vimball.vim	/^fun! vimball#Decompress(fname)$/;"	f
vimball#MkVimball	autoload/vimball.vim	/^fun! vimball#MkVimball(line1,line2,writelevel,...) range$/;"	f
vimball#RestoreSettings	autoload/vimball.vim	/^fun! vimball#RestoreSettings()$/;"	f
vimball#RmVimball	autoload/vimball.vim	/^fun! vimball#RmVimball(...)$/;"	f
vimball#SaveSettings	autoload/vimball.vim	/^fun! vimball#SaveSettings()$/;"	f
vimball#ShowMesg	autoload/vimball.vim	/^fun! vimball#ShowMesg(level,msg)$/;"	f
vimball#Vimball	autoload/vimball.vim	/^fun! vimball#Vimball(really,...)$/;"	f
vt100?	ruby/command-t/controller.rb	/^    def vt100?$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
warn	bundle/vim-rails/autoload/rails.vim	/^function! s:warn(str)$/;"	f
warn	junk/rails.vim	/^function! s:warn(str)$/;"	f
warn	plugin/fugitive.vim	/^function! s:warn(str)$/;"	f
warn	ruby/command-t/stub.rb	/^    def warn *msg$/;"	f	class:CommandT.Stub
wcmd	src/vimtlib/plugin/tGpg.vim	/^        let wcmd = exists('*s:TGpgWrite_'. g) ? 's:TGpgWrite_'. g : 's:TGpgWrite'$/;"	v
window_bottom	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    window_bottom = None$/;"	v	class:ConqueSole
window_height	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    window_height = 40$/;"	v	class:ConqueSoleSubprocess
window_resize	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    def window_resize(self, lines, columns):$/;"	m	class:ConqueSoleWrapper
window_resize	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^    def window_resize(self, lines, columns):$/;"	m	class:ConqueSubprocess
window_top	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    window_top = None$/;"	v	class:ConqueSole
window_width	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    window_width = 160$/;"	v	class:ConqueSoleSubprocess
withId	src/vimtlib/ruby/EvalSelection.rb	/^    def withId(id, *args)$/;"	f	class:EvalSelection
with_args	src/vimtlib/ruby/vimball.rb	/^        def with_args(args)$/;"	f	class:Vimball
with_args	src/vimtlib/ruby/vimtips2help.rb	/^        def with_args(args)$/;"	f	class:Vimtips2Help
with_range	src/vimtlib/ruby/tvimtools.rb	/^    def with_range(from, to, &block)$/;"	f	class:TVimTools
with_vimball	src/vimtlib/ruby/vimball.rb	/^    def with_vimball(vimball)$/;"	f
words	src/vimtlib/ruby/tcalc.rb	/^    def words$/;"	f	class:TCalc
working_columns	bundle/conque-term/autoload/conque_term/conque.py	/^    working_columns = 80 # can be changed by CSI ? 3 l\/h$/;"	v	class:Conque
working_lines	bundle/conque-term/autoload/conque_term/conque.py	/^    working_lines = 24 # can be changed by CSI r$/;"	v	class:Conque
wrap	bundle/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,...)$/;"	f
wrap	junk/surround.vim	/^function! s:wrap(string,char,type,...)$/;"	f
wrap	src/vimtlib/ruby/vimtips2help.rb	/^    def wrap(text)$/;"	f	class:output_pages
wrap_cursor	bundle/conque-term/autoload/conque_term/conque.py	/^    wrap_cursor = False$/;"	v	class:Conque
wrapreg	bundle/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,...)$/;"	f
wrapreg	junk/surround.vim	/^function! s:wrapreg(reg,char,...)$/;"	f
write	bundle/conque-term/autoload/conque_term/conque.py	/^    def write(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write	bundle/conque-term/autoload/conque_term/conque_sole_shared_memory.py	/^    def write(self, text, start=0):$/;"	m	class:ConqueSoleSharedMemory
write	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def write(self):$/;"	m	class:ConqueSoleSubprocess
write	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    def write(self, text):$/;"	m	class:ConqueSoleWrapper
write	bundle/conque-term/autoload/conque_term/conque_subprocess.py	/^    def write(self, input):$/;"	m	class:ConqueSubprocess
write_expr	bundle/conque-term/autoload/conque_term/conque.py	/^    def write_expr(self, expr, set_cursor=True, read=True):$/;"	m	class:Conque
write_latin1	bundle/conque-term/autoload/conque_term/conque.py	/^    def write_latin1(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write_ord	bundle/conque-term/autoload/conque_term/conque.py	/^    def write_ord(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write_plain	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def write_plain(self, text):$/;"	m	class:ConqueSoleSubprocess
write_vk	bundle/conque-term/autoload/conque_term/conque_sole.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSole
write_vk	bundle/conque-term/autoload/conque_term/conque_sole_subprocess.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSoleSubprocess
write_vk	bundle/conque-term/autoload/conque_term/conque_sole_wrapper.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSoleWrapper
xolox#misc#complete#keywords	bundle/session.vim/autoload/xolox/misc/complete.vim	/^function! xolox#misc#complete#keywords(arglead, cmdline, cursorpos)$/;"	f
xolox#misc#escape#pattern	bundle/session.vim/autoload/xolox/misc/escape.vim	/^function! xolox#misc#escape#pattern(string)$/;"	f
xolox#misc#escape#substitute	bundle/session.vim/autoload/xolox/misc/escape.vim	/^function! xolox#misc#escape#substitute(string)$/;"	f
xolox#misc#list#unique	bundle/session.vim/autoload/xolox/misc/list.vim	/^function! xolox#misc#list#unique(list)$/;"	f
xolox#misc#msg#debug	bundle/session.vim/autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#debug(...)$/;"	f
xolox#misc#msg#info	bundle/session.vim/autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#info(...)$/;"	f
xolox#misc#msg#warn	bundle/session.vim/autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#warn(...)$/;"	f
xolox#misc#option#join	bundle/session.vim/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#join(values)$/;"	f
xolox#misc#option#join_tags	bundle/session.vim/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#join_tags(values)$/;"	f
xolox#misc#option#split	bundle/session.vim/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#split(value)$/;"	f
xolox#misc#option#split_tags	bundle/session.vim/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#split_tags(value)$/;"	f
xolox#misc#os#is_win	bundle/session.vim/autoload/xolox/misc/os.vim	/^function! xolox#misc#os#is_win()$/;"	f
xolox#misc#path#absolute	bundle/session.vim/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#absolute(path)$/;"	f
xolox#misc#path#commonprefix	bundle/session.vim/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#commonprefix(paths)$/;"	f
xolox#misc#path#decode	bundle/session.vim/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#decode(encoded_path)$/;"	f
xolox#misc#path#encode	bundle/session.vim/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#encode(path)$/;"	f
xolox#misc#path#equals	bundle/session.vim/autoload/xolox/misc/path.vim	/^  function! xolox#misc#path#equals(a, b)$/;"	f
xolox#misc#path#join	bundle/session.vim/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#join(parts)$/;"	f
xolox#misc#path#merge	bundle/session.vim/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#merge(parent, child, ...)$/;"	f
xolox#misc#path#relative	bundle/session.vim/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#relative(path, base)$/;"	f
xolox#misc#path#split	bundle/session.vim/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#split(path)$/;"	f
xolox#misc#path#tempdir	bundle/session.vim/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#tempdir()$/;"	f
xolox#misc#str#trim	bundle/session.vim/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#trim(s)$/;"	f
xolox#misc#timer#format_timespan	bundle/session.vim/autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#format_timespan(ts)$/;"	f
xolox#misc#timer#start	bundle/session.vim/autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#start()$/;"	f
xolox#misc#timer#stop	bundle/session.vim/autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#stop(...)$/;"	f
xolox#session#auto_dirty_check	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#auto_dirty_check() " {{{2$/;"	f
xolox#session#auto_load	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#auto_load() " {{{2$/;"	f
xolox#session#auto_save	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#auto_save() " {{{2$/;"	f
xolox#session#auto_unlock	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#auto_unlock() " {{{2$/;"	f
xolox#session#close_cmd	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#close_cmd(bang, silent) abort " {{{2$/;"	f
xolox#session#complete_names	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#complete_names(arg, line, pos) " {{{2$/;"	f
xolox#session#delete_cmd	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#delete_cmd(name, bang) " {{{2$/;"	f
xolox#session#get_names	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#get_names() " {{{2$/;"	f
xolox#session#name_to_path	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#name_to_path(name) " {{{2$/;"	f
xolox#session#open_cmd	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#open_cmd(name, bang) abort " {{{2$/;"	f
xolox#session#path_to_name	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#path_to_name(path) " {{{2$/;"	f
xolox#session#restart_cmd	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#restart_cmd(bang, args) abort " {{{2$/;"	f
xolox#session#save_cmd	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#save_cmd(name, bang) abort " {{{2$/;"	f
xolox#session#save_colors	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#save_colors(commands) " {{{2$/;"	f
xolox#session#save_features	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#save_features(commands) " {{{2$/;"	f
xolox#session#save_fullscreen	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#save_fullscreen(commands) " {{{2$/;"	f
xolox#session#save_qflist	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#save_qflist(commands) " {{{2$/;"	f
xolox#session#save_session	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#save_session(commands, filename) " {{{2$/;"	f
xolox#session#save_special_windows	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#save_special_windows(session) " {{{2$/;"	f
xolox#session#save_state	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#save_state(commands) " {{{2$/;"	f
xolox#session#view_cmd	bundle/session.vim/autoload/xolox/session.vim	/^function! xolox#session#view_cmd(name) abort " {{{2$/;"	f
xterm?	ruby/command-t/controller.rb	/^    def xterm?$/;"	f	class:CommandT.Controller.ensure_appropriate_window_selection
xterm_to_rgb	bundle/conque-term/autoload/conque_term/conque.py	/^    def xterm_to_rgb(self, color_code):$/;"	m	class:Conque
yS	bundle/vim-surround/plugin/surround.vim	/^  nmap      yS   <Plug>YSurround$/;"	m
yS	junk/surround.vim	/^    nmap          yS   <Plug>YSurround$/;"	m
ySS	bundle/vim-surround/plugin/surround.vim	/^  nmap      ySS  <Plug>YSsurround$/;"	m
ySS	junk/surround.vim	/^    nmap          ySS  <Plug>YSsurround$/;"	m
ySs	bundle/vim-surround/plugin/surround.vim	/^  nmap      ySs  <Plug>YSsurround$/;"	m
ySs	junk/surround.vim	/^    nmap          ySs  <Plug>YSsurround$/;"	m
ys	bundle/vim-surround/plugin/surround.vim	/^  nmap      ys   <Plug>Ysurround$/;"	m
ys	junk/surround.vim	/^    nmap          ys   <Plug>Ysurround$/;"	m
yss	bundle/vim-surround/plugin/surround.vim	/^  nmap      yss  <Plug>Yssurround$/;"	m
yss	junk/surround.vim	/^    nmap          yss  <Plug>Yssurround$/;"	m
zj	plugin/space.vim	/^    noremap <expr> <silent> zj <SID>setup_space("fold_next", "zj")$/;"	m
zj	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> zj <SID>setup_space("fold_next", "zj")$/;"	m
zk	plugin/space.vim	/^    noremap <expr> <silent> zk <SID>setup_space("fold_next", "zk")$/;"	m
zk	src/vim-space/plugin/space.vim	/^    noremap <expr> <silent> zk <SID>setup_space("fold_next", "zk")$/;"	m
zt	sessions/default.vim	/^normal! zt$/;"	m
